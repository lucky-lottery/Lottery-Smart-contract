{
	"id": "6e25d3c050d90b270778235a767cfdb7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LoteStakingManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"./interfaces/ILotteryReferral.sol\";\r\nimport \"./interfaces/ILotteryToken.sol\";\r\n\r\ninterface ILoteTreasury {\r\n    function mint(address recipient, uint256 amount) external;\r\n}\r\n\r\n// LoteStakingManager is the master of Position. He can make Position and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous power. The ownership\r\n// will be transferred to a governance smart contract once Position is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract LoteStakingManager is Ownable, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        uint256 rewardLockedUp; // Reward locked up.\r\n        uint256 nextHarvestUntil; // When can the user harvest again.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of Positions\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accPositionPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accPositionPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Positions to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that Positions distribution occurs.\r\n        uint256 accPositionPerShare; // Accumulated Positions per share, times 1e12. See below.\r\n        uint16 depositFeeBP; // Deposit fee in basis points\r\n        uint256 harvestInterval; // Harvest interval in seconds\r\n    }\r\n\r\n    // The Lottery TOKEN!\r\n    ILotteryToken public lottery;\r\n    ILoteTreasury public loteTreasury;\r\n    // Dev address.\r\n    address public devAddress;\r\n    // Deposit Fee address\r\n    address public feeAddress;\r\n    // Position tokens created per block.\r\n    uint256 public lotteryPerBlock;\r\n    // Bonus muliplier for early position makers.\r\n    uint256 public constant BONUS_MULTIPLIER = 1;\r\n    // Max harvest interval: 14 days.\r\n    uint256 public constant MAXIMUM_HARVEST_INTERVAL = 14 days;\r\n    uint256 public constant MAX_STAKING_ALLOCATION = 80*10**6*10**18; //80m\r\n\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when Position mining starts.\r\n    uint256 public startBlock;\r\n    // Total locked up rewards\r\n    uint256 public totalLockedUpRewards;\r\n\r\n    uint256 public stakingMinted;\r\n\r\n    // Lottery referral contract address.\r\n    ILotteryReferral public lotteryReferral;\r\n    // Referral commission rate in basis points.\r\n    uint16 public referralCommissionRate = 100;\r\n    // Max referral commission rate: 10%.\r\n    uint16 public constant MAXIMUM_REFERRAL_COMMISSION_RATE = 1000;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n    event EmissionRateUpdated(\r\n        address indexed caller,\r\n        uint256 previousAmount,\r\n        uint256 newAmount\r\n    );\r\n    event ReferralCommissionPaid(\r\n        address indexed user,\r\n        address indexed referrer,\r\n        uint256 commissionAmount\r\n    );\r\n    event RewardLockedUp(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amountLockedUp\r\n    );\r\n\r\n    constructor(\r\n        ILotteryToken _lottery,\r\n        ILoteTreasury _loteTreasury,\r\n        uint256 _startBlock,\r\n        uint256 _lotteryPerBlock\r\n    ) {\r\n        lottery = _lottery;\r\n        loteTreasury = _loteTreasury;\r\n        startBlock = _startBlock;\r\n        lotteryPerBlock = _lotteryPerBlock;\r\n\r\n        devAddress = msg.sender;\r\n        feeAddress = msg.sender;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _lpToken,\r\n        uint16 _depositFeeBP,\r\n        uint256 _harvestInterval,\r\n        bool _withUpdate\r\n    ) public onlyOwner {\r\n        require(\r\n            _depositFeeBP <= 10000,\r\n            \"add: invalid deposit fee basis points\"\r\n        );\r\n        require(\r\n            _harvestInterval <= MAXIMUM_HARVEST_INTERVAL,\r\n            \"add: invalid harvest interval\"\r\n        );\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock\r\n            ? block.number\r\n            : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                lpToken: _lpToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accPositionPerShare: 0,\r\n                depositFeeBP: _depositFeeBP,\r\n                harvestInterval: _harvestInterval\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's Position allocation point and deposit fee. Can only be called by the owner.\r\n    function set(\r\n        uint256 _pid,\r\n        uint256 _allocPoint,\r\n        uint16 _depositFeeBP,\r\n        uint256 _harvestInterval,\r\n        bool _withUpdate\r\n    ) public onlyOwner {\r\n        require(\r\n            _depositFeeBP <= 10000,\r\n            \"set: invalid deposit fee basis points\"\r\n        );\r\n        require(\r\n            _harvestInterval <= MAXIMUM_HARVEST_INTERVAL,\r\n            \"set: invalid harvest interval\"\r\n        );\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(\r\n            _allocPoint\r\n        );\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n        poolInfo[_pid].depositFeeBP = _depositFeeBP;\r\n        poolInfo[_pid].harvestInterval = _harvestInterval;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    // View function to see pending Positions on frontend.\r\n    function pendingPosition(uint256 _pid, address _user)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accPositionPerShare = pool.accPositionPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(\r\n                pool.lastRewardBlock,\r\n                block.number\r\n            );\r\n            uint256 positionReward = multiplier\r\n            .mul(lotteryPerBlock)\r\n            .mul(pool.allocPoint)\r\n            .div(totalAllocPoint);\r\n            accPositionPerShare = accPositionPerShare.add(\r\n                positionReward.mul(1e12).div(lpSupply)\r\n            );\r\n        }\r\n        uint256 pending = user.amount.mul(accPositionPerShare).div(1e12).sub(\r\n            user.rewardDebt\r\n        );\r\n        return pending.add(user.rewardLockedUp);\r\n    }\r\n\r\n    // View function to see if user can harvest Positions.\r\n    function canHarvest(uint256 _pid, address _user)\r\n        public\r\n        view\r\n        returns (bool)\r\n    {\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        return block.timestamp >= user.nextHarvestUntil;\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        require(stakingMinted <= MAX_STAKING_ALLOCATION, \"No more staking\");\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply == 0 || pool.allocPoint == 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 positionReward = multiplier\r\n        .mul(lotteryPerBlock)\r\n        .mul(pool.allocPoint)\r\n        .div(totalAllocPoint);\r\n\r\n        stakingMinted = stakingMinted.add(positionReward.add(positionReward.div(10)));\r\n        loteTreasury.mint(address(this), positionReward);\r\n        // transfer 10% to the dev wallet\r\n        loteTreasury.mint(devAddress, positionReward.div(10));\r\n        pool.accPositionPerShare = pool.accPositionPerShare.add(\r\n            positionReward.mul(1e12).div(lpSupply)\r\n        );\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit LP tokens to PosiStakingManager for Position allocation.\r\n    function deposit(\r\n        uint256 _pid,\r\n        uint256 _amount,\r\n        address _referrer\r\n    ) public nonReentrant {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (\r\n            _amount > 0 &&\r\n            address(lotteryReferral) != address(0) &&\r\n            _referrer != address(0) &&\r\n            _referrer != msg.sender\r\n        ) {\r\n            lotteryReferral.recordReferral(msg.sender, _referrer);\r\n        }\r\n        payOrLockupPendingPosition(_pid);\r\n        if (_amount > 0) {\r\n            pool.lpToken.transferFrom(\r\n                address(msg.sender),\r\n                address(this),\r\n                _amount\r\n            );\r\n            if (address(pool.lpToken) == address(lottery)) {\r\n                uint256 transferTax = _amount\r\n                .mul(lottery.transferTaxRate())\r\n                .div(10000);\r\n                _amount = _amount.sub(transferTax);\r\n            }\r\n            if (pool.depositFeeBP > 0) {\r\n                uint256 depositFee = _amount.mul(pool.depositFeeBP).div(10000);\r\n                pool.lpToken.safeTransfer(feeAddress, depositFee);\r\n                user.amount = user.amount.add(_amount).sub(depositFee);\r\n            } else {\r\n                user.amount = user.amount.add(_amount);\r\n            }\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPositionPerShare).div(1e12);\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from PosiStakingManager.\r\n    function withdraw(uint256 _pid, uint256 _amount) public nonReentrant {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        payOrLockupPendingPosition(_pid);\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPositionPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public nonReentrant {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        user.rewardLockedUp = 0;\r\n        user.nextHarvestUntil = 0;\r\n        pool.lpToken.safeTransfer(address(msg.sender), amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\r\n    }\r\n\r\n    // Pay or lockup pending Positions.\r\n    function payOrLockupPendingPosition(uint256 _pid) internal {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        if (user.nextHarvestUntil == 0) {\r\n            user.nextHarvestUntil = block.timestamp.add(pool.harvestInterval);\r\n        }\r\n\r\n        uint256 pending = user\r\n        .amount\r\n        .mul(pool.accPositionPerShare)\r\n        .div(1e12)\r\n        .sub(user.rewardDebt);\r\n        if (canHarvest(_pid, msg.sender)) {\r\n            if (pending > 0 || user.rewardLockedUp > 0) {\r\n                uint256 totalRewards = pending.add(user.rewardLockedUp);\r\n\r\n                // reset lockup\r\n                totalLockedUpRewards = totalLockedUpRewards.sub(\r\n                    user.rewardLockedUp\r\n                );\r\n                user.rewardLockedUp = 0;\r\n                user.nextHarvestUntil = block.timestamp.add(\r\n                    pool.harvestInterval\r\n                );\r\n\r\n                // send rewards\r\n                safePositionTransfer(msg.sender, totalRewards);\r\n                payReferralCommission(msg.sender, totalRewards);\r\n            }\r\n        } else if (pending > 0) {\r\n            user.rewardLockedUp = user.rewardLockedUp.add(pending);\r\n            totalLockedUpRewards = totalLockedUpRewards.add(pending);\r\n            emit RewardLockedUp(msg.sender, _pid, pending);\r\n        }\r\n    }\r\n\r\n    // Safe position transfer function, just in case if rounding error causes pool to not have enough Positions.\r\n    function safePositionTransfer(address _to, uint256 _amount) internal {\r\n        uint256 positionBal = lottery.balanceOf(address(this));\r\n        if (_amount > positionBal) {\r\n            lottery.transfer(_to, positionBal);\r\n        } else {\r\n            lottery.transfer(_to, _amount);\r\n        }\r\n    }\r\n\r\n    // Update dev address by the previous dev.\r\n    function setDevAddress(address _devAddress) public {\r\n        require(msg.sender == devAddress, \"setDevAddress: FORBIDDEN\");\r\n        require(_devAddress != address(0), \"setDevAddress: ZERO\");\r\n        devAddress = _devAddress;\r\n    }\r\n\r\n    function setFeeAddress(address _feeAddress) public {\r\n        require(msg.sender == feeAddress, \"setFeeAddress: FORBIDDEN\");\r\n        require(_feeAddress != address(0), \"setFeeAddress: ZERO\");\r\n        feeAddress = _feeAddress;\r\n    }\r\n\r\n    // Pancake has to add hidden dummy pools in order to alter the emission, here we make it simple and transparent to all.\r\n    function updateEmissionRate(uint256 _lotteryPerBlock) public onlyOwner {\r\n        massUpdatePools();\r\n        emit EmissionRateUpdated(msg.sender, lotteryPerBlock, _lotteryPerBlock);\r\n        lotteryPerBlock = _lotteryPerBlock;\r\n    }\r\n\r\n    // Update the position referral contract address by the owner\r\n    function setPositionReferral(ILotteryReferral _lotteryReferral)\r\n        public\r\n        onlyOwner\r\n    {\r\n        lotteryReferral = _lotteryReferral;\r\n    }\r\n\r\n    // Update referral commission rate by the owner\r\n    function setReferralCommissionRate(uint16 _referralCommissionRate)\r\n        public\r\n        onlyOwner\r\n    {\r\n        require(\r\n            _referralCommissionRate <= MAXIMUM_REFERRAL_COMMISSION_RATE,\r\n            \"setReferralCommissionRate: invalid referral commission rate basis points\"\r\n        );\r\n        referralCommissionRate = _referralCommissionRate;\r\n    }\r\n\r\n    // Pay referral commission to the referrer who referred this user.\r\n    function payReferralCommission(address _user, uint256 _pending) internal {\r\n        if (\r\n            address(lotteryReferral) != address(0) && referralCommissionRate > 0\r\n        ) {\r\n            address referrer = lotteryReferral.getReferrer(_user);\r\n            uint256 commissionAmount = _pending.mul(referralCommissionRate).div(\r\n                10000\r\n            );\r\n\r\n            if (referrer != address(0) && commissionAmount > 0) {\r\n                if(lottery.balanceOf(address(this)) < commissionAmount){\r\n                    loteTreasury.mint(address(this), commissionAmount);\r\n                }\r\n                lottery.transfer(referrer, commissionAmount);\r\n                lotteryReferral.recordReferralCommission(\r\n                    referrer,\r\n                    commissionAmount\r\n                );\r\n                emit ReferralCommissionPaid(_user, referrer, commissionAmount);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/interfaces/ILotteryToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ninterface ILotteryToken {\r\n    function BASE_MINT() external view returns (uint256);\r\n    function mint(address receiver, uint256 amount) external;\r\n    function burn(uint amount) external;\r\n    function treasuryTransfer(address[] memory recipients, uint256[] memory amounts) external;\r\n    function treasuryTransfer(address recipient, uint256 amount) external;\r\n    function transferTaxRate() external view returns (uint16) ;\r\n    function balanceOf(address account) external view returns (uint256) ;\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function isGenesisAddress(address account) external view returns (bool);\r\n}"
			},
			"contracts/interfaces/ILotteryReferral.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ninterface ILotteryReferral{\r\n    \r\n    /**\r\n     * @dev Record referral.\r\n     */\r\n    function recordReferral(address user, address referrer) external;\r\n\r\n    /**\r\n     * @dev Record referral commission.\r\n     */\r\n    function recordReferralCommission(address referrer, uint256 commission) external;\r\n\r\n    /**\r\n     * @dev Get the referrer address that referred the user.\r\n     */\r\n    function getReferrer(address user) external view returns (address);\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a3c87db08028417f9bf46c72efc44e8409db82fe1a5ef04f5a7fba8b28e68f6964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3c87db08028417f9bf46c72efc44e8409db82fe1a5ef04f5a7fba8b28e68f6964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xC8 PUSH30 0xB08028417F9BF46C72EFC44E8409DB82FE1A5EF04F5A7FBA8B28E68F6964 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;645:3270:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3c87db08028417f9bf46c72efc44e8409db82fe1a5ef04f5a7fba8b28e68f6964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xC8 PUSH30 0xB08028417F9BF46C72EFC44E8409DB82FE1A5EF04F5A7FBA8B28E68F6964 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3c87db08028417f9bf46c72efc44e8409db82fe1a5ef04f5a7fba8b28e68f6964736f6c63430008070033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT GT DUP16 0xF9 0x4F 0xC 0x4D 0xED SLOAD NOT 0xE ORIGIN EXTCODECOPY 0xB0 0xCD 0xB6 SIGNEXTEND POP 0xEF PUSH23 0x36EEDA79A43612DDE54315764736F6C63430008070033 ",
							"sourceMap": "482:6300:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT GT DUP16 0xF9 0x4F 0xC 0x4D 0xED SLOAD NOT 0xE ORIGIN EXTCODECOPY 0xB0 0xCD 0xB6 SIGNEXTEND POP 0xEF PUSH23 0x36EEDA79A43612DDE54315764736F6C63430008070033 ",
							"sourceMap": "482:6300:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LoteStakingManager.sol": {
				"ILoteTreasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mint(address,uint256)": "40c10f19"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LoteStakingManager.sol\":\"ILoteTreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/LoteStakingManager.sol\":{\"keccak256\":\"0x9261056737b631509ef94c76284dac5591110d61b41dc603ba59f21e3a1329d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc6366efbac51ce848a90cbfa89cd5e32910af5a04a4175f828a2b2e00b4fd8c\",\"dweb:/ipfs/QmdckYDMVndgtXgXNy6kBfR4RhPbnvq71aCdpSMbrSnyxW\"]},\"contracts/interfaces/ILotteryReferral.sol\":{\"keccak256\":\"0xb7c355537a678fbb001642546124c5d4229cdaed810aab4b8b7de77259dbe620\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://51427683b9a82fde3e01533224e6a6c790128dcbb3edde1aa6bf4b80f74a660b\",\"dweb:/ipfs/QmUdLDviHyepEGqgATt8cfKXebfAPgRPKpMWD7VVAnTA1z\"]},\"contracts/interfaces/ILotteryToken.sol\":{\"keccak256\":\"0xd0162ef1f0b56b2c886a1c6810d7fe54878ff820d66a50da91e94155ffcfd168\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1df4da968967a50689fe71af8a949f1afa490ef90ade9539cdc284f9885f3159\",\"dweb:/ipfs/Qmesd87kJBNwfawF3xbgWbJUKZPuYBQnT1XK1tVqT4dUKo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LoteStakingManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ILotteryToken",
									"name": "_lottery",
									"type": "address"
								},
								{
									"internalType": "contract ILoteTreasury",
									"name": "_loteTreasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lotteryPerBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "EmissionRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "commissionAmount",
									"type": "uint256"
								}
							],
							"name": "ReferralCommissionPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountLockedUp",
									"type": "uint256"
								}
							],
							"name": "RewardLockedUp",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAXIMUM_HARVEST_INTERVAL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAXIMUM_REFERRAL_COMMISSION_RATE",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_STAKING_ALLOCATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_depositFeeBP",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_harvestInterval",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "canHarvest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_referrer",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loteTreasury",
							"outputs": [
								{
									"internalType": "contract ILoteTreasury",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lottery",
							"outputs": [
								{
									"internalType": "contract ILotteryToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lotteryPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lotteryReferral",
							"outputs": [
								{
									"internalType": "contract ILotteryReferral",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingPosition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accPositionPerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "depositFeeBP",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "harvestInterval",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "referralCommissionRate",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "_depositFeeBP",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_harvestInterval",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_devAddress",
									"type": "address"
								}
							],
							"name": "setDevAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeAddress",
									"type": "address"
								}
							],
							"name": "setFeeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ILotteryReferral",
									"name": "_lotteryReferral",
									"type": "address"
								}
							],
							"name": "setPositionReferral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_referralCommissionRate",
									"type": "uint16"
								}
							],
							"name": "setReferralCommissionRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLockedUpRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lotteryPerBlock",
									"type": "uint256"
								}
							],
							"name": "updateEmissionRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardLockedUp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nextHarvestUntil",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LoteStakingManager.sol\":949:17621  contract LoteStakingManager is Ownable, ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LoteStakingManager.sol\":3474:3475  0 */\n  0x00\n    /* \"contracts/LoteStakingManager.sol\":3441:3475  uint256 public totalAllocPoint = 0 */\n  0x09\n  sstore\n    /* \"contracts/LoteStakingManager.sol\":3820:3862  uint16 public referralCommissionRate = 100 */\n  0x0d\n  dup1\n  sload\n  not(shl(0xa0, 0xffff))\n  and\n  shl(0xa2, 0x19)\n  or\n  swap1\n  sstore\n    /* \"contracts/LoteStakingManager.sol\":4671:5052  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/LoteStakingManager.sol\":4837:4844  lottery */\n  0x02\n    /* \"contracts/LoteStakingManager.sol\":4837:4855  lottery = _lottery */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/LoteStakingManager.sol\":4866:4878  loteTreasury */\n  0x03\n    /* \"contracts/LoteStakingManager.sol\":4866:4894  loteTreasury = _loteTreasury */\n  dup1\n  sload\n  dup3\n  and\n  swap5\n  swap1\n  swap6\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/LoteStakingManager.sol\":4905:4915  startBlock */\n  0x0a\n    /* \"contracts/LoteStakingManager.sol\":4905:4929  startBlock = _startBlock */\n  sstore\n    /* \"contracts/LoteStakingManager.sol\":4940:4955  lotteryPerBlock */\n  0x06\n    /* \"contracts/LoteStakingManager.sol\":4940:4974  lotteryPerBlock = _lotteryPerBlock */\n  swap2\n  swap1\n  swap2\n  sstore\n  0x04\n    /* \"contracts/LoteStakingManager.sol\":4987:5010  devAddress = msg.sender */\n  dup1\n  sload\n    /* \"contracts/LoteStakingManager.sol\":5000:5010  msg.sender */\n  caller\n    /* \"contracts/LoteStakingManager.sol\":4987:5010  devAddress = msg.sender */\n  swap1\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/LoteStakingManager.sol\":5021:5031  feeAddress */\n  0x05\n    /* \"contracts/LoteStakingManager.sol\":5021:5044  feeAddress = msg.sender */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/LoteStakingManager.sol\":949:17621  contract LoteStakingManager is Ownable, ReentrancyGuard {\r... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:596   */\ntag_3:\n    /* \"#utility.yul\":155:161   */\n  0x00\n    /* \"#utility.yul\":163:169   */\n  dup1\n    /* \"#utility.yul\":171:177   */\n  0x00\n    /* \"#utility.yul\":179:185   */\n  dup1\n    /* \"#utility.yul\":232:235   */\n  0x80\n    /* \"#utility.yul\":220:229   */\n  dup6\n    /* \"#utility.yul\":211:218   */\n  dup8\n    /* \"#utility.yul\":207:230   */\n  sub\n    /* \"#utility.yul\":203:236   */\n  slt\n    /* \"#utility.yul\":200:253   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":249:250   */\n  0x00\n    /* \"#utility.yul\":246:247   */\n  dup1\n    /* \"#utility.yul\":239:251   */\n  revert\n    /* \"#utility.yul\":200:253   */\ntag_19:\n    /* \"#utility.yul\":281:290   */\n  dup5\n    /* \"#utility.yul\":275:291   */\n  mload\n    /* \"#utility.yul\":300:346   */\n  tag_20\n    /* \"#utility.yul\":340:345   */\n  dup2\n    /* \"#utility.yul\":300:346   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":415:417   */\n  0x20\n    /* \"#utility.yul\":400:418   */\n  dup7\n  add\n    /* \"#utility.yul\":394:419   */\n  mload\n    /* \"#utility.yul\":365:370   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":428:476   */\n  tag_22\n    /* \"#utility.yul\":394:419   */\n  dup2\n    /* \"#utility.yul\":428:476   */\n  tag_21\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":542:544   */\n  0x40\n    /* \"#utility.yul\":527:545   */\n  dup7\n  add\n    /* \"#utility.yul\":521:546   */\n  mload\n    /* \"#utility.yul\":586:588   */\n  0x60\n    /* \"#utility.yul\":571:589   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":565:590   */\n  mload\n    /* \"#utility.yul\":14:596   */\n  swap5\n  swap8\n    /* \"#utility.yul\":495:502   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":14:596   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":601:747   */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":691:722   */\n  dup2\n  and\n    /* \"#utility.yul\":681:723   */\n  dup2\n  eq\n    /* \"#utility.yul\":671:741   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":737:738   */\n  0x00\n    /* \"#utility.yul\":734:735   */\n  dup1\n    /* \"#utility.yul\":727:739   */\n  revert\n    /* \"#utility.yul\":671:741   */\ntag_24:\n    /* \"#utility.yul\":601:747   */\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/LoteStakingManager.sol\":949:17621  contract LoteStakingManager is Ownable, ReentrancyGuard {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LoteStakingManager.sol\":949:17621  contract LoteStakingManager is Ownable, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x630b5ba1\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x93f1a40b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xba13a572\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xba13a572\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd0d41fe1\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd30ef61b\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xde73149d\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x93f1a40b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x99335c39\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa6530050\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xaf018de8\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x8aa28550\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8dbdbe6d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x8f97f54c\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x630b5ba1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x6497aa90\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8705fcd4\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x3ad10ef6\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x48b22bfb\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x48b22bfb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x55dbc826\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x3ad10ef6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x41275358\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x474fa630\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x2143e545\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x2143e545\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x251b7e89\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x27ddb5a9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2e6c998d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f1536b8\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ba84cd2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LoteStakingManager.sol\":5060:5155  function poolLength() external view returns (uint256) {\r... */\n    tag_3:\n        /* \"contracts/LoteStakingManager.sol\":5132:5140  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":5132:5147  poolInfo.length */\n      sload\n        /* \"contracts/LoteStakingManager.sol\":5060:5155  function poolLength() external view returns (uint256) {\r... */\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":14221:14246   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":14209:14211   */\n      0x20\n        /* \"#utility.yul\":14194:14212   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":5060:5155  function poolLength() external view returns (uint256) {\r... */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LoteStakingManager.sol\":15713:15947  function updateEmissionRate(uint256 _lotteryPerBlock) public onlyOwner {\r... */\n    tag_4:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/LoteStakingManager.sol\":3200:3226  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6121:6153   */\n      swap1\n      swap8\n      and\n        /* \"#utility.yul\":6103:6154   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6185:6187   */\n      0x20\n        /* \"#utility.yul\":6170:6188   */\n      dup8\n      add\n        /* \"#utility.yul\":6163:6197   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":6213:6231   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":6206:6240   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6271:6273   */\n      0x60\n        /* \"#utility.yul\":6256:6274   */\n      dup5\n      add\n        /* \"#utility.yul\":6249:6283   */\n      mstore\n        /* \"#utility.yul\":6332:6338   */\n      0xffff\n        /* \"#utility.yul\":6320:6339   */\n      and\n        /* \"#utility.yul\":6314:6317   */\n      0x80\n        /* \"#utility.yul\":6299:6318   */\n      dup4\n      add\n        /* \"#utility.yul\":6292:6340   */\n      mstore\n        /* \"#utility.yul\":6141:6144   */\n      0xa0\n        /* \"#utility.yul\":6356:6375   */\n      dup3\n      add\n        /* \"#utility.yul\":6349:6384   */\n      mstore\n        /* \"#utility.yul\":6090:6093   */\n      0xc0\n        /* \"#utility.yul\":6075:6094   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":3200:3226  PoolInfo[] public poolInfo */\n      tag_48\n        /* \"#utility.yul\":5804:6390   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":3441:3475  uint256 public totalAllocPoint = 0 */\n    tag_6:\n      tag_46\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":6479:7275  function set(\r... */\n    tag_7:\n      tag_50\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":3724:3763  ILotteryReferral public lotteryReferral */\n    tag_8:\n      sload(0x0d)\n      tag_66\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_66:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4600:4632   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4582:4633   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4570:4572   */\n      0x20\n        /* \"#utility.yul\":4555:4573   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":3724:3763  ILotteryReferral public lotteryReferral */\n      tag_48\n        /* \"#utility.yul\":4436:4639   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":3092:3156  uint256 public constant MAX_STAKING_ALLOCATION = 80*10**6*10**18 */\n    tag_9:\n      tag_46\n        /* \"contracts/LoteStakingManager.sol\":3141:3156  80*10**6*10**18 */\n      0x422ca8b0a00a4250000000\n        /* \"contracts/LoteStakingManager.sol\":3092:3156  uint256 public constant MAX_STAKING_ALLOCATION = 80*10**6*10**18 */\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":8696:8926  function canHarvest(uint256 _pid, address _user)\r... */\n    tag_10:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/LoteStakingManager.sol\":8793:8797  bool */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":8839:8853  userInfo[_pid] */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":8839:8847  userInfo */\n      0x08\n        /* \"contracts/LoteStakingManager.sol\":8839:8853  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":8839:8860  userInfo[_pid][_user] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":8897:8918  user.nextHarvestUntil */\n      0x03\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":8878:8893  block.timestamp */\n      timestamp\n        /* \"contracts/LoteStakingManager.sol\":8878:8918  block.timestamp >= user.nextHarvestUntil */\n      lt\n      iszero\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":8696:8926  function canHarvest(uint256 _pid, address _user)\r... */\n      jump\n    tag_73:\n      mload(0x40)\n        /* \"#utility.yul\":5777:5791   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5770:5792   */\n      iszero\n        /* \"#utility.yul\":5752:5793   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5740:5742   */\n      0x20\n        /* \"#utility.yul\":5725:5743   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":8696:8926  function canHarvest(uint256 _pid, address _user)\r... */\n      tag_48\n        /* \"#utility.yul\":5612:5799   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":16022:16179  function setPositionReferral(ILotteryReferral _lotteryReferral)\r... */\n    tag_11:\n      tag_50\n      tag_80\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":2714:2739  address public devAddress */\n    tag_12:\n      sload(0x04)\n      tag_66\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":2774:2799  address public feeAddress */\n    tag_13:\n      sload(0x05)\n      tag_66\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":12031:12645  function withdraw(uint256 _pid, uint256 _amount) public nonReentrant {\r... */\n    tag_14:\n      tag_50\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":3600:3635  uint256 public totalLockedUpRewards */\n    tag_15:\n      tag_46\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":3912:3974  uint16 public constant MAXIMUM_REFERRAL_COMMISSION_RATE = 1000 */\n    tag_16:\n      tag_97\n        /* \"contracts/LoteStakingManager.sol\":3970:3974  1000 */\n      0x03e8\n        /* \"contracts/LoteStakingManager.sol\":3912:3974  uint16 public constant MAXIMUM_REFERRAL_COMMISSION_RATE = 1000 */\n      dup2\n      jump\n    tag_97:\n      mload(0x40)\n        /* \"#utility.yul\":14056:14062   */\n      0xffff\n        /* \"#utility.yul\":14044:14063   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":14026:14064   */\n      dup2\n      mstore\n        /* \"#utility.yul\":14014:14016   */\n      0x20\n        /* \"#utility.yul\":13999:14017   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":3912:3974  uint16 public constant MAXIMUM_REFERRAL_COMMISSION_RATE = 1000 */\n      tag_48\n        /* \"#utility.yul\":13882:14070   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":3536:3561  uint256 public startBlock */\n    tag_17:\n      tag_46\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":9265:10381  function updatePool(uint256 _pid) public {\r... */\n    tag_18:\n      tag_50\n      tag_105\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":12716:13184  function emergencyWithdraw(uint256 _pid) public nonReentrant {\r... */\n    tag_19:\n      tag_50\n      tag_108\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":16240:16606  function setReferralCommissionRate(uint16 _referralCommissionRate)\r... */\n    tag_20:\n      tag_50\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":9009:9189  function massUpdatePools() public {\r... */\n    tag_21:\n      tag_50\n      tag_115\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":3644:3672  uint256 public stakingMinted */\n    tag_22:\n      tag_46\n      sload(0x0c)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n      tag_50\n      tag_120\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":15346:15580  function setFeeAddress(address _feeAddress) public {\r... */\n    tag_24:\n      tag_50\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":2937:2981  uint256 public constant BONUS_MULTIPLIER = 1 */\n    tag_25:\n      tag_46\n        /* \"contracts/LoteStakingManager.sol\":2980:2981  1 */\n      0x01\n        /* \"contracts/LoteStakingManager.sol\":2937:2981  uint256 public constant BONUS_MULTIPLIER = 1 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_66)\n        /* \"contracts/LoteStakingManager.sol\":7351:7526  function getMultiplier(uint256 _from, uint256 _to)\r... */\n    tag_27:\n      tag_46\n      tag_132\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":10462:11971  function deposit(\r... */\n    tag_28:\n      tag_50\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":2849:2879  uint256 public lotteryPerBlock */\n    tag_29:\n      tag_46\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":3282:3346  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_30:\n      tag_142\n      tag_143\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_143:\n      0x08\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap1\n      swap2\n      dup5\n      jump\n    tag_142:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14741:14766   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":14797:14799   */\n      0x20\n        /* \"#utility.yul\":14782:14800   */\n      dup6\n      add\n        /* \"#utility.yul\":14775:14809   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":14825:14843   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":14818:14852   */\n      mstore\n        /* \"#utility.yul\":14883:14885   */\n      0x60\n        /* \"#utility.yul\":14868:14886   */\n      dup3\n      add\n        /* \"#utility.yul\":14861:14895   */\n      mstore\n        /* \"#utility.yul\":14728:14731   */\n      0x80\n        /* \"#utility.yul\":14713:14732   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":3282:3346  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n      tag_48\n        /* \"#utility.yul\":14510:14901   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":7594:8628  function pendingPosition(uint256 _pid, address _user)\r... */\n    tag_31:\n      tag_46\n      tag_148\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":2653:2686  ILoteTreasury public loteTreasury */\n    tag_32:\n      sload(0x03)\n      tag_66\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":5324:6363  function add(\r... */\n    tag_33:\n      tag_50\n      tag_156\n      calldatasize\n      0x04\n      tag_157\n      jump\t// in\n    tag_156:\n      tag_158\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":2618:2646  ILotteryToken public lottery */\n    tag_34:\n      sload(0x02)\n      tag_66\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":15104:15338  function setDevAddress(address _devAddress) public {\r... */\n    tag_35:\n      tag_50\n      tag_164\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":3820:3862  uint16 public referralCommissionRate = 100 */\n    tag_36:\n      sload(0x0d)\n      tag_97\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\n        /* \"contracts/LoteStakingManager.sol\":3027:3085  uint256 public constant MAXIMUM_HARVEST_INTERVAL = 14 days */\n    tag_37:\n      tag_46\n        /* \"contracts/LoteStakingManager.sol\":3078:3085  14 days */\n      0x127500\n        /* \"contracts/LoteStakingManager.sol\":3027:3085  uint256 public constant MAXIMUM_HARVEST_INTERVAL = 14 days */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      tag_50\n      tag_173\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":15713:15947  function updateEmissionRate(uint256 _lotteryPerBlock) public onlyOwner {\r... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/LoteStakingManager.sol\":15795:15812  massUpdatePools() */\n      tag_184\n        /* \"contracts/LoteStakingManager.sol\":15795:15810  massUpdatePools */\n      tag_115\n        /* \"contracts/LoteStakingManager.sol\":15795:15812  massUpdatePools() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/LoteStakingManager.sol\":15860:15875  lotteryPerBlock */\n      sload(0x06)\n        /* \"contracts/LoteStakingManager.sol\":15828:15894  EmissionRateUpdated(msg.sender, lotteryPerBlock, _lotteryPerBlock) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14431:14456   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":14487:14489   */\n      0x20\n        /* \"#utility.yul\":14472:14490   */\n      dup3\n      add\n        /* \"#utility.yul\":14465:14499   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":15848:15858  msg.sender */\n      caller\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":15828:15894  EmissionRateUpdated(msg.sender, lotteryPerBlock, _lotteryPerBlock) */\n      0xeedc6338c9c1ad8f3cd6c90dd09dbe98dbd57e610d3e59a17996d07acb0d9511\n      swap2\n        /* \"#utility.yul\":14404:14422   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":15828:15894  EmissionRateUpdated(msg.sender, lotteryPerBlock, _lotteryPerBlock) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LoteStakingManager.sol\":15905:15920  lotteryPerBlock */\n      0x06\n        /* \"contracts/LoteStakingManager.sol\":15905:15939  lotteryPerBlock = _lotteryPerBlock */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":15713:15947  function updateEmissionRate(uint256 _lotteryPerBlock) public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":3200:3226  PoolInfo[] public poolInfo */\n    tag_56:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap6\n      pop\n      swap2\n      swap4\n      swap1\n      swap3\n      0xffff\n      swap1\n      swap2\n      and\n      swap1\n      dup7\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":6479:7275  function set(\r... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_192:\n        /* \"contracts/LoteStakingManager.sol\":6712:6717  10000 */\n      0x2710\n        /* \"contracts/LoteStakingManager.sol\":6695:6708  _depositFeeBP */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":6695:6717  _depositFeeBP <= 10000 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":6673:6782  require(\r... */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11130:11132   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":6673:6782  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11112:11133   */\n      mstore\n        /* \"#utility.yul\":11169:11171   */\n      0x25\n        /* \"#utility.yul\":11149:11167   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11142:11172   */\n      mstore\n        /* \"#utility.yul\":11208:11242   */\n      0x7365743a20696e76616c6964206465706f736974206665652062617369732070\n        /* \"#utility.yul\":11188:11206   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11181:11243   */\n      mstore\n      shl(0xd8, 0x6f696e7473)\n        /* \"#utility.yul\":11259:11277   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11252:11287   */\n      mstore\n        /* \"#utility.yul\":11304:11323   */\n      0x84\n      add\n        /* \"contracts/LoteStakingManager.sol\":6673:6782  require(\r... */\n      tag_181\n        /* \"#utility.yul\":10928:11329   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":6673:6782  require(\r... */\n    tag_195:\n        /* \"contracts/LoteStakingManager.sol\":3078:3085  14 days */\n      0x127500\n        /* \"contracts/LoteStakingManager.sol\":6815:6831  _harvestInterval */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":6815:6859  _harvestInterval <= MAXIMUM_HARVEST_INTERVAL */\n      gt\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":6793:6916  require(\r... */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11897:11899   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":6793:6916  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11879:11900   */\n      mstore\n        /* \"#utility.yul\":11936:11938   */\n      0x1d\n        /* \"#utility.yul\":11916:11934   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11909:11939   */\n      mstore\n        /* \"#utility.yul\":11975:12006   */\n      0x7365743a20696e76616c6964206861727665737420696e74657276616c000000\n        /* \"#utility.yul\":11955:11973   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11948:12007   */\n      mstore\n        /* \"#utility.yul\":12024:12042   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":6793:6916  require(\r... */\n      tag_181\n        /* \"#utility.yul\":11695:12048   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":6793:6916  require(\r... */\n    tag_198:\n        /* \"contracts/LoteStakingManager.sol\":6931:6942  _withUpdate */\n      dup1\n        /* \"contracts/LoteStakingManager.sol\":6927:6988  if (_withUpdate) {\r... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":6959:6976  massUpdatePools() */\n      tag_202\n        /* \"contracts/LoteStakingManager.sol\":6959:6974  massUpdatePools */\n      tag_115\n        /* \"contracts/LoteStakingManager.sol\":6959:6976  massUpdatePools() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/LoteStakingManager.sol\":7016:7103  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(\r... */\n      tag_203\n        /* \"contracts/LoteStakingManager.sol\":7081:7092  _allocPoint */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":7016:7062  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_204\n        /* \"contracts/LoteStakingManager.sol\":7036:7044  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":7045:7049  _pid */\n      dup9\n        /* \"contracts/LoteStakingManager.sol\":7036:7050  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_206\n      tag_207\n      jump\t// in\n    tag_206:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/LoteStakingManager.sol\":7036:7061  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":7016:7031  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/LoteStakingManager.sol\":7016:7035  totalAllocPoint.sub */\n      tag_209\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":7016:7062  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/LoteStakingManager.sol\":7016:7066  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      swap1\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":7016:7103  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(\r... */\n      jump\t// in\n    tag_203:\n        /* \"contracts/LoteStakingManager.sol\":6998:7013  totalAllocPoint */\n      0x09\n        /* \"contracts/LoteStakingManager.sol\":6998:7103  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":7142:7153  _allocPoint */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":7114:7122  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":7123:7127  _pid */\n      dup7\n        /* \"contracts/LoteStakingManager.sol\":7114:7128  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_212\n      tag_207\n      jump\t// in\n    tag_212:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/LoteStakingManager.sol\":7114:7139  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/LoteStakingManager.sol\":7114:7153  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":7194:7207  _depositFeeBP */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":7164:7172  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":7173:7177  _pid */\n      dup7\n        /* \"contracts/LoteStakingManager.sol\":7164:7178  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_207\n      jump\t// in\n    tag_215:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/LoteStakingManager.sol\":7164:7191  poolInfo[_pid].depositFeeBP */\n      0x04\n      add\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":7164:7207  poolInfo[_pid].depositFeeBP = _depositFeeBP */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":7251:7267  _harvestInterval */\n      dup2\n        /* \"contracts/LoteStakingManager.sol\":7218:7226  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":7227:7231  _pid */\n      dup7\n        /* \"contracts/LoteStakingManager.sol\":7218:7232  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_218\n      tag_207\n      jump\t// in\n    tag_218:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/LoteStakingManager.sol\":7218:7248  poolInfo[_pid].harvestInterval */\n      0x05\n      add\n        /* \"contracts/LoteStakingManager.sol\":7218:7267  poolInfo[_pid].harvestInterval = _harvestInterval */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":6479:7275  function set(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":16022:16179  function setPositionReferral(ILotteryReferral _lotteryReferral)\r... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_224:\n        /* \"contracts/LoteStakingManager.sol\":16137:16152  lotteryReferral */\n      0x0d\n        /* \"contracts/LoteStakingManager.sol\":16137:16171  lotteryReferral = _lotteryReferral */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":16022:16179  function setPositionReferral(ILotteryReferral _lotteryReferral)\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":12031:12645  function withdraw(uint256 _pid, uint256 _amount) public nonReentrant {\r... */\n    tag_93:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_230\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":12111:12132  PoolInfo storage pool */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":12135:12143  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":12144:12148  _pid */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":12135:12149  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_233\n      tag_207\n      jump\t// in\n    tag_233:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":12184:12198  userInfo[_pid] */\n      dup7\n      dup5\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":12184:12192  userInfo */\n      0x08\n        /* \"contracts/LoteStakingManager.sol\":12184:12198  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":12199:12209  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":12184:12210  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":12229:12240  user.amount */\n      dup1\n      sload\n        /* \"contracts/LoteStakingManager.sol\":12135:12149  poolInfo[_pid] */\n      0x06\n      swap1\n      swap3\n      mul\n      swap1\n      swap3\n      add\n      swap3\n      pop\n        /* \"contracts/LoteStakingManager.sol\":12229:12251  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":12221:12274  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12613:12615   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":12221:12274  require(user.amount >= _amount, \"withdraw: not good\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12595:12616   */\n      mstore\n        /* \"#utility.yul\":12652:12654   */\n      0x12\n        /* \"#utility.yul\":12632:12650   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12625:12655   */\n      mstore\n      shl(0x72, 0x1dda5d1a191c985dce881b9bdd0819dbdbd9)\n        /* \"#utility.yul\":12671:12689   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12664:12712   */\n      mstore\n        /* \"#utility.yul\":12729:12747   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":12221:12274  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_181\n        /* \"#utility.yul\":12411:12753   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":12221:12274  require(user.amount >= _amount, \"withdraw: not good\") */\n    tag_235:\n        /* \"contracts/LoteStakingManager.sol\":12285:12301  updatePool(_pid) */\n      tag_238\n        /* \"contracts/LoteStakingManager.sol\":12296:12300  _pid */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":12285:12295  updatePool */\n      tag_106\n        /* \"contracts/LoteStakingManager.sol\":12285:12301  updatePool(_pid) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/LoteStakingManager.sol\":12312:12344  payOrLockupPendingPosition(_pid) */\n      tag_239\n        /* \"contracts/LoteStakingManager.sol\":12339:12343  _pid */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":12312:12338  payOrLockupPendingPosition */\n      tag_240\n        /* \"contracts/LoteStakingManager.sol\":12312:12344  payOrLockupPendingPosition(_pid) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/LoteStakingManager.sol\":12359:12370  _amount > 0 */\n      dup3\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":12355:12507  if (_amount > 0) {\r... */\n      tag_243\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":12401:12412  user.amount */\n      dup1\n      sload\n        /* \"contracts/LoteStakingManager.sol\":12401:12425  user.amount.sub(_amount) */\n      tag_242\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":12417:12424  _amount */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":12401:12416  user.amount.sub */\n      tag_209\n        /* \"contracts/LoteStakingManager.sol\":12401:12425  user.amount.sub(_amount) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/LoteStakingManager.sol\":12387:12425  user.amount = user.amount.sub(_amount) */\n      dup2\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":12440:12452  pool.lpToken */\n      dup2\n      sload\n        /* \"contracts/LoteStakingManager.sol\":12440:12495  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_243\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":12440:12452  pool.lpToken */\n      and\n        /* \"contracts/LoteStakingManager.sol\":12474:12484  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":12487:12494  _amount */\n      dup6\n        /* \"contracts/LoteStakingManager.sol\":12440:12465  pool.lpToken.safeTransfer */\n      tag_244\n        /* \"contracts/LoteStakingManager.sol\":12440:12495  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/LoteStakingManager.sol\":12551:12575  pool.accPositionPerShare */\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":12535:12546  user.amount */\n      dup2\n      sload\n        /* \"contracts/LoteStakingManager.sol\":12535:12586  user.amount.mul(pool.accPositionPerShare).div(1e12) */\n      tag_245\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":12581:12585  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":12535:12576  user.amount.mul(pool.accPositionPerShare) */\n      tag_246\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":12535:12550  user.amount.mul */\n      tag_247\n        /* \"contracts/LoteStakingManager.sol\":12535:12576  user.amount.mul(pool.accPositionPerShare) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/LoteStakingManager.sol\":12535:12580  user.amount.mul(pool.accPositionPerShare).div */\n      swap1\n      tag_248\n        /* \"contracts/LoteStakingManager.sol\":12535:12586  user.amount.mul(pool.accPositionPerShare).div(1e12) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/LoteStakingManager.sol\":12517:12532  user.rewardDebt */\n      0x01\n      dup3\n      add\n        /* \"contracts/LoteStakingManager.sol\":12517:12586  user.rewardDebt = user.amount.mul(pool.accPositionPerShare).div(1e12) */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":12602:12637  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":14221:14246   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":12623:12627  _pid */\n      dup5\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":12611:12621  msg.sender */\n      caller\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":12602:12637  Withdraw(msg.sender, _pid, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":14209:14211   */\n      0x20\n        /* \"#utility.yul\":14194:14212   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":12602:12637  Withdraw(msg.sender, _pid, _amount) */\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":12031:12645  function withdraw(uint256 _pid, uint256 _amount) public nonReentrant {\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":9265:10381  function updatePool(uint256 _pid) public {\r... */\n    tag_106:\n        /* \"contracts/LoteStakingManager.sol\":3141:3156  80*10**6*10**18 */\n      0x422ca8b0a00a4250000000\n        /* \"contracts/LoteStakingManager.sol\":9325:9338  stakingMinted */\n      sload(0x0c)\n        /* \"contracts/LoteStakingManager.sol\":9325:9364  stakingMinted <= MAX_STAKING_ALLOCATION */\n      gt\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":9317:9384  require(stakingMinted <= MAX_STAKING_ALLOCATION, \"No more staking\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9673:9675   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":9317:9384  require(stakingMinted <= MAX_STAKING_ALLOCATION, \"No more staking\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9655:9676   */\n      mstore\n        /* \"#utility.yul\":9712:9714   */\n      0x0f\n        /* \"#utility.yul\":9692:9710   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9685:9715   */\n      mstore\n      shl(0x88, 0x4e6f206d6f7265207374616b696e67)\n        /* \"#utility.yul\":9731:9749   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9724:9769   */\n      mstore\n        /* \"#utility.yul\":9786:9804   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":9317:9384  require(stakingMinted <= MAX_STAKING_ALLOCATION, \"No more staking\") */\n      tag_181\n        /* \"#utility.yul\":9471:9810   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":9317:9384  require(stakingMinted <= MAX_STAKING_ALLOCATION, \"No more staking\") */\n    tag_251:\n        /* \"contracts/LoteStakingManager.sol\":9395:9416  PoolInfo storage pool */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":9419:9427  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":9428:9432  _pid */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":9419:9433  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_255\n      tag_207\n      jump\t// in\n    tag_255:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/LoteStakingManager.sol\":9395:9433  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9464:9468  pool */\n      dup1\n        /* \"contracts/LoteStakingManager.sol\":9464:9484  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":9448:9460  block.number */\n      number\n        /* \"contracts/LoteStakingManager.sol\":9448:9484  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/LoteStakingManager.sol\":9444:9519  if (block.number <= pool.lastRewardBlock) {\r... */\n      tag_257\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":9501:9508  return; */\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9265:10381  function updatePool(uint256 _pid) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":9444:9519  if (block.number <= pool.lastRewardBlock) {\r... */\n    tag_257:\n        /* \"contracts/LoteStakingManager.sol\":9548:9560  pool.lpToken */\n      dup1\n      sload\n        /* \"contracts/LoteStakingManager.sol\":9548:9585  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":9579:9583  this */\n      address\n        /* \"contracts/LoteStakingManager.sol\":9548:9585  pool.lpToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4582:4633   */\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":9529:9545  uint256 lpSupply */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":9548:9560  pool.lpToken */\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":9548:9570  pool.lpToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4555:4573   */\n      0x24\n      add\n        /* \"contracts/LoteStakingManager.sol\":9548:9585  pool.lpToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"contracts/LoteStakingManager.sol\":9529:9585  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9600:9613  lpSupply == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"contracts/LoteStakingManager.sol\":9600:9637  lpSupply == 0 || pool.allocPoint == 0 */\n      tag_264\n      jumpi\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9617:9632  pool.allocPoint */\n      0x01\n      dup3\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":9617:9637  pool.allocPoint == 0 */\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":9600:9637  lpSupply == 0 || pool.allocPoint == 0 */\n    tag_264:\n        /* \"contracts/LoteStakingManager.sol\":9596:9722  if (lpSupply == 0 || pool.allocPoint == 0) {\r... */\n      iszero\n      tag_265\n      jumpi\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9677:9689  block.number */\n      number\n        /* \"contracts/LoteStakingManager.sol\":9654:9674  pool.lastRewardBlock */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/LoteStakingManager.sol\":9654:9689  pool.lastRewardBlock = block.number */\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9265:10381  function updatePool(uint256 _pid) public {\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":9596:9722  if (lpSupply == 0 || pool.allocPoint == 0) {\r... */\n    tag_265:\n        /* \"contracts/LoteStakingManager.sol\":9732:9750  uint256 multiplier */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":9753:9802  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_266\n        /* \"contracts/LoteStakingManager.sol\":9767:9771  pool */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":9767:9787  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":9789:9801  block.number */\n      number\n        /* \"contracts/LoteStakingManager.sol\":9753:9766  getMultiplier */\n      tag_133\n        /* \"contracts/LoteStakingManager.sol\":9753:9802  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/LoteStakingManager.sol\":9732:9802  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9813:9835  uint256 positionReward */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":9838:9941  multiplier\r... */\n      tag_267\n        /* \"contracts/LoteStakingManager.sol\":9925:9940  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/LoteStakingManager.sol\":9838:9910  multiplier\r... */\n      tag_246\n        /* \"contracts/LoteStakingManager.sol\":9894:9898  pool */\n      dup7\n        /* \"contracts/LoteStakingManager.sol\":9894:9909  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":9838:9879  multiplier\r... */\n      tag_269\n        /* \"contracts/LoteStakingManager.sol\":9863:9878  lotteryPerBlock */\n      sload(0x06)\n        /* \"contracts/LoteStakingManager.sol\":9838:9848  multiplier */\n      dup8\n        /* \"contracts/LoteStakingManager.sol\":9838:9862  multiplier\r... */\n      tag_247\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":9838:9879  multiplier\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/LoteStakingManager.sol\":9838:9893  multiplier\r... */\n      swap1\n      tag_247\n        /* \"contracts/LoteStakingManager.sol\":9838:9910  multiplier\r... */\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":9838:9941  multiplier\r... */\n    tag_267:\n        /* \"contracts/LoteStakingManager.sol\":9813:9941  uint256 positionReward = multiplier\r... */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9970:10031  stakingMinted.add(positionReward.add(positionReward.div(10))) */\n      tag_270\n        /* \"contracts/LoteStakingManager.sol\":9988:10030  positionReward.add(positionReward.div(10)) */\n      tag_271\n        /* \"contracts/LoteStakingManager.sol\":10007:10029  positionReward.div(10) */\n      tag_272\n        /* \"contracts/LoteStakingManager.sol\":9813:9941  uint256 positionReward = multiplier\r... */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":10026:10028  10 */\n      0x0a\n        /* \"contracts/LoteStakingManager.sol\":10007:10025  positionReward.div */\n      tag_248\n        /* \"contracts/LoteStakingManager.sol\":10007:10029  positionReward.div(10) */\n      jump\t// in\n    tag_272:\n        /* \"contracts/LoteStakingManager.sol\":9988:10002  positionReward */\n      dup4\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":9988:10006  positionReward.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":9988:10030  positionReward.add(positionReward.div(10)) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/LoteStakingManager.sol\":9970:9983  stakingMinted */\n      sload(0x0c)\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":9970:9987  stakingMinted.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":9970:10031  stakingMinted.add(positionReward.add(positionReward.div(10))) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/LoteStakingManager.sol\":9954:9967  stakingMinted */\n      0x0c\n        /* \"contracts/LoteStakingManager.sol\":9954:10031  stakingMinted = stakingMinted.add(positionReward.add(positionReward.div(10))) */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":10042:10054  loteTreasury */\n      sload(0x03)\n        /* \"contracts/LoteStakingManager.sol\":10042:10090  loteTreasury.mint(address(this), positionReward) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":10068:10072  this */\n      address\n        /* \"contracts/LoteStakingManager.sol\":10042:10090  loteTreasury.mint(address(this), positionReward) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5507:5558   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5567:5601   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":10042:10054  loteTreasury */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":10042:10059  loteTreasury.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      add\n        /* \"contracts/LoteStakingManager.sol\":10042:10090  loteTreasury.mint(address(this), positionReward) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10144:10156  loteTreasury */\n      sload(0x03)\n        /* \"contracts/LoteStakingManager.sol\":10162:10172  devAddress */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":10144:10156  loteTreasury */\n      swap2\n      dup3\n      and\n      swap4\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10144:10161  loteTreasury.mint */\n      0x40c10f19\n      swap3\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10162:10172  devAddress */\n      and\n        /* \"contracts/LoteStakingManager.sol\":10174:10196  positionReward.div(10) */\n      tag_278\n        /* \"contracts/LoteStakingManager.sol\":10174:10188  positionReward */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":10193:10195  10 */\n      0x0a\n        /* \"contracts/LoteStakingManager.sol\":10174:10192  positionReward.div */\n      tag_248\n        /* \"contracts/LoteStakingManager.sol\":10174:10196  positionReward.div(10) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/LoteStakingManager.sol\":10144:10197  loteTreasury.mint(devAddress, positionReward.div(10)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5525:5557   */\n      swap1\n      swap3\n      and\n        /* \"contracts/LoteStakingManager.sol\":10144:10197  loteTreasury.mint(devAddress, positionReward.div(10)) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5507:5558   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5567:5601   */\n      mstore\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      add\n        /* \"contracts/LoteStakingManager.sol\":10144:10197  loteTreasury.mint(devAddress, positionReward.div(10)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_280:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_282:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10235:10327  pool.accPositionPerShare.add(\r... */\n      tag_283\n        /* \"contracts/LoteStakingManager.sol\":10278:10316  positionReward.mul(1e12).div(lpSupply) */\n      tag_284\n        /* \"contracts/LoteStakingManager.sol\":10307:10315  lpSupply */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":10278:10302  positionReward.mul(1e12) */\n      tag_246\n        /* \"contracts/LoteStakingManager.sol\":10297:10301  1e12 */\n      0xe8d4a51000\n        /* \"contracts/LoteStakingManager.sol\":10278:10292  positionReward */\n      dup6\n        /* \"contracts/LoteStakingManager.sol\":10278:10296  positionReward.mul */\n      tag_247\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":10278:10302  positionReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":10278:10316  positionReward.mul(1e12).div(lpSupply) */\n    tag_284:\n        /* \"contracts/LoteStakingManager.sol\":10235:10259  pool.accPositionPerShare */\n      0x03\n      dup7\n      add\n      sload\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":10235:10263  pool.accPositionPerShare.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":10235:10327  pool.accPositionPerShare.add(\r... */\n      jump\t// in\n    tag_283:\n        /* \"contracts/LoteStakingManager.sol\":10208:10232  pool.accPositionPerShare */\n      0x03\n      dup6\n      add\n        /* \"contracts/LoteStakingManager.sol\":10208:10327  pool.accPositionPerShare = pool.accPositionPerShare.add(\r... */\n      sstore\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10361:10373  block.number */\n      number\n        /* \"contracts/LoteStakingManager.sol\":10338:10358  pool.lastRewardBlock */\n      0x02\n      swap1\n      swap3\n      add\n        /* \"contracts/LoteStakingManager.sol\":10338:10373  pool.lastRewardBlock = block.number */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9265:10381  function updatePool(uint256 _pid) public {\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":12716:13184  function emergencyWithdraw(uint256 _pid) public nonReentrant {\r... */\n    tag_109:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_230\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":12788:12809  PoolInfo storage pool */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":12812:12820  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":12821:12825  _pid */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":12812:12826  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_207\n      jump\t// in\n    tag_291:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":12861:12875  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":12861:12869  userInfo */\n      0x08\n        /* \"contracts/LoteStakingManager.sol\":12861:12875  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":12876:12886  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":12861:12887  userInfo[_pid][msg.sender] */\n      dup1\n      dup8\n      mstore\n      swap4\n      mstore\n      dup5\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":12915:12926  user.amount */\n      dup1\n      sload\n        /* \"contracts/LoteStakingManager.sol\":12937:12952  user.amount = 0 */\n      dup6\n      dup3\n      sstore\n      0x01\n        /* \"contracts/LoteStakingManager.sol\":12963:12978  user.rewardDebt */\n      dup3\n      add\n        /* \"contracts/LoteStakingManager.sol\":12963:12982  user.rewardDebt = 0 */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":12993:13012  user.rewardLockedUp */\n      0x02\n      dup3\n      add\n        /* \"contracts/LoteStakingManager.sol\":12993:13016  user.rewardLockedUp = 0 */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":13027:13048  user.nextHarvestUntil */\n      0x03\n      dup3\n      add\n        /* \"contracts/LoteStakingManager.sol\":13027:13052  user.nextHarvestUntil = 0 */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":12812:12826  poolInfo[_pid] */\n      0x06\n      swap1\n      swap4\n      mul\n      add\n        /* \"contracts/LoteStakingManager.sol\":13063:13075  pool.lpToken */\n      dup1\n      sload\n        /* \"contracts/LoteStakingManager.sol\":12812:12826  poolInfo[_pid] */\n      swap1\n      swap5\n      pop\n        /* \"contracts/LoteStakingManager.sol\":12861:12887  userInfo[_pid][msg.sender] */\n      swap2\n      swap3\n        /* \"contracts/LoteStakingManager.sol\":12915:12926  user.amount */\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":13063:13117  pool.lpToken.safeTransfer(address(msg.sender), amount) */\n      tag_293\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":13063:13075  pool.lpToken */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":12915:12926  user.amount */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":13063:13088  pool.lpToken.safeTransfer */\n      tag_244\n        /* \"contracts/LoteStakingManager.sol\":13063:13117  pool.lpToken.safeTransfer(address(msg.sender), amount) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/LoteStakingManager.sol\":13133:13176  EmergencyWithdraw(msg.sender, _pid, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":14221:14246   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":13163:13167  _pid */\n      dup5\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":13151:13161  msg.sender */\n      caller\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":13133:13176  EmergencyWithdraw(msg.sender, _pid, amount) */\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n      swap1\n        /* \"#utility.yul\":14209:14211   */\n      0x20\n        /* \"#utility.yul\":14194:14212   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":13133:13176  EmergencyWithdraw(msg.sender, _pid, amount) */\n      tag_249\n        /* \"#utility.yul\":14075:14252   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":16240:16606  function setReferralCommissionRate(uint16 _referralCommissionRate)\r... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_298:\n        /* \"contracts/LoteStakingManager.sol\":3970:3974  1000 */\n      0x03e8\n        /* \"contracts/LoteStakingManager.sol\":16380:16439  _referralCommissionRate <= MAXIMUM_REFERRAL_COMMISSION_RATE */\n      0xffff\n      dup3\n      and\n      gt\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":16358:16539  require(\r... */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8084:8086   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":16358:16539  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8066:8087   */\n      mstore\n        /* \"#utility.yul\":8123:8125   */\n      0x48\n        /* \"#utility.yul\":8103:8121   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8096:8126   */\n      mstore\n        /* \"#utility.yul\":8162:8196   */\n      0x736574526566657272616c436f6d6d697373696f6e526174653a20696e76616c\n        /* \"#utility.yul\":8142:8160   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8135:8197   */\n      mstore\n        /* \"#utility.yul\":8233:8267   */\n      0x696420726566657272616c20636f6d6d697373696f6e20726174652062617369\n        /* \"#utility.yul\":8213:8231   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8206:8268   */\n      mstore\n      shl(0xc0, 0x7320706f696e7473)\n        /* \"#utility.yul\":8284:8303   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8277:8316   */\n      mstore\n        /* \"#utility.yul\":8333:8352   */\n      0xa4\n      add\n        /* \"contracts/LoteStakingManager.sol\":16358:16539  require(\r... */\n      tag_181\n        /* \"#utility.yul\":7882:8358   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":16358:16539  require(\r... */\n    tag_301:\n        /* \"contracts/LoteStakingManager.sol\":16550:16572  referralCommissionRate */\n      0x0d\n        /* \"contracts/LoteStakingManager.sol\":16550:16598  referralCommissionRate = _referralCommissionRate */\n      dup1\n      sload\n      0xffff\n      swap1\n      swap3\n      and\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xffff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":16240:16606  function setReferralCommissionRate(uint16 _referralCommissionRate)\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":9009:9189  function massUpdatePools() public {\r... */\n    tag_115:\n        /* \"contracts/LoteStakingManager.sol\":9071:9079  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":9071:9086  poolInfo.length */\n      sload\n        /* \"contracts/LoteStakingManager.sol\":9054:9068  uint256 length */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":9097:9182  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_305:\n        /* \"contracts/LoteStakingManager.sol\":9125:9131  length */\n      dup2\n        /* \"contracts/LoteStakingManager.sol\":9119:9122  pid */\n      dup2\n        /* \"contracts/LoteStakingManager.sol\":9119:9131  pid < length */\n      lt\n        /* \"contracts/LoteStakingManager.sol\":9097:9182  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_306\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":9155:9170  updatePool(pid) */\n      tag_308\n        /* \"contracts/LoteStakingManager.sol\":9166:9169  pid */\n      dup2\n        /* \"contracts/LoteStakingManager.sol\":9155:9165  updatePool */\n      tag_106\n        /* \"contracts/LoteStakingManager.sol\":9155:9170  updatePool(pid) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/LoteStakingManager.sol\":9133:9138  ++pid */\n      tag_309\n      dup2\n      tag_310\n      jump\t// in\n    tag_309:\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9097:9182  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_305)\n    tag_306:\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9043:9189  {\r... */\n      pop\n        /* \"contracts/LoteStakingManager.sol\":9009:9189  function massUpdatePools() public {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_317\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_318\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":15346:15580  function setFeeAddress(address _feeAddress) public {\r... */\n    tag_124:\n        /* \"contracts/LoteStakingManager.sol\":15430:15440  feeAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/LoteStakingManager.sol\":15416:15426  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":15416:15440  msg.sender == feeAddress */\n      eq\n        /* \"contracts/LoteStakingManager.sol\":15408:15469  require(msg.sender == feeAddress, \"setFeeAddress: FORBIDDEN\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12960:12962   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":15408:15469  require(msg.sender == feeAddress, \"setFeeAddress: FORBIDDEN\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12942:12963   */\n      mstore\n        /* \"#utility.yul\":12999:13001   */\n      0x18\n        /* \"#utility.yul\":12979:12997   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12972:13002   */\n      mstore\n        /* \"#utility.yul\":13038:13064   */\n      0x736574466565416464726573733a20464f5242494444454e0000000000000000\n        /* \"#utility.yul\":13018:13036   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13011:13065   */\n      mstore\n        /* \"#utility.yul\":13082:13100   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":15408:15469  require(msg.sender == feeAddress, \"setFeeAddress: FORBIDDEN\") */\n      tag_181\n        /* \"#utility.yul\":12758:13106   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":15408:15469  require(msg.sender == feeAddress, \"setFeeAddress: FORBIDDEN\") */\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":15488:15513  _feeAddress != address(0) */\n      dup2\n      and\n        /* \"contracts/LoteStakingManager.sol\":15480:15537  require(_feeAddress != address(0), \"setFeeAddress: ZERO\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10017:10019   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":15480:15537  require(_feeAddress != address(0), \"setFeeAddress: ZERO\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9999:10020   */\n      mstore\n        /* \"#utility.yul\":10056:10058   */\n      0x13\n        /* \"#utility.yul\":10036:10054   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10029:10059   */\n      mstore\n      shl(0x68, 0x736574466565416464726573733a205a45524f)\n        /* \"#utility.yul\":10075:10093   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10068:10117   */\n      mstore\n        /* \"#utility.yul\":10134:10152   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":15480:15537  require(_feeAddress != address(0), \"setFeeAddress: ZERO\") */\n      tag_181\n        /* \"#utility.yul\":9815:10158   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":15480:15537  require(_feeAddress != address(0), \"setFeeAddress: ZERO\") */\n    tag_323:\n        /* \"contracts/LoteStakingManager.sol\":15548:15558  feeAddress */\n      0x05\n        /* \"contracts/LoteStakingManager.sol\":15548:15572  feeAddress = _feeAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":15346:15580  function setFeeAddress(address _feeAddress) public {\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":7351:7526  function getMultiplier(uint256 _from, uint256 _to)\r... */\n    tag_133:\n        /* \"contracts/LoteStakingManager.sol\":7450:7457  uint256 */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":7482:7518  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_328\n        /* \"contracts/LoteStakingManager.sol\":2980:2981  1 */\n      0x01\n        /* \"contracts/LoteStakingManager.sol\":7482:7496  _to.sub(_from) */\n      tag_269\n        /* \"contracts/LoteStakingManager.sol\":7482:7485  _to */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":7490:7495  _from */\n      dup7\n        /* \"contracts/LoteStakingManager.sol\":7482:7489  _to.sub */\n      tag_209\n        /* \"contracts/LoteStakingManager.sol\":7482:7496  _to.sub(_from) */\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":7482:7518  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n    tag_328:\n        /* \"contracts/LoteStakingManager.sol\":7475:7518  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap4\n        /* \"contracts/LoteStakingManager.sol\":7351:7526  function getMultiplier(uint256 _from, uint256 _to)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":10462:11971  function deposit(\r... */\n    tag_138:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_230\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10594:10615  PoolInfo storage pool */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":10618:10626  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":10627:10631  _pid */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":10618:10632  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_335\n      jumpi\n      tag_335\n      tag_207\n      jump\t// in\n    tag_335:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":10667:10681  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":10667:10675  userInfo */\n      0x08\n        /* \"contracts/LoteStakingManager.sol\":10667:10681  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":10682:10692  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":10667:10693  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":10618:10632  poolInfo[_pid] */\n      0x06\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10704:10720  updatePool(_pid) */\n      tag_337\n        /* \"contracts/LoteStakingManager.sol\":10676:10680  _pid */\n      dup6\n        /* \"contracts/LoteStakingManager.sol\":10704:10714  updatePool */\n      tag_106\n        /* \"contracts/LoteStakingManager.sol\":10704:10720  updatePool(_pid) */\n      jump\t// in\n    tag_337:\n        /* \"contracts/LoteStakingManager.sol\":10759:10760  0 */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":10749:10756  _amount */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":10749:10760  _amount > 0 */\n      gt\n        /* \"contracts/LoteStakingManager.sol\":10749:10815  _amount > 0 &&\r... */\n      dup1\n      iszero\n      tag_338\n      jumpi\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10785:10800  lotteryReferral */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"contracts/LoteStakingManager.sol\":10777:10815  address(lotteryReferral) != address(0) */\n      iszero\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":10749:10815  _amount > 0 &&\r... */\n    tag_338:\n        /* \"contracts/LoteStakingManager.sol\":10749:10855  _amount > 0 &&\r... */\n      dup1\n      iszero\n      tag_339\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":10832:10855  _referrer != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":10749:10855  _amount > 0 &&\r... */\n    tag_339:\n        /* \"contracts/LoteStakingManager.sol\":10749:10895  _amount > 0 &&\r... */\n      dup1\n      iszero\n      tag_340\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":10872:10895  _referrer != msg.sender */\n      dup4\n      and\n        /* \"contracts/LoteStakingManager.sol\":10885:10895  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":10872:10895  _referrer != msg.sender */\n      eq\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":10749:10895  _amount > 0 &&\r... */\n    tag_340:\n        /* \"contracts/LoteStakingManager.sol\":10731:10987  if (\r... */\n      iszero\n      tag_341\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":10922:10937  lotteryReferral */\n      sload(0x0d)\n        /* \"contracts/LoteStakingManager.sol\":10922:10975  lotteryReferral.recordReferral(msg.sender, _referrer) */\n      mload(0x40)\n      shl(0xe0, 0x0c7f7b6b)\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":10953:10963  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":10922:10975  lotteryReferral.recordReferral(msg.sender, _referrer) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4856:4890   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4926:4941   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":4906:4924   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4899:4942   */\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":10922:10937  lotteryReferral */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":10922:10952  lotteryReferral.recordReferral */\n      0x0c7f7b6b\n      swap1\n        /* \"#utility.yul\":4791:4809   */\n      0x44\n      add\n        /* \"contracts/LoteStakingManager.sol\":10922:10975  lotteryReferral.recordReferral(msg.sender, _referrer) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_346:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10731:10987  if (\r... */\n    tag_341:\n        /* \"contracts/LoteStakingManager.sol\":10997:11029  payOrLockupPendingPosition(_pid) */\n      tag_347\n        /* \"contracts/LoteStakingManager.sol\":11024:11028  _pid */\n      dup6\n        /* \"contracts/LoteStakingManager.sol\":10997:11023  payOrLockupPendingPosition */\n      tag_240\n        /* \"contracts/LoteStakingManager.sol\":10997:11029  payOrLockupPendingPosition(_pid) */\n      jump\t// in\n    tag_347:\n        /* \"contracts/LoteStakingManager.sol\":11044:11055  _amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":11040:11834  if (_amount > 0) {\r... */\n      tag_371\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":11072:11084  pool.lpToken */\n      dup2\n      sload\n        /* \"contracts/LoteStakingManager.sol\":11072:11208  pool.lpToken.transferFrom(\r... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":11124:11134  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":11072:11208  pool.lpToken.transferFrom(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5193:5227   */\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":11162:11166  this */\n      address\n        /* \"#utility.yul\":5243:5261   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5236:5279   */\n      mstore\n        /* \"#utility.yul\":5295:5313   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5288:5322   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":11072:11084  pool.lpToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11072:11097  pool.lpToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5128:5146   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":11072:11208  pool.lpToken.transferFrom(\r... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_351:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_353\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_353:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_354\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      pop\n        /* \"contracts/LoteStakingManager.sol\":11260:11267  lottery */\n      sload(0x02)\n        /* \"contracts/LoteStakingManager.sol\":11235:11247  pool.lpToken */\n      dup3\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/LoteStakingManager.sol\":11260:11267  lottery */\n      swap2\n      and\n        /* \"contracts/LoteStakingManager.sol\":11227:11268  address(pool.lpToken) == address(lottery) */\n      eq\n        /* \"contracts/LoteStakingManager.sol\":11223:11465  if (address(pool.lpToken) == address(lottery)) {\r... */\n      iszero\n      tag_356\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":11289:11308  uint256 transferTax */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":11311:11396  _amount\r... */\n      tag_357\n        /* \"contracts/LoteStakingManager.sol\":11390:11395  10000 */\n      0x2710\n        /* \"contracts/LoteStakingManager.sol\":11311:11367  _amount\r... */\n      tag_246\n        /* \"contracts/LoteStakingManager.sol\":11341:11348  lottery */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":11341:11364  lottery.transferTaxRate */\n      and\n      0xb65d08b0\n        /* \"contracts/LoteStakingManager.sol\":11341:11366  lottery.transferTaxRate() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_359\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_359:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_361\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_361:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_362\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"contracts/LoteStakingManager.sol\":11311:11318  _amount */\n      dup9\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11311:11367  _amount\r... */\n      0xffff\n      and\n        /* \"contracts/LoteStakingManager.sol\":11311:11340  _amount\r... */\n      tag_247\n        /* \"contracts/LoteStakingManager.sol\":11311:11367  _amount\r... */\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":11311:11396  _amount\r... */\n    tag_357:\n        /* \"contracts/LoteStakingManager.sol\":11289:11396  uint256 transferTax = _amount\r... */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":11425:11449  _amount.sub(transferTax) */\n      tag_364\n        /* \"contracts/LoteStakingManager.sol\":11425:11432  _amount */\n      dup6\n        /* \"contracts/LoteStakingManager.sol\":11289:11396  uint256 transferTax = _amount\r... */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":11425:11436  _amount.sub */\n      tag_209\n        /* \"contracts/LoteStakingManager.sol\":11425:11449  _amount.sub(transferTax) */\n      jump\t// in\n    tag_364:\n        /* \"contracts/LoteStakingManager.sol\":11415:11449  _amount = _amount.sub(transferTax) */\n      swap5\n      pop\n        /* \"contracts/LoteStakingManager.sol\":11270:11465  {\r... */\n      pop\n        /* \"contracts/LoteStakingManager.sol\":11223:11465  if (address(pool.lpToken) == address(lottery)) {\r... */\n    tag_356:\n        /* \"contracts/LoteStakingManager.sol\":11483:11500  pool.depositFeeBP */\n      0x04\n      dup3\n      add\n      sload\n      0xffff\n      and\n        /* \"contracts/LoteStakingManager.sol\":11483:11504  pool.depositFeeBP > 0 */\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":11479:11823  if (pool.depositFeeBP > 0) {\r... */\n      tag_365\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":11558:11575  pool.depositFeeBP */\n      0x04\n      dup3\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":11525:11543  uint256 depositFee */\n      0x00\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11546:11587  _amount.mul(pool.depositFeeBP).div(10000) */\n      tag_366\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11581:11586  10000 */\n      0x2710\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11546:11576  _amount.mul(pool.depositFeeBP) */\n      tag_246\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11546:11553  _amount */\n      dup9\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11558:11575  pool.depositFeeBP */\n      0xffff\n      and\n        /* \"contracts/LoteStakingManager.sol\":11546:11557  _amount.mul */\n      tag_247\n        /* \"contracts/LoteStakingManager.sol\":11546:11576  _amount.mul(pool.depositFeeBP) */\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":11546:11587  _amount.mul(pool.depositFeeBP).div(10000) */\n    tag_366:\n        /* \"contracts/LoteStakingManager.sol\":11632:11642  feeAddress */\n      sload(0x05)\n        /* \"contracts/LoteStakingManager.sol\":11606:11618  pool.lpToken */\n      dup5\n      sload\n        /* \"contracts/LoteStakingManager.sol\":11525:11587  uint256 depositFee = _amount.mul(pool.depositFeeBP).div(10000) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/LoteStakingManager.sol\":11606:11655  pool.lpToken.safeTransfer(feeAddress, depositFee) */\n      tag_368\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":11606:11618  pool.lpToken */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":11632:11642  feeAddress */\n      and\n        /* \"contracts/LoteStakingManager.sol\":11525:11587  uint256 depositFee = _amount.mul(pool.depositFeeBP).div(10000) */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":11606:11631  pool.lpToken.safeTransfer */\n      tag_244\n        /* \"contracts/LoteStakingManager.sol\":11606:11655  pool.lpToken.safeTransfer(feeAddress, depositFee) */\n      jump\t// in\n    tag_368:\n        /* \"contracts/LoteStakingManager.sol\":11688:11699  user.amount */\n      dup2\n      sload\n        /* \"contracts/LoteStakingManager.sol\":11688:11728  user.amount.add(_amount).sub(depositFee) */\n      tag_369\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11717:11727  depositFee */\n      dup3\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11688:11712  user.amount.add(_amount) */\n      tag_370\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11704:11711  _amount */\n      dup9\n        /* \"contracts/LoteStakingManager.sol\":11688:11703  user.amount.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":11688:11712  user.amount.add(_amount) */\n      jump\t// in\n    tag_370:\n        /* \"contracts/LoteStakingManager.sol\":11688:11716  user.amount.add(_amount).sub */\n      swap1\n      tag_209\n        /* \"contracts/LoteStakingManager.sol\":11688:11728  user.amount.add(_amount).sub(depositFee) */\n      jump\t// in\n    tag_369:\n        /* \"contracts/LoteStakingManager.sol\":11674:11728  user.amount = user.amount.add(_amount).sub(depositFee) */\n      dup3\n      sstore\n      pop\n        /* \"contracts/LoteStakingManager.sol\":11479:11823  if (pool.depositFeeBP > 0) {\r... */\n      jump(tag_371)\n    tag_365:\n        /* \"contracts/LoteStakingManager.sol\":11783:11794  user.amount */\n      dup1\n      sload\n        /* \"contracts/LoteStakingManager.sol\":11783:11807  user.amount.add(_amount) */\n      tag_372\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11799:11806  _amount */\n      dup6\n        /* \"contracts/LoteStakingManager.sol\":11783:11798  user.amount.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":11783:11807  user.amount.add(_amount) */\n      jump\t// in\n    tag_372:\n        /* \"contracts/LoteStakingManager.sol\":11769:11807  user.amount = user.amount.add(_amount) */\n      dup2\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":11479:11823  if (pool.depositFeeBP > 0) {\r... */\n    tag_371:\n        /* \"contracts/LoteStakingManager.sol\":11878:11902  pool.accPositionPerShare */\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":11862:11873  user.amount */\n      dup2\n      sload\n        /* \"contracts/LoteStakingManager.sol\":11862:11913  user.amount.mul(pool.accPositionPerShare).div(1e12) */\n      tag_373\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":11908:11912  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":11862:11903  user.amount.mul(pool.accPositionPerShare) */\n      tag_246\n      swap2\n        /* \"contracts/LoteStakingManager.sol\":11862:11877  user.amount.mul */\n      tag_247\n        /* \"contracts/LoteStakingManager.sol\":11862:11903  user.amount.mul(pool.accPositionPerShare) */\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":11862:11913  user.amount.mul(pool.accPositionPerShare).div(1e12) */\n    tag_373:\n        /* \"contracts/LoteStakingManager.sol\":11844:11859  user.rewardDebt */\n      0x01\n      dup3\n      add\n        /* \"contracts/LoteStakingManager.sol\":11844:11913  user.rewardDebt = user.amount.mul(pool.accPositionPerShare).div(1e12) */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":11929:11963  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":14221:14246   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":11949:11953  _pid */\n      dup6\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11937:11947  msg.sender */\n      caller\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":11929:11963  Deposit(msg.sender, _pid, _amount) */\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n        /* \"#utility.yul\":14209:14211   */\n      0x20\n        /* \"#utility.yul\":14194:14212   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":11929:11963  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":10462:11971  function deposit(\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":7594:8628  function pendingPosition(uint256 _pid, address _user)\r... */\n    tag_149:\n        /* \"contracts/LoteStakingManager.sol\":7698:7705  uint256 */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":7723:7744  PoolInfo storage pool */\n      dup1\n        /* \"contracts/LoteStakingManager.sol\":7747:7755  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":7756:7760  _pid */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":7747:7761  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_378\n      jumpi\n      tag_378\n      tag_207\n      jump\t// in\n    tag_378:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":7796:7810  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":7796:7804  userInfo */\n      0x08\n        /* \"contracts/LoteStakingManager.sol\":7796:7810  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":7796:7817  userInfo[_pid][_user] */\n      dup10\n      dup2\n      and\n      dup8\n      mstore\n      swap4\n      mstore\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":7747:7761  poolInfo[_pid] */\n      0x06\n      swap5\n      swap1\n      swap5\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/LoteStakingManager.sol\":7858:7882  pool.accPositionPerShare */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":7912:7924  pool.lpToken */\n      dup2\n      sload\n        /* \"contracts/LoteStakingManager.sol\":7912:7949  pool.lpToken.balanceOf(address(this)) */\n      swap3\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":7943:7947  this */\n      address\n        /* \"contracts/LoteStakingManager.sol\":7912:7949  pool.lpToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4582:4633   */\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":7747:7761  poolInfo[_pid] */\n      swap2\n      swap7\n      pop\n        /* \"contracts/LoteStakingManager.sol\":7796:7817  userInfo[_pid][_user] */\n      swap4\n      swap5\n        /* \"contracts/LoteStakingManager.sol\":7747:7761  poolInfo[_pid] */\n      swap3\n        /* \"contracts/LoteStakingManager.sol\":7912:7924  pool.lpToken */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":7912:7934  pool.lpToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4555:4573   */\n      0x24\n      add\n        /* \"contracts/LoteStakingManager.sol\":7912:7949  pool.lpToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_381\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_381:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_383\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_383:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_384\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_384:\n        /* \"contracts/LoteStakingManager.sol\":7893:7949  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":7979:7983  pool */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":7979:7999  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":7964:7976  block.number */\n      number\n        /* \"contracts/LoteStakingManager.sol\":7964:7999  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/LoteStakingManager.sol\":7964:8016  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_385\n      jumpi\n      pop\n        /* \"contracts/LoteStakingManager.sol\":8003:8016  lpSupply != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":7964:8016  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_385:\n        /* \"contracts/LoteStakingManager.sol\":7960:8451  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_386\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":8033:8051  uint256 multiplier */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":8054:8152  getMultiplier(\r... */\n      tag_387\n        /* \"contracts/LoteStakingManager.sol\":8086:8090  pool */\n      dup6\n        /* \"contracts/LoteStakingManager.sol\":8086:8106  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":8125:8137  block.number */\n      number\n        /* \"contracts/LoteStakingManager.sol\":8054:8067  getMultiplier */\n      tag_133\n        /* \"contracts/LoteStakingManager.sol\":8054:8152  getMultiplier(\r... */\n      jump\t// in\n    tag_387:\n        /* \"contracts/LoteStakingManager.sol\":8033:8152  uint256 multiplier = getMultiplier(\r... */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":8167:8189  uint256 positionReward */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":8192:8307  multiplier\r... */\n      tag_388\n        /* \"contracts/LoteStakingManager.sol\":8291:8306  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/LoteStakingManager.sol\":8192:8272  multiplier\r... */\n      tag_246\n        /* \"contracts/LoteStakingManager.sol\":8256:8260  pool */\n      dup9\n        /* \"contracts/LoteStakingManager.sol\":8256:8271  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":8192:8237  multiplier\r... */\n      tag_269\n        /* \"contracts/LoteStakingManager.sol\":8221:8236  lotteryPerBlock */\n      sload(0x06)\n        /* \"contracts/LoteStakingManager.sol\":8192:8202  multiplier */\n      dup8\n        /* \"contracts/LoteStakingManager.sol\":8192:8220  multiplier\r... */\n      tag_247\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":8192:8237  multiplier\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":8192:8307  multiplier\r... */\n    tag_388:\n        /* \"contracts/LoteStakingManager.sol\":8167:8307  uint256 positionReward = multiplier\r... */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":8344:8439  accPositionPerShare.add(\r... */\n      tag_391\n        /* \"contracts/LoteStakingManager.sol\":8386:8424  positionReward.mul(1e12).div(lpSupply) */\n      tag_392\n        /* \"contracts/LoteStakingManager.sol\":8415:8423  lpSupply */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":8386:8410  positionReward.mul(1e12) */\n      tag_246\n        /* \"contracts/LoteStakingManager.sol\":8167:8307  uint256 positionReward = multiplier\r... */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":8405:8409  1e12 */\n      0xe8d4a51000\n        /* \"contracts/LoteStakingManager.sol\":8386:8404  positionReward.mul */\n      tag_247\n        /* \"contracts/LoteStakingManager.sol\":8386:8410  positionReward.mul(1e12) */\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":8386:8424  positionReward.mul(1e12).div(lpSupply) */\n    tag_392:\n        /* \"contracts/LoteStakingManager.sol\":8344:8363  accPositionPerShare */\n      dup6\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":8344:8367  accPositionPerShare.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":8344:8439  accPositionPerShare.add(\r... */\n      jump\t// in\n    tag_391:\n        /* \"contracts/LoteStakingManager.sol\":8322:8439  accPositionPerShare = accPositionPerShare.add(\r... */\n      swap4\n      pop\n        /* \"contracts/LoteStakingManager.sol\":8018:8451  {\r... */\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":7960:8451  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n    tag_386:\n        /* \"contracts/LoteStakingManager.sol\":8461:8476  uint256 pending */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":8479:8570  user.amount.mul(accPositionPerShare).div(1e12).sub(\r... */\n      tag_394\n        /* \"contracts/LoteStakingManager.sol\":8544:8548  user */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":8544:8559  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":8479:8525  user.amount.mul(accPositionPerShare).div(1e12) */\n      tag_370\n        /* \"contracts/LoteStakingManager.sol\":8520:8524  1e12 */\n      0xe8d4a51000\n        /* \"contracts/LoteStakingManager.sol\":8479:8515  user.amount.mul(accPositionPerShare) */\n      tag_246\n        /* \"contracts/LoteStakingManager.sol\":8495:8514  accPositionPerShare */\n      dup8\n        /* \"contracts/LoteStakingManager.sol\":8479:8483  user */\n      dup10\n        /* \"contracts/LoteStakingManager.sol\":8479:8490  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":8479:8494  user.amount.mul */\n      tag_247\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":8479:8515  user.amount.mul(accPositionPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":8479:8570  user.amount.mul(accPositionPerShare).div(1e12).sub(\r... */\n    tag_394:\n        /* \"contracts/LoteStakingManager.sol\":8461:8570  uint256 pending = user.amount.mul(accPositionPerShare).div(1e12).sub(\r... */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":8588:8620  pending.add(user.rewardLockedUp) */\n      tag_397\n        /* \"contracts/LoteStakingManager.sol\":8600:8604  user */\n      dup5\n        /* \"contracts/LoteStakingManager.sol\":8600:8619  user.rewardLockedUp */\n      0x02\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":8588:8595  pending */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":8588:8599  pending.add */\n      tag_210\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":8588:8620  pending.add(user.rewardLockedUp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_397:\n        /* \"contracts/LoteStakingManager.sol\":8581:8620  return pending.add(user.rewardLockedUp) */\n      swap9\n        /* \"contracts/LoteStakingManager.sol\":7594:8628  function pendingPosition(uint256 _pid, address _user)\r... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":5324:6363  function add(\r... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_401:\n        /* \"contracts/LoteStakingManager.sol\":5560:5565  10000 */\n      0x2710\n        /* \"contracts/LoteStakingManager.sol\":5543:5556  _depositFeeBP */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":5543:5565  _depositFeeBP <= 10000 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":5521:5630  require(\r... */\n      tag_404\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7678:7680   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":5521:5630  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7660:7681   */\n      mstore\n        /* \"#utility.yul\":7717:7719   */\n      0x25\n        /* \"#utility.yul\":7697:7715   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7690:7720   */\n      mstore\n        /* \"#utility.yul\":7756:7790   */\n      0x6164643a20696e76616c6964206465706f736974206665652062617369732070\n        /* \"#utility.yul\":7736:7754   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7729:7791   */\n      mstore\n      shl(0xd8, 0x6f696e7473)\n        /* \"#utility.yul\":7807:7825   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7800:7835   */\n      mstore\n        /* \"#utility.yul\":7852:7871   */\n      0x84\n      add\n        /* \"contracts/LoteStakingManager.sol\":5521:5630  require(\r... */\n      tag_181\n        /* \"#utility.yul\":7476:7877   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":5521:5630  require(\r... */\n    tag_404:\n        /* \"contracts/LoteStakingManager.sol\":3078:3085  14 days */\n      0x127500\n        /* \"contracts/LoteStakingManager.sol\":5663:5679  _harvestInterval */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":5663:5707  _harvestInterval <= MAXIMUM_HARVEST_INTERVAL */\n      gt\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":5641:5764  require(\r... */\n      tag_407\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10365:10367   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":5641:5764  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10347:10368   */\n      mstore\n        /* \"#utility.yul\":10404:10406   */\n      0x1d\n        /* \"#utility.yul\":10384:10402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10377:10407   */\n      mstore\n        /* \"#utility.yul\":10443:10474   */\n      0x6164643a20696e76616c6964206861727665737420696e74657276616c000000\n        /* \"#utility.yul\":10423:10441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10416:10475   */\n      mstore\n        /* \"#utility.yul\":10492:10510   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":5641:5764  require(\r... */\n      tag_181\n        /* \"#utility.yul\":10163:10516   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":5641:5764  require(\r... */\n    tag_407:\n        /* \"contracts/LoteStakingManager.sol\":5779:5790  _withUpdate */\n      dup1\n        /* \"contracts/LoteStakingManager.sol\":5775:5836  if (_withUpdate) {\r... */\n      iszero\n      tag_411\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":5807:5824  massUpdatePools() */\n      tag_411\n        /* \"contracts/LoteStakingManager.sol\":5807:5822  massUpdatePools */\n      tag_115\n        /* \"contracts/LoteStakingManager.sol\":5807:5824  massUpdatePools() */\n      jump\t// in\n    tag_411:\n        /* \"contracts/LoteStakingManager.sol\":5846:5869  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":5887:5897  startBlock */\n      sload(0x0a)\n        /* \"contracts/LoteStakingManager.sol\":5872:5884  block.number */\n      number\n        /* \"contracts/LoteStakingManager.sol\":5872:5897  block.number > startBlock */\n      gt\n        /* \"contracts/LoteStakingManager.sol\":5872:5951  block.number > startBlock\r... */\n      tag_412\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":5941:5951  startBlock */\n      sload(0x0a)\n        /* \"contracts/LoteStakingManager.sol\":5872:5951  block.number > startBlock\r... */\n      jump(tag_413)\n    tag_412:\n        /* \"contracts/LoteStakingManager.sol\":5913:5925  block.number */\n      number\n        /* \"contracts/LoteStakingManager.sol\":5872:5951  block.number > startBlock\r... */\n    tag_413:\n        /* \"contracts/LoteStakingManager.sol\":5980:5995  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/LoteStakingManager.sol\":5846:5951  uint256 lastRewardBlock = block.number > startBlock\r... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/LoteStakingManager.sol\":5980:6012  totalAllocPoint.add(_allocPoint) */\n      tag_414\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":6000:6011  _allocPoint */\n      dup8\n        /* \"contracts/LoteStakingManager.sol\":5980:5999  totalAllocPoint.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":5980:6012  totalAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_414:\n        /* \"contracts/LoteStakingManager.sol\":5962:5977  totalAllocPoint */\n      0x09\n        /* \"contracts/LoteStakingManager.sol\":5962:6012  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":6051:6344  PoolInfo({\r... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap8\n      dup9\n      mstore\n      swap1\n      dup2\n      add\n      swap2\n      dup3\n      mstore\n      0x00\n      0x60\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      0xffff\n      swap7\n      dup8\n      and\n      0x80\n      dup5\n      add\n      swap1\n      dup2\n      mstore\n      0xa0\n      dup5\n      add\n      swap7\n      dup8\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":6023:6031  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":6023:6355  poolInfo.push(\r... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap4\n      mstore\n      swap3\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      0x06\n      swap1\n      swap4\n      mul\n      swap3\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap10\n      and\n      or\n      swap1\n      swap8\n      sstore\n      swap7\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689\n      dup9\n      add\n      sstore\n      swap1\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a\n      dup8\n      add\n      sstore\n      swap4\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b\n      dup7\n      add\n      sstore\n      pop\n      swap2\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c\n      dup5\n      add\n      dup1\n      sload\n      not(0xffff)\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n      mload\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68d\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":5324:6363  function add(\r... */\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":15104:15338  function setDevAddress(address _devAddress) public {\r... */\n    tag_165:\n        /* \"contracts/LoteStakingManager.sol\":15188:15198  devAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/LoteStakingManager.sol\":15174:15184  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":15174:15198  msg.sender == devAddress */\n      eq\n        /* \"contracts/LoteStakingManager.sol\":15166:15227  require(msg.sender == devAddress, \"setDevAddress: FORBIDDEN\") */\n      tag_417\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8565:8567   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":15166:15227  require(msg.sender == devAddress, \"setDevAddress: FORBIDDEN\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8547:8568   */\n      mstore\n        /* \"#utility.yul\":8604:8606   */\n      0x18\n        /* \"#utility.yul\":8584:8602   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8577:8607   */\n      mstore\n        /* \"#utility.yul\":8643:8669   */\n      0x736574446576416464726573733a20464f5242494444454e0000000000000000\n        /* \"#utility.yul\":8623:8641   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8616:8670   */\n      mstore\n        /* \"#utility.yul\":8687:8705   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":15166:15227  require(msg.sender == devAddress, \"setDevAddress: FORBIDDEN\") */\n      tag_181\n        /* \"#utility.yul\":8363:8711   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":15166:15227  require(msg.sender == devAddress, \"setDevAddress: FORBIDDEN\") */\n    tag_417:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":15246:15271  _devAddress != address(0) */\n      dup2\n      and\n        /* \"contracts/LoteStakingManager.sol\":15238:15295  require(_devAddress != address(0), \"setDevAddress: ZERO\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9325:9327   */\n      0x20\n        /* \"contracts/LoteStakingManager.sol\":15238:15295  require(_devAddress != address(0), \"setDevAddress: ZERO\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9307:9328   */\n      mstore\n        /* \"#utility.yul\":9364:9366   */\n      0x13\n        /* \"#utility.yul\":9344:9362   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9337:9367   */\n      mstore\n      shl(0x68, 0x736574446576416464726573733a205a45524f)\n        /* \"#utility.yul\":9383:9401   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9376:9425   */\n      mstore\n        /* \"#utility.yul\":9442:9460   */\n      0x64\n      add\n        /* \"contracts/LoteStakingManager.sol\":15238:15295  require(_devAddress != address(0), \"setDevAddress: ZERO\") */\n      tag_181\n        /* \"#utility.yul\":9123:9466   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":15238:15295  require(_devAddress != address(0), \"setDevAddress: ZERO\") */\n    tag_420:\n        /* \"contracts/LoteStakingManager.sol\":15306:15316  devAddress */\n      0x04\n        /* \"contracts/LoteStakingManager.sol\":15306:15330  devAddress = _devAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":15104:15338  function setDevAddress(address _devAddress) public {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_426\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_426:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_429\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8918:8920   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8900:8921   */\n      mstore\n        /* \"#utility.yul\":8957:8959   */\n      0x26\n        /* \"#utility.yul\":8937:8955   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8930:8960   */\n      mstore\n        /* \"#utility.yul\":8996:9030   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8976:8994   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8969:9031   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":9047:9065   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9040:9076   */\n      mstore\n        /* \"#utility.yul\":9093:9112   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_181\n        /* \"#utility.yul\":8716:9118   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_429:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_432\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_318\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_432:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_436\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_439\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":13233:14623  function payOrLockupPendingPosition(uint256 _pid) internal {\r... */\n    tag_240:\n        /* \"contracts/LoteStakingManager.sol\":13303:13324  PoolInfo storage pool */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":13327:13335  poolInfo */\n      0x07\n        /* \"contracts/LoteStakingManager.sol\":13336:13340  _pid */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":13327:13341  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_442\n      jumpi\n      tag_442\n      tag_207\n      jump\t// in\n    tag_442:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":13376:13390  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":13376:13384  userInfo */\n      0x08\n        /* \"contracts/LoteStakingManager.sol\":13376:13390  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":13391:13401  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":13376:13402  userInfo[_pid][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":13419:13440  user.nextHarvestUntil */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13327:13341  poolInfo[_pid] */\n      0x06\n      swap1\n      swap3\n      mul\n      swap1\n      swap3\n      add\n      swap3\n      pop\n        /* \"contracts/LoteStakingManager.sol\":13415:13539  if (user.nextHarvestUntil == 0) {\r... */\n      tag_444\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":13506:13526  pool.harvestInterval */\n      0x05\n      dup3\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13486:13527  block.timestamp.add(pool.harvestInterval) */\n      tag_445\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":13486:13501  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":13486:13505  block.timestamp.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":13486:13527  block.timestamp.add(pool.harvestInterval) */\n      jump\t// in\n    tag_445:\n        /* \"contracts/LoteStakingManager.sol\":13462:13483  user.nextHarvestUntil */\n      0x03\n      dup3\n      add\n        /* \"contracts/LoteStakingManager.sol\":13462:13527  user.nextHarvestUntil = block.timestamp.add(pool.harvestInterval) */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":13415:13539  if (user.nextHarvestUntil == 0) {\r... */\n    tag_444:\n        /* \"contracts/LoteStakingManager.sol\":13551:13566  uint256 pending */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":13569:13681  user\r... */\n      tag_446\n        /* \"contracts/LoteStakingManager.sol\":13665:13669  user */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":13665:13680  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13569:13650  user\r... */\n      tag_370\n        /* \"contracts/LoteStakingManager.sol\":13645:13649  1e12 */\n      0xe8d4a51000\n        /* \"contracts/LoteStakingManager.sol\":13569:13630  user\r... */\n      tag_246\n        /* \"contracts/LoteStakingManager.sol\":13605:13609  pool */\n      dup8\n        /* \"contracts/LoteStakingManager.sol\":13605:13629  pool.accPositionPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13569:13573  user */\n      dup8\n        /* \"contracts/LoteStakingManager.sol\":13569:13590  user\r... */\n      0x00\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13569:13604  user\r... */\n      tag_247\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":13569:13630  user\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":13569:13681  user\r... */\n    tag_446:\n        /* \"contracts/LoteStakingManager.sol\":8793:8797  bool */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":8839:8853  userInfo[_pid] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":8839:8847  userInfo */\n      0x08\n        /* \"contracts/LoteStakingManager.sol\":8839:8853  userInfo[_pid] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":13713:13723  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":8839:8860  userInfo[_pid][_user] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/LoteStakingManager.sol\":8897:8918  user.nextHarvestUntil */\n      0x03\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13551:13681  uint256 pending = user\r... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/LoteStakingManager.sol\":8878:8893  block.timestamp */\n      timestamp\n        /* \"contracts/LoteStakingManager.sol\":8878:8918  block.timestamp >= user.nextHarvestUntil */\n      lt\n        /* \"contracts/LoteStakingManager.sol\":13692:14616  if (canHarvest(_pid, msg.sender)) {\r... */\n      tag_450\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":13755:13756  0 */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":13745:13752  pending */\n      dup2\n        /* \"contracts/LoteStakingManager.sol\":13745:13756  pending > 0 */\n      gt\n        /* \"contracts/LoteStakingManager.sol\":13745:13783  pending > 0 || user.rewardLockedUp > 0 */\n      dup1\n      tag_451\n      jumpi\n      pop\n        /* \"contracts/LoteStakingManager.sol\":13782:13783  0 */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":13760:13764  user */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":13760:13779  user.rewardLockedUp */\n      0x02\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13760:13783  user.rewardLockedUp > 0 */\n      gt\n        /* \"contracts/LoteStakingManager.sol\":13745:13783  pending > 0 || user.rewardLockedUp > 0 */\n    tag_451:\n        /* \"contracts/LoteStakingManager.sol\":13741:14369  if (pending > 0 || user.rewardLockedUp > 0) {\r... */\n      iszero\n      tag_452\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":13804:13824  uint256 totalRewards */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":13827:13859  pending.add(user.rewardLockedUp) */\n      tag_453\n        /* \"contracts/LoteStakingManager.sol\":13839:13843  user */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":13839:13858  user.rewardLockedUp */\n      0x02\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13827:13834  pending */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":13827:13838  pending.add */\n      tag_210\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":13827:13859  pending.add(user.rewardLockedUp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_453:\n        /* \"contracts/LoteStakingManager.sol\":13804:13859  uint256 totalRewards = pending.add(user.rewardLockedUp) */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":13936:14021  totalLockedUpRewards.sub(\r... */\n      tag_454\n        /* \"contracts/LoteStakingManager.sol\":13983:13987  user */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":13983:14002  user.rewardLockedUp */\n      0x02\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":13936:13956  totalLockedUpRewards */\n      sload(0x0b)\n        /* \"contracts/LoteStakingManager.sol\":13936:13960  totalLockedUpRewards.sub */\n      tag_209\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":13936:14021  totalLockedUpRewards.sub(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_454:\n        /* \"contracts/LoteStakingManager.sol\":13913:13933  totalLockedUpRewards */\n      0x0b\n        /* \"contracts/LoteStakingManager.sol\":13913:14021  totalLockedUpRewards = totalLockedUpRewards.sub(\r... */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":14062:14063  0 */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":14040:14059  user.rewardLockedUp */\n      0x02\n      dup5\n      add\n        /* \"contracts/LoteStakingManager.sol\":14040:14063  user.rewardLockedUp = 0 */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":14148:14168  pool.harvestInterval */\n      0x05\n      dup5\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":14106:14187  block.timestamp.add(\r... */\n      tag_455\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14106:14121  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14106:14125  block.timestamp.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":14106:14187  block.timestamp.add(\r... */\n      jump\t// in\n    tag_455:\n        /* \"contracts/LoteStakingManager.sol\":14082:14103  user.nextHarvestUntil */\n      0x03\n      dup5\n      add\n        /* \"contracts/LoteStakingManager.sol\":14082:14187  user.nextHarvestUntil = block.timestamp.add(\r... */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":14241:14287  safePositionTransfer(msg.sender, totalRewards) */\n      tag_456\n        /* \"contracts/LoteStakingManager.sol\":14262:14272  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":14274:14286  totalRewards */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":14241:14261  safePositionTransfer */\n      tag_457\n        /* \"contracts/LoteStakingManager.sol\":14241:14287  safePositionTransfer(msg.sender, totalRewards) */\n      jump\t// in\n    tag_456:\n        /* \"contracts/LoteStakingManager.sol\":14306:14353  payReferralCommission(msg.sender, totalRewards) */\n      tag_458\n        /* \"contracts/LoteStakingManager.sol\":14328:14338  msg.sender */\n      caller\n        /* \"contracts/LoteStakingManager.sol\":14340:14352  totalRewards */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":14306:14327  payReferralCommission */\n      tag_459\n        /* \"contracts/LoteStakingManager.sol\":14306:14353  payReferralCommission(msg.sender, totalRewards) */\n      jump\t// in\n    tag_458:\n        /* \"contracts/LoteStakingManager.sol\":13785:14369  {\r... */\n      pop\n        /* \"contracts/LoteStakingManager.sol\":13741:14369  if (pending > 0 || user.rewardLockedUp > 0) {\r... */\n    tag_452:\n        /* \"contracts/LoteStakingManager.sol\":13692:14616  if (canHarvest(_pid, msg.sender)) {\r... */\n      jump(tag_461)\n    tag_450:\n        /* \"contracts/LoteStakingManager.sol\":14390:14401  pending > 0 */\n      dup1\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":14386:14616  if (pending > 0) {\r... */\n      tag_461\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":14440:14459  user.rewardLockedUp */\n      0x02\n      dup3\n      add\n      sload\n        /* \"contracts/LoteStakingManager.sol\":14440:14472  user.rewardLockedUp.add(pending) */\n      tag_462\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14464:14471  pending */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":14440:14463  user.rewardLockedUp.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":14440:14472  user.rewardLockedUp.add(pending) */\n      jump\t// in\n    tag_462:\n        /* \"contracts/LoteStakingManager.sol\":14418:14437  user.rewardLockedUp */\n      0x02\n      dup4\n      add\n        /* \"contracts/LoteStakingManager.sol\":14418:14472  user.rewardLockedUp = user.rewardLockedUp.add(pending) */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":14510:14530  totalLockedUpRewards */\n      sload(0x0b)\n        /* \"contracts/LoteStakingManager.sol\":14510:14543  totalLockedUpRewards.add(pending) */\n      tag_463\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14535:14542  pending */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":14510:14534  totalLockedUpRewards.add */\n      tag_210\n        /* \"contracts/LoteStakingManager.sol\":14510:14543  totalLockedUpRewards.add(pending) */\n      jump\t// in\n    tag_463:\n        /* \"contracts/LoteStakingManager.sol\":14487:14507  totalLockedUpRewards */\n      0x0b\n        /* \"contracts/LoteStakingManager.sol\":14487:14543  totalLockedUpRewards = totalLockedUpRewards.add(pending) */\n      sstore\n        /* \"contracts/LoteStakingManager.sol\":14563:14604  RewardLockedUp(msg.sender, _pid, pending) */\n      mload(0x40)\n        /* \"#utility.yul\":14221:14246   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":14590:14594  _pid */\n      dup5\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14578:14588  msg.sender */\n      caller\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14563:14604  RewardLockedUp(msg.sender, _pid, pending) */\n      0xee470483107f579a55c754fa00613c45a9a3b617a418b39cb0be97e5381ba7c1\n      swap1\n        /* \"#utility.yul\":14209:14211   */\n      0x20\n        /* \"#utility.yul\":14194:14212   */\n      add\n        /* \"contracts/LoteStakingManager.sol\":14563:14604  RewardLockedUp(msg.sender, _pid, pending) */\n    tag_464:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/LoteStakingManager.sol\":14386:14616  if (pending > 0) {\r... */\n    tag_461:\n        /* \"contracts/LoteStakingManager.sol\":13292:14623  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":13233:14623  function payOrLockupPendingPosition(uint256 _pid) internal {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5525:5557   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5507:5558   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5567:5601   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":5480:5498   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_466\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_468\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_466:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_471\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_474\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/LoteStakingManager.sol\":14745:15048  function safePositionTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_457:\n        /* \"contracts/LoteStakingManager.sol\":14847:14854  lottery */\n      sload(0x02)\n        /* \"contracts/LoteStakingManager.sol\":14847:14879  lottery.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":14873:14877  this */\n      address\n        /* \"contracts/LoteStakingManager.sol\":14847:14879  lottery.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4582:4633   */\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":14825:14844  uint256 positionBal */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":14847:14854  lottery */\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14847:14864  lottery.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4555:4573   */\n      0x24\n      add\n        /* \"contracts/LoteStakingManager.sol\":14847:14879  lottery.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_478\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_478:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_480\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_480:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_481\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_481:\n        /* \"contracts/LoteStakingManager.sol\":14825:14879  uint256 positionBal = lottery.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/LoteStakingManager.sol\":14904:14915  positionBal */\n      dup1\n        /* \"contracts/LoteStakingManager.sol\":14894:14901  _amount */\n      dup3\n        /* \"contracts/LoteStakingManager.sol\":14894:14915  _amount > positionBal */\n      gt\n        /* \"contracts/LoteStakingManager.sol\":14890:15041  if (_amount > positionBal) {\r... */\n      iszero\n      tag_482\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":14932:14939  lottery */\n      sload(0x02)\n        /* \"contracts/LoteStakingManager.sol\":14932:14966  lottery.transfer(_to, positionBal) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5525:5557   */\n      dup6\n      dup2\n      and\n        /* \"contracts/LoteStakingManager.sol\":14932:14966  lottery.transfer(_to, positionBal) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5507:5558   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5567:5601   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":14932:14939  lottery */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14932:14948  lottery.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      add\n        /* \"contracts/LoteStakingManager.sol\":14932:14966  lottery.transfer(_to, positionBal) */\n    tag_483:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_484\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_484:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_486\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_486:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_461\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":14890:15041  if (_amount > positionBal) {\r... */\n    tag_482:\n        /* \"contracts/LoteStakingManager.sol\":14999:15006  lottery */\n      sload(0x02)\n        /* \"contracts/LoteStakingManager.sol\":14999:15029  lottery.transfer(_to, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5525:5557   */\n      dup6\n      dup2\n      and\n        /* \"contracts/LoteStakingManager.sol\":14999:15029  lottery.transfer(_to, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5507:5558   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5567:5601   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":14999:15006  lottery */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":14999:15015  lottery.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      add\n        /* \"contracts/LoteStakingManager.sol\":14999:15029  lottery.transfer(_to, _amount) */\n      tag_483\n        /* \"#utility.yul\":5333:5607   */\n      jump\n        /* \"contracts/LoteStakingManager.sol\":16686:17618  function payReferralCommission(address _user, uint256 _pending) internal {\r... */\n    tag_459:\n        /* \"contracts/LoteStakingManager.sol\":16796:16811  lotteryReferral */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"contracts/LoteStakingManager.sol\":16788:16826  address(lotteryReferral) != address(0) */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":16788:16856  address(lotteryReferral) != address(0) && referralCommissionRate > 0 */\n      tag_495\n      jumpi\n      pop\n        /* \"contracts/LoteStakingManager.sol\":16830:16852  referralCommissionRate */\n      sload(0x0d)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/LoteStakingManager.sol\":16830:16856  referralCommissionRate > 0 */\n      iszero\n      iszero\n        /* \"contracts/LoteStakingManager.sol\":16788:16856  address(lotteryReferral) != address(0) && referralCommissionRate > 0 */\n    tag_495:\n        /* \"contracts/LoteStakingManager.sol\":16770:17611  if (\r... */\n      iszero\n      tag_306\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":16902:16917  lotteryReferral */\n      sload(0x0d)\n        /* \"contracts/LoteStakingManager.sol\":16902:16936  lotteryReferral.getReferrer(_user) */\n      mload(0x40)\n      shl(0xe0, 0x4a9fefc7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4600:4632   */\n      dup5\n      dup2\n      and\n        /* \"contracts/LoteStakingManager.sol\":16902:16936  lotteryReferral.getReferrer(_user) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4582:4633   */\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":16883:16899  address referrer */\n      0x00\n      swap3\n        /* \"contracts/LoteStakingManager.sol\":16902:16917  lotteryReferral */\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":16902:16929  lotteryReferral.getReferrer */\n      0x4a9fefc7\n      swap1\n        /* \"#utility.yul\":4555:4573   */\n      0x24\n      add\n        /* \"contracts/LoteStakingManager.sol\":16902:16936  lotteryReferral.getReferrer(_user) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_498\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_498:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_500\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_500:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_501\n      swap2\n      swap1\n      tag_502\n      jump\t// in\n    tag_501:\n        /* \"contracts/LoteStakingManager.sol\":16991:17013  referralCommissionRate */\n      sload(0x0d)\n        /* \"contracts/LoteStakingManager.sol\":16883:16936  address referrer = lotteryReferral.getReferrer(_user) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/LoteStakingManager.sol\":16951:16975  uint256 commissionAmount */\n      0x00\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":16978:17057  _pending.mul(referralCommissionRate).div(\r... */\n      tag_503\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":17037:17042  10000 */\n      0x2710\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":16978:17014  _pending.mul(referralCommissionRate) */\n      tag_246\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":16978:16986  _pending */\n      dup7\n      swap1\n      shl(0xa0, 0x01)\n        /* \"contracts/LoteStakingManager.sol\":16991:17013  referralCommissionRate */\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/LoteStakingManager.sol\":16978:16990  _pending.mul */\n      tag_247\n        /* \"contracts/LoteStakingManager.sol\":16978:17014  _pending.mul(referralCommissionRate) */\n      jump\t// in\n        /* \"contracts/LoteStakingManager.sol\":16978:17057  _pending.mul(referralCommissionRate).div(\r... */\n    tag_503:\n        /* \"contracts/LoteStakingManager.sol\":16951:17057  uint256 commissionAmount = _pending.mul(referralCommissionRate).div(\r... */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":17078:17100  referrer != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":17078:17124  referrer != address(0) && commissionAmount > 0 */\n      tag_505\n      jumpi\n      pop\n        /* \"contracts/LoteStakingManager.sol\":17123:17124  0 */\n      0x00\n        /* \"contracts/LoteStakingManager.sol\":17104:17120  commissionAmount */\n      dup2\n        /* \"contracts/LoteStakingManager.sol\":17104:17124  commissionAmount > 0 */\n      gt\n        /* \"contracts/LoteStakingManager.sol\":17078:17124  referrer != address(0) && commissionAmount > 0 */\n    tag_505:\n        /* \"contracts/LoteStakingManager.sol\":17074:17600  if (referrer != address(0) && commissionAmount > 0) {\r... */\n      iszero\n      tag_461\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":17148:17155  lottery */\n      sload(0x02)\n        /* \"contracts/LoteStakingManager.sol\":17148:17180  lottery.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":17174:17178  this */\n      address\n        /* \"contracts/LoteStakingManager.sol\":17148:17180  lottery.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4582:4633   */\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":17183:17199  commissionAmount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":17148:17155  lottery */\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":17148:17165  lottery.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4555:4573   */\n      0x24\n      add\n        /* \"contracts/LoteStakingManager.sol\":17148:17180  lottery.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_508\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_508:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_510\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_510:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_511\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_511:\n        /* \"contracts/LoteStakingManager.sol\":17148:17199  lottery.balanceOf(address(this)) < commissionAmount */\n      lt\n        /* \"contracts/LoteStakingManager.sol\":17145:17293  if(lottery.balanceOf(address(this)) < commissionAmount){\r... */\n      iszero\n      tag_512\n      jumpi\n        /* \"contracts/LoteStakingManager.sol\":17223:17235  loteTreasury */\n      sload(0x03)\n        /* \"contracts/LoteStakingManager.sol\":17223:17273  loteTreasury.mint(address(this), commissionAmount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":17249:17253  this */\n      address\n        /* \"contracts/LoteStakingManager.sol\":17223:17273  loteTreasury.mint(address(this), commissionAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5507:5558   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5567:5601   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":17223:17235  loteTreasury */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":17223:17240  loteTreasury.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      add\n        /* \"contracts/LoteStakingManager.sol\":17223:17273  loteTreasury.mint(address(this), commissionAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_514\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_514:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_516\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_516:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":17145:17293  if(lottery.balanceOf(address(this)) < commissionAmount){\r... */\n    tag_512:\n        /* \"contracts/LoteStakingManager.sol\":17311:17318  lottery */\n      sload(0x02)\n        /* \"contracts/LoteStakingManager.sol\":17311:17355  lottery.transfer(referrer, commissionAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5525:5557   */\n      dup5\n      dup2\n      and\n        /* \"contracts/LoteStakingManager.sol\":17311:17355  lottery.transfer(referrer, commissionAmount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5507:5558   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5567:5601   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":17311:17318  lottery */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":17311:17327  lottery.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      add\n        /* \"contracts/LoteStakingManager.sol\":17311:17355  lottery.transfer(referrer, commissionAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_518\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_518:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_520\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_520:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_521\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_521:\n      pop\n        /* \"contracts/LoteStakingManager.sol\":17374:17389  lotteryReferral */\n      sload(0x0d)\n        /* \"contracts/LoteStakingManager.sol\":17374:17503  lotteryReferral.recordReferralCommission(\r... */\n      mload(0x40)\n      shl(0xe3, 0x1b82d297)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5525:5557   */\n      dup5\n      dup2\n      and\n        /* \"contracts/LoteStakingManager.sol\":17374:17503  lotteryReferral.recordReferralCommission(\r... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5507:5558   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5567:5601   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/LoteStakingManager.sol\":17374:17389  lotteryReferral */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LoteStakingManager.sol\":17374:17414  lotteryReferral.recordReferralCommission */\n      0xdc1694b8\n      swap1\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      add\n        /* \"contracts/LoteStakingManager.sol\":17374:17503  lotteryReferral.recordReferralCommission(\r... */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_523\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_523:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_525\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_525:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LoteStakingManager.sol\":17557:17565  referrer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":17527:17584  ReferralCommissionPaid(_user, referrer, commissionAmount) */\n      and\n        /* \"contracts/LoteStakingManager.sol\":17550:17555  _user */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LoteStakingManager.sol\":17527:17584  ReferralCommissionPaid(_user, referrer, commissionAmount) */\n      and\n      0x86ddab457291316e0f5496737e5ca67c4037234c32c3be04c48ae96186893a7b\n        /* \"contracts/LoteStakingManager.sol\":17567:17583  commissionAmount */\n      dup4\n        /* \"contracts/LoteStakingManager.sol\":17527:17584  ReferralCommissionPaid(_user, referrer, commissionAmount) */\n      mload(0x40)\n      tag_464\n      swap2\n        /* \"#utility.yul\":14221:14246   */\n      dup2\n      mstore\n        /* \"#utility.yul\":14209:14211   */\n      0x20\n        /* \"#utility.yul\":14194:14212   */\n      add\n      swap1\n        /* \"#utility.yul\":14075:14252   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_468:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_528\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      and\n      tag_529\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_528:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      tag_466\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_531\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_531:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_466\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13313:13315   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13295:13316   */\n      mstore\n        /* \"#utility.yul\":13352:13354   */\n      0x2a\n        /* \"#utility.yul\":13332:13350   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13325:13355   */\n      mstore\n        /* \"#utility.yul\":13391:13425   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":13371:13389   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13364:13426   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":13442:13460   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13435:13475   */\n      mstore\n        /* \"#utility.yul\":13492:13511   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_181\n        /* \"#utility.yul\":13111:13517   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_529:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_536\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_537\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_536:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_537:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_539\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10723:10725   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10705:10726   */\n      mstore\n        /* \"#utility.yul\":10762:10764   */\n      0x26\n        /* \"#utility.yul\":10742:10760   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10735:10765   */\n      mstore\n        /* \"#utility.yul\":10801:10835   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":10781:10799   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10774:10836   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":10852:10870   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10845:10881   */\n      mstore\n        /* \"#utility.yul\":10898:10917   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_181\n        /* \"#utility.yul\":10521:10923   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_539:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_544\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12255:12257   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12237:12258   */\n      mstore\n        /* \"#utility.yul\":12294:12296   */\n      0x1d\n        /* \"#utility.yul\":12274:12292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12267:12297   */\n      mstore\n        /* \"#utility.yul\":12333:12364   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":12313:12331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12306:12365   */\n      mstore\n        /* \"#utility.yul\":12382:12400   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_181\n        /* \"#utility.yul\":12053:12406   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_544:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_547\n      swap2\n      swap1\n      tag_548\n      jump\t// in\n    tag_547:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_551\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_550)\n    tag_551:\n      0x60\n      swap2\n      pop\n    tag_550:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_552\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_553\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_552:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_553:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_556\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_328)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_556:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      tag_558\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_558:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_561\n      jump\t// in\n        /* \"#utility.yul\":14:261   */\n    tag_123:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_564:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_328\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_566\n      jump\t// in\n        /* \"#utility.yul\":266:517   */\n    tag_502:\n        /* \"#utility.yul\":336:342   */\n      0x00\n        /* \"#utility.yul\":389:391   */\n      0x20\n        /* \"#utility.yul\":377:386   */\n      dup3\n        /* \"#utility.yul\":368:375   */\n      dup5\n        /* \"#utility.yul\":364:387   */\n      sub\n        /* \"#utility.yul\":360:392   */\n      slt\n        /* \"#utility.yul\":357:409   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":405:406   */\n      0x00\n        /* \"#utility.yul\":402:403   */\n      dup1\n        /* \"#utility.yul\":395:407   */\n      revert\n        /* \"#utility.yul\":357:409   */\n    tag_568:\n        /* \"#utility.yul\":437:446   */\n      dup2\n        /* \"#utility.yul\":431:447   */\n      mload\n        /* \"#utility.yul\":456:487   */\n      tag_328\n        /* \"#utility.yul\":481:486   */\n      dup2\n        /* \"#utility.yul\":456:487   */\n      tag_566\n      jump\t// in\n        /* \"#utility.yul\":522:767   */\n    tag_355:\n        /* \"#utility.yul\":589:595   */\n      0x00\n        /* \"#utility.yul\":642:644   */\n      0x20\n        /* \"#utility.yul\":630:639   */\n      dup3\n        /* \"#utility.yul\":621:628   */\n      dup5\n        /* \"#utility.yul\":617:640   */\n      sub\n        /* \"#utility.yul\":613:645   */\n      slt\n        /* \"#utility.yul\":610:662   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":658:659   */\n      0x00\n        /* \"#utility.yul\":655:656   */\n      dup1\n        /* \"#utility.yul\":648:660   */\n      revert\n        /* \"#utility.yul\":610:662   */\n    tag_571:\n        /* \"#utility.yul\":690:699   */\n      dup2\n        /* \"#utility.yul\":684:700   */\n      mload\n        /* \"#utility.yul\":709:737   */\n      tag_328\n        /* \"#utility.yul\":731:736   */\n      dup2\n        /* \"#utility.yul\":709:737   */\n      tag_573\n      jump\t// in\n        /* \"#utility.yul\":1049:1294   */\n    tag_112:\n        /* \"#utility.yul\":1107:1113   */\n      0x00\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1148:1157   */\n      dup3\n        /* \"#utility.yul\":1139:1146   */\n      dup5\n        /* \"#utility.yul\":1135:1158   */\n      sub\n        /* \"#utility.yul\":1131:1163   */\n      slt\n        /* \"#utility.yul\":1128:1180   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":1176:1177   */\n      0x00\n        /* \"#utility.yul\":1173:1174   */\n      dup1\n        /* \"#utility.yul\":1166:1178   */\n      revert\n        /* \"#utility.yul\":1128:1180   */\n    tag_578:\n        /* \"#utility.yul\":1215:1224   */\n      dup2\n        /* \"#utility.yul\":1202:1225   */\n      calldataload\n        /* \"#utility.yul\":1234:1264   */\n      tag_328\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1234:1264   */\n      tag_580\n      jump\t// in\n        /* \"#utility.yul\":1299:1548   */\n    tag_363:\n        /* \"#utility.yul\":1368:1374   */\n      0x00\n        /* \"#utility.yul\":1421:1423   */\n      0x20\n        /* \"#utility.yul\":1409:1418   */\n      dup3\n        /* \"#utility.yul\":1400:1407   */\n      dup5\n        /* \"#utility.yul\":1396:1419   */\n      sub\n        /* \"#utility.yul\":1392:1424   */\n      slt\n        /* \"#utility.yul\":1389:1441   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":1437:1438   */\n      0x00\n        /* \"#utility.yul\":1434:1435   */\n      dup1\n        /* \"#utility.yul\":1427:1439   */\n      revert\n        /* \"#utility.yul\":1389:1441   */\n    tag_582:\n        /* \"#utility.yul\":1469:1478   */\n      dup2\n        /* \"#utility.yul\":1463:1479   */\n      mload\n        /* \"#utility.yul\":1488:1518   */\n      tag_328\n        /* \"#utility.yul\":1512:1517   */\n      dup2\n        /* \"#utility.yul\":1488:1518   */\n      tag_580\n      jump\t// in\n        /* \"#utility.yul\":1553:1733   */\n    tag_52:\n        /* \"#utility.yul\":1612:1618   */\n      0x00\n        /* \"#utility.yul\":1665:1667   */\n      0x20\n        /* \"#utility.yul\":1653:1662   */\n      dup3\n        /* \"#utility.yul\":1644:1651   */\n      dup5\n        /* \"#utility.yul\":1640:1663   */\n      sub\n        /* \"#utility.yul\":1636:1668   */\n      slt\n        /* \"#utility.yul\":1633:1685   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":1681:1682   */\n      0x00\n        /* \"#utility.yul\":1678:1679   */\n      dup1\n        /* \"#utility.yul\":1671:1683   */\n      revert\n        /* \"#utility.yul\":1633:1685   */\n    tag_585:\n      pop\n        /* \"#utility.yul\":1704:1727   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1553:1733   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1738:1922   */\n    tag_263:\n        /* \"#utility.yul\":1808:1814   */\n      0x00\n        /* \"#utility.yul\":1861:1863   */\n      0x20\n        /* \"#utility.yul\":1849:1858   */\n      dup3\n        /* \"#utility.yul\":1840:1847   */\n      dup5\n        /* \"#utility.yul\":1836:1859   */\n      sub\n        /* \"#utility.yul\":1832:1864   */\n      slt\n        /* \"#utility.yul\":1829:1881   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":1877:1878   */\n      0x00\n        /* \"#utility.yul\":1874:1875   */\n      dup1\n        /* \"#utility.yul\":1867:1879   */\n      revert\n        /* \"#utility.yul\":1829:1881   */\n    tag_587:\n      pop\n        /* \"#utility.yul\":1900:1916   */\n      mload\n      swap2\n        /* \"#utility.yul\":1738:1922   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1927:2242   */\n    tag_75:\n        /* \"#utility.yul\":1995:2001   */\n      0x00\n        /* \"#utility.yul\":2003:2009   */\n      dup1\n        /* \"#utility.yul\":2056:2058   */\n      0x40\n        /* \"#utility.yul\":2044:2053   */\n      dup4\n        /* \"#utility.yul\":2035:2042   */\n      dup6\n        /* \"#utility.yul\":2031:2054   */\n      sub\n        /* \"#utility.yul\":2027:2059   */\n      slt\n        /* \"#utility.yul\":2024:2076   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":2072:2073   */\n      0x00\n        /* \"#utility.yul\":2069:2070   */\n      dup1\n        /* \"#utility.yul\":2062:2074   */\n      revert\n        /* \"#utility.yul\":2024:2076   */\n    tag_589:\n        /* \"#utility.yul\":2108:2117   */\n      dup3\n        /* \"#utility.yul\":2095:2118   */\n      calldataload\n        /* \"#utility.yul\":2085:2118   */\n      swap2\n      pop\n        /* \"#utility.yul\":2168:2170   */\n      0x20\n        /* \"#utility.yul\":2157:2166   */\n      dup4\n        /* \"#utility.yul\":2153:2171   */\n      add\n        /* \"#utility.yul\":2140:2172   */\n      calldataload\n        /* \"#utility.yul\":2181:2212   */\n      tag_590\n        /* \"#utility.yul\":2206:2211   */\n      dup2\n        /* \"#utility.yul\":2181:2212   */\n      tag_566\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":2231:2236   */\n      dup1\n        /* \"#utility.yul\":2221:2236   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1927:2242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2247:2920   */\n    tag_157:\n        /* \"#utility.yul\":2352:2358   */\n      0x00\n        /* \"#utility.yul\":2360:2366   */\n      dup1\n        /* \"#utility.yul\":2368:2374   */\n      0x00\n        /* \"#utility.yul\":2376:2382   */\n      dup1\n        /* \"#utility.yul\":2384:2390   */\n      0x00\n        /* \"#utility.yul\":2437:2440   */\n      0xa0\n        /* \"#utility.yul\":2425:2434   */\n      dup7\n        /* \"#utility.yul\":2416:2423   */\n      dup9\n        /* \"#utility.yul\":2412:2435   */\n      sub\n        /* \"#utility.yul\":2408:2441   */\n      slt\n        /* \"#utility.yul\":2405:2458   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":2454:2455   */\n      0x00\n        /* \"#utility.yul\":2451:2452   */\n      dup1\n        /* \"#utility.yul\":2444:2456   */\n      revert\n        /* \"#utility.yul\":2405:2458   */\n    tag_592:\n        /* \"#utility.yul\":2490:2499   */\n      dup6\n        /* \"#utility.yul\":2477:2500   */\n      calldataload\n        /* \"#utility.yul\":2467:2500   */\n      swap5\n      pop\n        /* \"#utility.yul\":2550:2552   */\n      0x20\n        /* \"#utility.yul\":2539:2548   */\n      dup7\n        /* \"#utility.yul\":2535:2553   */\n      add\n        /* \"#utility.yul\":2522:2554   */\n      calldataload\n        /* \"#utility.yul\":2563:2594   */\n      tag_593\n        /* \"#utility.yul\":2588:2593   */\n      dup2\n        /* \"#utility.yul\":2563:2594   */\n      tag_566\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":2613:2618   */\n      swap4\n      pop\n        /* \"#utility.yul\":2670:2672   */\n      0x40\n        /* \"#utility.yul\":2655:2673   */\n      dup7\n      add\n        /* \"#utility.yul\":2642:2674   */\n      calldataload\n        /* \"#utility.yul\":2683:2715   */\n      tag_594\n        /* \"#utility.yul\":2642:2674   */\n      dup2\n        /* \"#utility.yul\":2683:2715   */\n      tag_580\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":2734:2741   */\n      swap3\n      pop\n        /* \"#utility.yul\":2788:2790   */\n      0x60\n        /* \"#utility.yul\":2773:2791   */\n      dup7\n      add\n        /* \"#utility.yul\":2760:2792   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2844:2847   */\n      0x80\n        /* \"#utility.yul\":2829:2848   */\n      dup7\n      add\n        /* \"#utility.yul\":2816:2849   */\n      calldataload\n        /* \"#utility.yul\":2858:2888   */\n      tag_595\n        /* \"#utility.yul\":2816:2849   */\n      dup2\n        /* \"#utility.yul\":2858:2888   */\n      tag_573\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":2907:2914   */\n      dup1\n        /* \"#utility.yul\":2897:2914   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2247:2920   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2925:3173   */\n    tag_92:\n        /* \"#utility.yul\":2993:2999   */\n      0x00\n        /* \"#utility.yul\":3001:3007   */\n      dup1\n        /* \"#utility.yul\":3054:3056   */\n      0x40\n        /* \"#utility.yul\":3042:3051   */\n      dup4\n        /* \"#utility.yul\":3033:3040   */\n      dup6\n        /* \"#utility.yul\":3029:3052   */\n      sub\n        /* \"#utility.yul\":3025:3057   */\n      slt\n        /* \"#utility.yul\":3022:3074   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":3070:3071   */\n      0x00\n        /* \"#utility.yul\":3067:3068   */\n      dup1\n        /* \"#utility.yul\":3060:3072   */\n      revert\n        /* \"#utility.yul\":3022:3074   */\n    tag_597:\n      pop\n      pop\n        /* \"#utility.yul\":3093:3116   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3163:3165   */\n      0x20\n        /* \"#utility.yul\":3148:3166   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3135:3167   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2925:3173   */\n      jump\t// out\n        /* \"#utility.yul\":3178:3561   */\n    tag_137:\n        /* \"#utility.yul\":3255:3261   */\n      0x00\n        /* \"#utility.yul\":3263:3269   */\n      dup1\n        /* \"#utility.yul\":3271:3277   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x60\n        /* \"#utility.yul\":3312:3321   */\n      dup5\n        /* \"#utility.yul\":3303:3310   */\n      dup7\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3344   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":3340:3341   */\n      0x00\n        /* \"#utility.yul\":3337:3338   */\n      dup1\n        /* \"#utility.yul\":3330:3342   */\n      revert\n        /* \"#utility.yul\":3292:3344   */\n    tag_599:\n        /* \"#utility.yul\":3376:3385   */\n      dup4\n        /* \"#utility.yul\":3363:3386   */\n      calldataload\n        /* \"#utility.yul\":3353:3386   */\n      swap3\n      pop\n        /* \"#utility.yul\":3433:3435   */\n      0x20\n        /* \"#utility.yul\":3422:3431   */\n      dup5\n        /* \"#utility.yul\":3418:3436   */\n      add\n        /* \"#utility.yul\":3405:3437   */\n      calldataload\n        /* \"#utility.yul\":3395:3437   */\n      swap2\n      pop\n        /* \"#utility.yul\":3487:3489   */\n      0x40\n        /* \"#utility.yul\":3476:3485   */\n      dup5\n        /* \"#utility.yul\":3472:3490   */\n      add\n        /* \"#utility.yul\":3459:3491   */\n      calldataload\n        /* \"#utility.yul\":3500:3531   */\n      tag_600\n        /* \"#utility.yul\":3525:3530   */\n      dup2\n        /* \"#utility.yul\":3500:3531   */\n      tag_566\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":3550:3555   */\n      dup1\n        /* \"#utility.yul\":3540:3555   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3178:3561   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3566:4152   */\n    tag_64:\n        /* \"#utility.yul\":3657:3663   */\n      0x00\n        /* \"#utility.yul\":3665:3671   */\n      dup1\n        /* \"#utility.yul\":3673:3679   */\n      0x00\n        /* \"#utility.yul\":3681:3687   */\n      dup1\n        /* \"#utility.yul\":3689:3695   */\n      0x00\n        /* \"#utility.yul\":3742:3745   */\n      0xa0\n        /* \"#utility.yul\":3730:3739   */\n      dup7\n        /* \"#utility.yul\":3721:3728   */\n      dup9\n        /* \"#utility.yul\":3717:3740   */\n      sub\n        /* \"#utility.yul\":3713:3746   */\n      slt\n        /* \"#utility.yul\":3710:3763   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":3759:3760   */\n      0x00\n        /* \"#utility.yul\":3756:3757   */\n      dup1\n        /* \"#utility.yul\":3749:3761   */\n      revert\n        /* \"#utility.yul\":3710:3763   */\n    tag_602:\n        /* \"#utility.yul\":3795:3804   */\n      dup6\n        /* \"#utility.yul\":3782:3805   */\n      calldataload\n        /* \"#utility.yul\":3772:3805   */\n      swap5\n      pop\n        /* \"#utility.yul\":3852:3854   */\n      0x20\n        /* \"#utility.yul\":3841:3850   */\n      dup7\n        /* \"#utility.yul\":3837:3855   */\n      add\n        /* \"#utility.yul\":3824:3856   */\n      calldataload\n        /* \"#utility.yul\":3814:3856   */\n      swap4\n      pop\n        /* \"#utility.yul\":3906:3908   */\n      0x40\n        /* \"#utility.yul\":3895:3904   */\n      dup7\n        /* \"#utility.yul\":3891:3909   */\n      add\n        /* \"#utility.yul\":3878:3910   */\n      calldataload\n        /* \"#utility.yul\":3919:3949   */\n      tag_594\n        /* \"#utility.yul\":3943:3948   */\n      dup2\n        /* \"#utility.yul\":3919:3949   */\n      tag_580\n      jump\t// in\n        /* \"#utility.yul\":4157:4431   */\n    tag_548:\n        /* \"#utility.yul\":4286:4289   */\n      0x00\n        /* \"#utility.yul\":4324:4330   */\n      dup3\n        /* \"#utility.yul\":4318:4331   */\n      mload\n        /* \"#utility.yul\":4340:4393   */\n      tag_606\n        /* \"#utility.yul\":4386:4392   */\n      dup2\n        /* \"#utility.yul\":4381:4384   */\n      dup5\n        /* \"#utility.yul\":4374:4378   */\n      0x20\n        /* \"#utility.yul\":4366:4372   */\n      dup8\n        /* \"#utility.yul\":4362:4379   */\n      add\n        /* \"#utility.yul\":4340:4393   */\n      tag_607\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":4409:4425   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":4157:4431   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7088:7471   */\n    tag_561:\n        /* \"#utility.yul\":7237:7239   */\n      0x20\n        /* \"#utility.yul\":7226:7235   */\n      dup2\n        /* \"#utility.yul\":7219:7240   */\n      mstore\n        /* \"#utility.yul\":7200:7204   */\n      0x00\n        /* \"#utility.yul\":7269:7275   */\n      dup3\n        /* \"#utility.yul\":7263:7276   */\n      mload\n        /* \"#utility.yul\":7312:7318   */\n      dup1\n        /* \"#utility.yul\":7307:7309   */\n      0x20\n        /* \"#utility.yul\":7296:7305   */\n      dup5\n        /* \"#utility.yul\":7292:7310   */\n      add\n        /* \"#utility.yul\":7285:7319   */\n      mstore\n        /* \"#utility.yul\":7328:7394   */\n      tag_618\n        /* \"#utility.yul\":7387:7393   */\n      dup2\n        /* \"#utility.yul\":7382:7384   */\n      0x40\n        /* \"#utility.yul\":7371:7380   */\n      dup6\n        /* \"#utility.yul\":7367:7385   */\n      add\n        /* \"#utility.yul\":7362:7364   */\n      0x20\n        /* \"#utility.yul\":7354:7360   */\n      dup8\n        /* \"#utility.yul\":7350:7365   */\n      add\n        /* \"#utility.yul\":7328:7394   */\n      tag_607\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":7455:7457   */\n      0x1f\n        /* \"#utility.yul\":7434:7449   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7430:7459   */\n      and\n        /* \"#utility.yul\":7415:7460   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7462:7464   */\n      0x40\n        /* \"#utility.yul\":7411:7465   */\n      add\n      swap3\n        /* \"#utility.yul\":7088:7471   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11334:11690   */\n    tag_182:\n        /* \"#utility.yul\":11536:11538   */\n      0x20\n        /* \"#utility.yul\":11518:11539   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11555:11573   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11548:11578   */\n      mstore\n        /* \"#utility.yul\":11614:11648   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11609:11611   */\n      0x40\n        /* \"#utility.yul\":11594:11612   */\n      dup3\n      add\n        /* \"#utility.yul\":11587:11649   */\n      mstore\n        /* \"#utility.yul\":11681:11683   */\n      0x60\n        /* \"#utility.yul\":11666:11684   */\n      add\n      swap1\n        /* \"#utility.yul\":11334:11690   */\n      jump\t// out\n        /* \"#utility.yul\":13522:13877   */\n    tag_230:\n        /* \"#utility.yul\":13724:13726   */\n      0x20\n        /* \"#utility.yul\":13706:13727   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13763:13765   */\n      0x1f\n        /* \"#utility.yul\":13743:13761   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13736:13766   */\n      mstore\n        /* \"#utility.yul\":13802:13835   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13797:13799   */\n      0x40\n        /* \"#utility.yul\":13782:13800   */\n      dup3\n      add\n        /* \"#utility.yul\":13775:13836   */\n      mstore\n        /* \"#utility.yul\":13868:13870   */\n      0x60\n        /* \"#utility.yul\":13853:13871   */\n      add\n      swap1\n        /* \"#utility.yul\":13522:13877   */\n      jump\t// out\n        /* \"#utility.yul\":14906:15034   */\n    tag_439:\n        /* \"#utility.yul\":14946:14949   */\n      0x00\n        /* \"#utility.yul\":14977:14978   */\n      dup3\n        /* \"#utility.yul\":14973:14979   */\n      not\n        /* \"#utility.yul\":14970:14971   */\n      dup3\n        /* \"#utility.yul\":14967:14980   */\n      gt\n        /* \"#utility.yul\":14964:15003   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":14983:15001   */\n      tag_642\n      tag_643\n      jump\t// in\n    tag_642:\n      pop\n        /* \"#utility.yul\":15019:15028   */\n      add\n      swap1\n        /* \"#utility.yul\":14906:15034   */\n      jump\t// out\n        /* \"#utility.yul\":15039:15256   */\n    tag_474:\n        /* \"#utility.yul\":15079:15080   */\n      0x00\n        /* \"#utility.yul\":15105:15106   */\n      dup3\n        /* \"#utility.yul\":15095:15227   */\n      tag_645\n      jumpi\n        /* \"#utility.yul\":15149:15159   */\n      0x4e487b71\n        /* \"#utility.yul\":15144:15147   */\n      0xe0\n        /* \"#utility.yul\":15140:15160   */\n      shl\n        /* \"#utility.yul\":15137:15138   */\n      0x00\n        /* \"#utility.yul\":15130:15161   */\n      mstore\n        /* \"#utility.yul\":15184:15188   */\n      0x12\n        /* \"#utility.yul\":15181:15182   */\n      0x04\n        /* \"#utility.yul\":15174:15189   */\n      mstore\n        /* \"#utility.yul\":15212:15216   */\n      0x24\n        /* \"#utility.yul\":15209:15210   */\n      0x00\n        /* \"#utility.yul\":15202:15217   */\n      revert\n        /* \"#utility.yul\":15095:15227   */\n    tag_645:\n      pop\n        /* \"#utility.yul\":15241:15250   */\n      div\n      swap1\n        /* \"#utility.yul\":15039:15256   */\n      jump\t// out\n        /* \"#utility.yul\":15261:15429   */\n    tag_471:\n        /* \"#utility.yul\":15301:15308   */\n      0x00\n        /* \"#utility.yul\":15367:15368   */\n      dup2\n        /* \"#utility.yul\":15363:15364   */\n      0x00\n        /* \"#utility.yul\":15359:15365   */\n      not\n        /* \"#utility.yul\":15355:15369   */\n      div\n        /* \"#utility.yul\":15352:15353   */\n      dup4\n        /* \"#utility.yul\":15349:15370   */\n      gt\n        /* \"#utility.yul\":15344:15345   */\n      dup3\n        /* \"#utility.yul\":15337:15346   */\n      iszero\n        /* \"#utility.yul\":15330:15347   */\n      iszero\n        /* \"#utility.yul\":15326:15371   */\n      and\n        /* \"#utility.yul\":15323:15394   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":15374:15392   */\n      tag_648\n      tag_643\n      jump\t// in\n    tag_648:\n      pop\n        /* \"#utility.yul\":15414:15423   */\n      mul\n      swap1\n        /* \"#utility.yul\":15261:15429   */\n      jump\t// out\n        /* \"#utility.yul\":15434:15559   */\n    tag_436:\n        /* \"#utility.yul\":15474:15478   */\n      0x00\n        /* \"#utility.yul\":15502:15503   */\n      dup3\n        /* \"#utility.yul\":15499:15500   */\n      dup3\n        /* \"#utility.yul\":15496:15504   */\n      lt\n        /* \"#utility.yul\":15493:15527   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":15507:15525   */\n      tag_651\n      tag_643\n      jump\t// in\n    tag_651:\n      pop\n        /* \"#utility.yul\":15544:15553   */\n      sub\n      swap1\n        /* \"#utility.yul\":15434:15559   */\n      jump\t// out\n        /* \"#utility.yul\":15564:15822   */\n    tag_607:\n        /* \"#utility.yul\":15636:15637   */\n      0x00\n        /* \"#utility.yul\":15646:15759   */\n    tag_653:\n        /* \"#utility.yul\":15660:15666   */\n      dup4\n        /* \"#utility.yul\":15657:15658   */\n      dup2\n        /* \"#utility.yul\":15654:15667   */\n      lt\n        /* \"#utility.yul\":15646:15759   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":15736:15747   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":15730:15748   */\n      mload\n        /* \"#utility.yul\":15717:15728   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":15710:15749   */\n      mstore\n        /* \"#utility.yul\":15682:15684   */\n      0x20\n        /* \"#utility.yul\":15675:15685   */\n      add\n        /* \"#utility.yul\":15646:15759   */\n      jump(tag_653)\n    tag_655:\n        /* \"#utility.yul\":15777:15783   */\n      dup4\n        /* \"#utility.yul\":15774:15775   */\n      dup2\n        /* \"#utility.yul\":15771:15784   */\n      gt\n        /* \"#utility.yul\":15768:15816   */\n      iszero\n      tag_461\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":15812:15813   */\n      0x00\n        /* \"#utility.yul\":15794:15810   */\n      swap2\n      add\n        /* \"#utility.yul\":15787:15814   */\n      mstore\n        /* \"#utility.yul\":15564:15822   */\n      jump\t// out\n        /* \"#utility.yul\":15827:15962   */\n    tag_310:\n        /* \"#utility.yul\":15866:15869   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":15887:15904   */\n      dup3\n      eq\n        /* \"#utility.yul\":15884:15927   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":15907:15925   */\n      tag_659\n      tag_643\n      jump\t// in\n    tag_659:\n      pop\n        /* \"#utility.yul\":15954:15955   */\n      0x01\n        /* \"#utility.yul\":15943:15956   */\n      add\n      swap1\n        /* \"#utility.yul\":15827:15962   */\n      jump\t// out\n        /* \"#utility.yul\":15967:16094   */\n    tag_643:\n        /* \"#utility.yul\":16028:16038   */\n      0x4e487b71\n        /* \"#utility.yul\":16023:16026   */\n      0xe0\n        /* \"#utility.yul\":16019:16039   */\n      shl\n        /* \"#utility.yul\":16016:16017   */\n      0x00\n        /* \"#utility.yul\":16009:16040   */\n      mstore\n        /* \"#utility.yul\":16059:16063   */\n      0x11\n        /* \"#utility.yul\":16056:16057   */\n      0x04\n        /* \"#utility.yul\":16049:16064   */\n      mstore\n        /* \"#utility.yul\":16083:16087   */\n      0x24\n        /* \"#utility.yul\":16080:16081   */\n      0x00\n        /* \"#utility.yul\":16073:16088   */\n      revert\n        /* \"#utility.yul\":16099:16226   */\n    tag_207:\n        /* \"#utility.yul\":16160:16170   */\n      0x4e487b71\n        /* \"#utility.yul\":16155:16158   */\n      0xe0\n        /* \"#utility.yul\":16151:16171   */\n      shl\n        /* \"#utility.yul\":16148:16149   */\n      0x00\n        /* \"#utility.yul\":16141:16172   */\n      mstore\n        /* \"#utility.yul\":16191:16195   */\n      0x32\n        /* \"#utility.yul\":16188:16189   */\n      0x04\n        /* \"#utility.yul\":16181:16196   */\n      mstore\n        /* \"#utility.yul\":16215:16219   */\n      0x24\n        /* \"#utility.yul\":16212:16213   */\n      0x00\n        /* \"#utility.yul\":16205:16220   */\n      revert\n        /* \"#utility.yul\":16231:16362   */\n    tag_566:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16306:16337   */\n      dup2\n      and\n        /* \"#utility.yul\":16296:16338   */\n      dup2\n      eq\n        /* \"#utility.yul\":16286:16356   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":16352:16353   */\n      0x00\n        /* \"#utility.yul\":16349:16350   */\n      dup1\n        /* \"#utility.yul\":16342:16354   */\n      revert\n        /* \"#utility.yul\":16367:16485   */\n    tag_573:\n        /* \"#utility.yul\":16453:16458   */\n      dup1\n        /* \"#utility.yul\":16446:16459   */\n      iszero\n        /* \"#utility.yul\":16439:16460   */\n      iszero\n        /* \"#utility.yul\":16432:16437   */\n      dup2\n        /* \"#utility.yul\":16429:16461   */\n      eq\n        /* \"#utility.yul\":16419:16479   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":16475:16476   */\n      0x00\n        /* \"#utility.yul\":16472:16473   */\n      dup1\n        /* \"#utility.yul\":16465:16477   */\n      revert\n        /* \"#utility.yul\":16490:16607   */\n    tag_580:\n        /* \"#utility.yul\":16575:16581   */\n      0xffff\n        /* \"#utility.yul\":16568:16573   */\n      dup2\n        /* \"#utility.yul\":16564:16582   */\n      and\n        /* \"#utility.yul\":16557:16562   */\n      dup2\n        /* \"#utility.yul\":16554:16583   */\n      eq\n        /* \"#utility.yul\":16544:16601   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":16597:16598   */\n      0x00\n        /* \"#utility.yul\":16594:16595   */\n      dup1\n        /* \"#utility.yul\":16587:16599   */\n      revert\n\n    auxdata: 0xa26469706673582212202f995ca203c8d3204dbfc5f043af1255423830a84a94e3289a4574963bf11a6464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1272": {
									"entryPoint": null,
									"id": 1272,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_753": {
									"entryPoint": null,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 178,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_ILotteryToken_$2575t_contract$_ILoteTreasury_$1092t_uint256t_uint256_fromMemory": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"validator_revert_contract_ILoteTreasury": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:749:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "190:406:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "237:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "246:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "249:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "239:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "239:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "239:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "211:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "220:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "207:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "207:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "203:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:33:10"
															},
															"nodeType": "YulIf",
															"src": "200:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "262:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "281:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "275:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "266:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "340:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_ILoteTreasury",
																	"nodeType": "YulIdentifier",
																	"src": "300:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "300:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "355:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "365:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "355:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "379:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "404:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "415:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "400:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "400:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "394:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:25:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "383:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "468:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_ILoteTreasury",
																	"nodeType": "YulIdentifier",
																	"src": "428:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "428:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "485:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "495:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "511:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "531:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "542:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "527:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "527:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "521:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:25:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "555:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "575:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "586:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "571:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "571:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "565:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:25:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ILotteryToken_$2575t_contract$_ILoteTreasury_$1092t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "132:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "143:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "155:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "163:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "171:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "179:6:10",
														"type": ""
													}
												],
												"src": "14:582:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "661:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "725:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "734:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "737:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "695:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "710:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "715:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "706:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "706:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "719:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "702:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "702:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "691:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "691:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "681:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "681:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:50:10"
															},
															"nodeType": "YulIf",
															"src": "671:70:10"
														}
													]
												},
												"name": "validator_revert_contract_ILoteTreasury",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "650:5:10",
														"type": ""
													}
												],
												"src": "601:146:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ILotteryToken_$2575t_contract$_ILoteTreasury_$1092t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ILoteTreasury(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_ILoteTreasury(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function validator_revert_contract_ILoteTreasury(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000600955600d805461ffff60a01b1916601960a21b1790553480156200002a57600080fd5b5060405162002655380380620026558339810160408190526200004d9162000102565b6200005833620000b2565b60018055600280546001600160a01b03199081166001600160a01b03968716179091556003805482169490951693909317909355600a55600691909155600480543390831681179091556005805490921617905562000168565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080608085870312156200011957600080fd5b845162000126816200014f565b602086015190945062000139816200014f565b6040860151606090960151949790965092505050565b6001600160a01b03811681146200016557600080fd5b50565b6124dd80620001786000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063630b5ba11161012557806393f1a40b116100ad578063ba13a5721161007c578063ba13a57214610500578063d0d41fe114610513578063d30ef61b14610526578063de73149d1461053b578063f2fde38b1461054557600080fd5b806393f1a40b1461046757806399335c39146104c7578063a6530050146104da578063af018de8146104ed57600080fd5b80638aa28550116100f45780638aa285501461041f5780638da5cb5b146104275780638dbb1e3a146104385780638dbdbe6d1461044b5780638f97f54c1461045e57600080fd5b8063630b5ba1146103f35780636497aa90146103fb578063715018a6146104045780638705fcd41461040c57600080fd5b80633ad10ef6116101a857806348b22bfb1161017757806348b22bfb1461039557806348cd4cb1146103b157806351eb05a6146103ba5780635312ea8e146103cd57806355dbc826146103e057600080fd5b80633ad10ef6146103535780634127535814610366578063441a3e7014610379578063474fa6301461038c57600080fd5b80632143e545116101ef5780632143e545146102a4578063251b7e89146102b757806327ddb5a9146102e25780632e6c998d146102f45780632f1536b81461034057600080fd5b8063081e3eda146102215780630ba84cd2146102385780631526fe271461024d57806317caf6f11461029b575b600080fd5b6007545b6040519081526020015b60405180910390f35b61024b610246366004612189565b610558565b005b61026061025b366004612189565b6105d6565b604080516001600160a01b039097168752602087019590955293850192909252606084015261ffff16608083015260a082015260c00161022f565b61022560095481565b61024b6102b23660046122a5565b61062d565b600d546102ca906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b6102256a422ca8b0a00a425000000081565b6103306103023660046121bb565b60009182526008602090815260408084206001600160a01b0393909316845291905290206003015442101590565b604051901515815260200161022f565b61024b61034e3660046120f8565b6107fd565b6004546102ca906001600160a01b031681565b6005546102ca906001600160a01b031681565b61024b61038736600461224a565b610849565b610225600b5481565b61039e6103e881565b60405161ffff909116815260200161022f565b610225600a5481565b61024b6103c8366004612189565b61099b565b61024b6103db366004612189565b610c42565b61024b6103ee36600461214f565b610d14565b61024b610ded565b610225600c5481565b61024b610e18565b61024b61041a3660046120f8565b610e4e565b610225600181565b6000546001600160a01b03166102ca565b61022561044636600461224a565b610f16565b61024b61045936600461226c565b610f2e565b61022560065481565b6104a76104753660046121bb565b600860209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b60408051948552602085019390935291830152606082015260800161022f565b6102256104d53660046121bb565b611287565b6003546102ca906001600160a01b031681565b61024b6104fb3660046121eb565b61140e565b6002546102ca906001600160a01b031681565b61024b6105213660046120f8565b61167f565b600d5461039e90600160a01b900461ffff1681565b6102256212750081565b61024b6105533660046120f8565b611747565b6000546001600160a01b0316331461058b5760405162461bcd60e51b815260040161058290612325565b60405180910390fd5b610593610ded565b600654604080519182526020820183905233917feedc6338c9c1ad8f3cd6c90dd09dbe98dbd57e610d3e59a17996d07acb0d9511910160405180910390a2600655565b600781815481106105e657600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909261ffff9091169086565b6000546001600160a01b031633146106575760405162461bcd60e51b815260040161058290612325565b6127108361ffff1611156106bb5760405162461bcd60e51b815260206004820152602560248201527f7365743a20696e76616c6964206465706f7369742066656520626173697320706044820152646f696e747360d81b6064820152608401610582565b6212750082111561070e5760405162461bcd60e51b815260206004820152601d60248201527f7365743a20696e76616c6964206861727665737420696e74657276616c0000006044820152606401610582565b801561071c5761071c610ded565b61075f84610759600788815481106107365761073661245e565b9060005260206000209060060201600101546009546117e290919063ffffffff16565b906117ee565b60098190555083600786815481106107795761077961245e565b90600052602060002090600602016001018190555082600786815481106107a2576107a261245e565b906000526020600020906006020160040160006101000a81548161ffff021916908361ffff16021790555081600786815481106107e1576107e161245e565b9060005260206000209060060201600501819055505050505050565b6000546001600160a01b031633146108275760405162461bcd60e51b815260040161058290612325565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154141561086c5760405162461bcd60e51b81526004016105829061235a565b60026001819055506000600783815481106108895761088961245e565b6000918252602080832086845260088252604080852033865290925292208054600690920290920192508311156108f75760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b6044820152606401610582565b6109008461099b565b610909846117fa565b821561093357805461091b90846117e2565b81558154610933906001600160a01b03163385611999565b600382015481546109549164e8d4a510009161094e916119f0565b906119fc565b6001820155604051838152849033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a35050600180555050565b6a422ca8b0a00a4250000000600c5411156109ea5760405162461bcd60e51b815260206004820152600f60248201526e4e6f206d6f7265207374616b696e6760881b6044820152606401610582565b6000600782815481106109ff576109ff61245e565b9060005260206000209060060201905080600201544311610a1e575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906121a2565b9050801580610aaa57506001820154155b15610aba57504360029091015550565b6000610aca836002015443610f16565b90506000610af760095461094e8660010154610af1600654876119f090919063ffffffff16565b906119f0565b9050610b1a610b11610b0a83600a6119fc565b83906117ee565b600c54906117ee565b600c556003546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015610b6957600080fd5b505af1158015610b7d573d6000803e3d6000fd5b50506003546004546001600160a01b0391821693506340c10f19925016610ba584600a6119fc565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610beb57600080fd5b505af1158015610bff573d6000803e3d6000fd5b50505050610c2d610c228461094e64e8d4a51000856119f090919063ffffffff16565b6003860154906117ee565b60038501555050436002909201919091555050565b60026001541415610c655760405162461bcd60e51b81526004016105829061235a565b6002600181905550600060078281548110610c8257610c8261245e565b6000918252602080832085845260088252604080852033808752935284208054858255600182018690556002820186905560038201959095556006909302018054909450919291610ce0916001600160a01b03919091169083611999565b604051818152849033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059590602001610989565b6000546001600160a01b03163314610d3e5760405162461bcd60e51b815260040161058290612325565b6103e861ffff82161115610dcb5760405162461bcd60e51b815260206004820152604860248201527f736574526566657272616c436f6d6d697373696f6e526174653a20696e76616c60448201527f696420726566657272616c20636f6d6d697373696f6e207261746520626173696064820152677320706f696e747360c01b608482015260a401610582565b600d805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b60075460005b81811015610e1457610e048161099b565b610e0d8161242d565b9050610df3565b5050565b6000546001600160a01b03163314610e425760405162461bcd60e51b815260040161058290612325565b610e4c6000611a08565b565b6005546001600160a01b03163314610ea85760405162461bcd60e51b815260206004820152601860248201527f736574466565416464726573733a20464f5242494444454e00000000000000006044820152606401610582565b6001600160a01b038116610ef45760405162461bcd60e51b8152602060048201526013602482015272736574466565416464726573733a205a45524f60681b6044820152606401610582565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000610f276001610af184866117e2565b9392505050565b60026001541415610f515760405162461bcd60e51b81526004016105829061235a565b6002600181905550600060078481548110610f6e57610f6e61245e565b60009182526020808320878452600882526040808520338652909252922060069091029091019150610f9f8561099b565b600084118015610fb95750600d546001600160a01b031615155b8015610fcd57506001600160a01b03831615155b8015610fe257506001600160a01b0383163314155b1561104d57600d54604051630c7f7b6b60e01b81523360048201526001600160a01b03858116602483015290911690630c7f7b6b90604401600060405180830381600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050505b611056856117fa565b83156112255781546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156110ad57600080fd5b505af11580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190612132565b5060025482546001600160a01b03908116911614156111aa57600061119a61271061094e600260009054906101000a90046001600160a01b03166001600160a01b031663b65d08b06040518163ffffffff1660e01b815260040160206040518083038186803b15801561115757600080fd5b505afa15801561116b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118f919061216c565b889061ffff166119f0565b90506111a685826117e2565b9450505b600482015461ffff16156112165760048201546000906111d7906127109061094e90889061ffff166119f0565b60055484549192506111f6916001600160a01b03908116911683611999565b815461120e90829061120890886117ee565b906117e2565b825550611225565b805461122290856117ee565b81555b600382015481546112409164e8d4a510009161094e916119f0565b6001820155604051848152859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505060018055505050565b6000806007848154811061129d5761129d61245e565b600091825260208083208784526008825260408085206001600160a01b03898116875293528085206006949094029091016003810154815492516370a0823160e01b815230600482015291965093949291909116906370a082319060240160206040518083038186803b15801561131357600080fd5b505afa158015611327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134b91906121a2565b905083600201544311801561135f57508015155b156113bf576000611374856002015443610f16565b9050600061139b60095461094e8860010154610af1600654876119f090919063ffffffff16565b90506113ba6113b38461094e8464e8d4a510006119f0565b85906117ee565b935050505b60006113e9846001015461120864e8d4a5100061094e8789600001546119f090919063ffffffff16565b90506114028460020154826117ee90919063ffffffff16565b98975050505050505050565b6000546001600160a01b031633146114385760405162461bcd60e51b815260040161058290612325565b6127108361ffff16111561149c5760405162461bcd60e51b815260206004820152602560248201527f6164643a20696e76616c6964206465706f7369742066656520626173697320706044820152646f696e747360d81b6064820152608401610582565b621275008211156114ef5760405162461bcd60e51b815260206004820152601d60248201527f6164643a20696e76616c6964206861727665737420696e74657276616c0000006044820152606401610582565b80156114fd576114fd610ded565b6000600a54431161151057600a54611512565b435b60095490915061152290876117ee565b6009556040805160c0810182526001600160a01b0396871681526020810197885290810191825260006060820181815261ffff9687166080840190815260a0840196875260078054600181018255935292517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600690930292830180546001600160a01b031916919099161790975596517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68988015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a87015593517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b8601555091517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c8401805461ffff191691909216179055517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68d90910155565b6004546001600160a01b031633146116d95760405162461bcd60e51b815260206004820152601860248201527f736574446576416464726573733a20464f5242494444454e00000000000000006044820152606401610582565b6001600160a01b0381166117255760405162461bcd60e51b8152602060048201526013602482015272736574446576416464726573733a205a45524f60681b6044820152606401610582565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146117715760405162461bcd60e51b815260040161058290612325565b6001600160a01b0381166117d65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610582565b6117df81611a08565b50565b6000610f2782846123ea565b6000610f278284612391565b60006007828154811061180f5761180f61245e565b6000918252602080832085845260088252604080852033865290925292206003810154600690920290920192506118565760058201546118509042906117ee565b60038201555b6000611884826001015461120864e8d4a5100061094e876003015487600001546119f090919063ffffffff16565b600085815260086020908152604080832033845290915290206003015490915042106119305760008111806118bd575060008260020154115b1561192b5760006118db8360020154836117ee90919063ffffffff16565b90506118f68360020154600b546117e290919063ffffffff16565b600b556000600284015560058401546119109042906117ee565b600384015561191f3382611a58565b6119293382611b9e565b505b611993565b801561199357600282015461194590826117ee565b6002830155600b5461195790826117ee565b600b55604051818152849033907fee470483107f579a55c754fa00613c45a9a3b617a418b39cb0be97e5381ba7c1906020015b60405180910390a35b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526119eb908490611ea5565b505050565b6000610f2782846123cb565b6000610f2782846123a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015611a9c57600080fd5b505afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906121a2565b905080821115611b655760025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044015b602060405180830381600087803b158015611b2d57600080fd5b505af1158015611b41573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119939190612132565b60025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb90604401611b13565b600d546001600160a01b031615801590611bc45750600d54600160a01b900461ffff1615155b15610e1457600d54604051634a9fefc760e01b81526001600160a01b0384811660048301526000921690634a9fefc79060240160206040518083038186803b158015611c0f57600080fd5b505afa158015611c23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c479190612115565b600d54909150600090611c6e906127109061094e908690600160a01b900461ffff166119f0565b90506001600160a01b03821615801590611c885750600081115b15611993576002546040516370a0823160e01b815230600482015282916001600160a01b0316906370a082319060240160206040518083038186803b158015611cd057600080fd5b505afa158015611ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0891906121a2565b1015611d73576003546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015611d5a57600080fd5b505af1158015611d6e573d6000803e3d6000fd5b505050505b60025460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015611dc157600080fd5b505af1158015611dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df99190612132565b50600d54604051631b82d29760e31b81526001600160a01b038481166004830152602482018490529091169063dc1694b890604401600060405180830381600087803b158015611e4857600080fd5b505af1158015611e5c573d6000803e3d6000fd5b50505050816001600160a01b0316846001600160a01b03167f86ddab457291316e0f5496737e5ca67c4037234c32c3be04c48ae96186893a7b8360405161198a91815260200190565b6000611efa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f779092919063ffffffff16565b8051909150156119eb5780806020019051810190611f189190612132565b6119eb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610582565b6060611f868484600085611f8e565b949350505050565b606082471015611fef5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610582565b6001600160a01b0385163b6120465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610582565b600080866001600160a01b0316858760405161206291906122d6565b60006040518083038185875af1925050503d806000811461209f576040519150601f19603f3d011682016040523d82523d6000602084013e6120a4565b606091505b50915091506120b48282866120bf565b979650505050505050565b606083156120ce575081610f27565b8251156120de5782518084602001fd5b8160405162461bcd60e51b815260040161058291906122f2565b60006020828403121561210a57600080fd5b8135610f2781612474565b60006020828403121561212757600080fd5b8151610f2781612474565b60006020828403121561214457600080fd5b8151610f2781612489565b60006020828403121561216157600080fd5b8135610f2781612497565b60006020828403121561217e57600080fd5b8151610f2781612497565b60006020828403121561219b57600080fd5b5035919050565b6000602082840312156121b457600080fd5b5051919050565b600080604083850312156121ce57600080fd5b8235915060208301356121e081612474565b809150509250929050565b600080600080600060a0868803121561220357600080fd5b85359450602086013561221581612474565b9350604086013561222581612497565b925060608601359150608086013561223c81612489565b809150509295509295909350565b6000806040838503121561225d57600080fd5b50508035926020909101359150565b60008060006060848603121561228157600080fd5b8335925060208401359150604084013561229a81612474565b809150509250925092565b600080600080600060a086880312156122bd57600080fd5b8535945060208601359350604086013561222581612497565b600082516122e8818460208701612401565b9190910192915050565b6020815260008251806020840152612311816040850160208701612401565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156123a4576123a4612448565b500190565b6000826123c657634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156123e5576123e5612448565b500290565b6000828210156123fc576123fc612448565b500390565b60005b8381101561241c578181015183820152602001612404565b838111156119935750506000910152565b600060001982141561244157612441612448565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146117df57600080fd5b80151581146117df57600080fd5b61ffff811681146117df57600080fdfea26469706673582212202f995ca203c8d3204dbfc5f043af1255423830a84a94e3289a4574963bf11a6464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x9 SSTORE PUSH1 0xD DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x19 PUSH1 0xA2 SHL OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2655 CODESIZE SUB DUP1 PUSH3 0x2655 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4D SWAP2 PUSH3 0x102 JUMP JUMPDEST PUSH3 0x58 CALLER PUSH3 0xB2 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0xA SSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD CALLER SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH3 0x168 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x126 DUP2 PUSH3 0x14F JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH3 0x139 DUP2 PUSH3 0x14F JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x24DD DUP1 PUSH3 0x178 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x93F1A40B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBA13A572 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBA13A572 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xD30EF61B EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xDE73149D EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x99335C39 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xA6530050 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xAF018DE8 EQ PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x8DBDBE6D EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x8F97F54C EQ PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x6497AA90 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x8705FCD4 EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AD10EF6 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x48B22BFB GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x48B22BFB EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x55DBC826 EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AD10EF6 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x41275358 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x474FA630 EQ PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2143E545 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2143E545 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x251B7E89 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x27DDB5A9 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x2E6C998D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x2F1536B8 EQ PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xBA84CD2 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH11 0x422CA8B0A00A4250000000 DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x24B PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x224A JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x225 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39E PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x214F JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x24B PUSH2 0xDED JUMP JUMPDEST PUSH2 0x225 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x225 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CA JUMP JUMPDEST PUSH2 0x225 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x224A JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x226C JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x225 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH2 0x4D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x21EB JUMP JUMPDEST PUSH2 0x140E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH3 0x127500 DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x593 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xEEDC6338C9C1AD8F3CD6C90DD09DBE98DBD57E610D3E59A17996D07ACB0D9511 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2710 DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365743A20696E76616C6964206465706F736974206665652062617369732070 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F696E7473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH3 0x127500 DUP3 GT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365743A20696E76616C6964206861727665737420696E74657276616C000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71C JUMPI PUSH2 0x71C PUSH2 0xDED JUMP JUMPDEST PUSH2 0x75F DUP5 PUSH2 0x759 PUSH1 0x7 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x17E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x779 JUMPI PUSH2 0x779 PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7A2 JUMPI PUSH2 0x7A2 PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7E1 JUMPI PUSH2 0x7E1 PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x889 JUMPI PUSH2 0x889 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x6 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH2 0x900 DUP5 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x909 DUP5 PUSH2 0x17FA JUMP JUMPDEST DUP3 ISZERO PUSH2 0x933 JUMPI DUP1 SLOAD PUSH2 0x91B SWAP1 DUP5 PUSH2 0x17E2 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0x933 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x954 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x94E SWAP2 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH11 0x422CA8B0A00A4250000000 PUSH1 0xC SLOAD GT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F206D6F7265207374616B696E67 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0xA1E JUMPI POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0xAAA JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0xABA JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xF16 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAF7 PUSH1 0x9 SLOAD PUSH2 0x94E DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0xAF1 PUSH1 0x6 SLOAD DUP8 PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB1A PUSH2 0xB11 PUSH2 0xB0A DUP4 PUSH1 0xA PUSH2 0x19FC JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP PUSH4 0x40C10F19 SWAP3 POP AND PUSH2 0xBA5 DUP5 PUSH1 0xA PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC2D PUSH2 0xC22 DUP5 PUSH2 0x94E PUSH5 0xE8D4A51000 DUP6 PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP NUMBER PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x6 SWAP1 SWAP4 MUL ADD DUP1 SLOAD SWAP1 SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH2 0xCE0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP1 PUSH1 0x20 ADD PUSH2 0x989 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF DUP3 AND GT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574526566657272616C436F6D6D697373696F6E526174653A20696E76616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696420726566657272616C20636F6D6D697373696F6E20726174652062617369 PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x7320706F696E7473 PUSH1 0xC0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH2 0xFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE14 JUMPI PUSH2 0xE04 DUP2 PUSH2 0x99B JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP1 POP PUSH2 0xDF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0xE4C PUSH1 0x0 PUSH2 0x1A08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574466565416464726573733A20464F5242494444454E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x736574466565416464726573733A205A45524F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 PUSH1 0x1 PUSH2 0xAF1 DUP5 DUP7 PUSH2 0x17E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF6E JUMPI PUSH2 0xF6E PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xF9F DUP6 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0xFB9 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xFCD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xFE2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x104D JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xC7F7B6B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC7F7B6B SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1048 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x1056 DUP6 PUSH2 0x17FA JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1225 JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E5 SWAP2 SWAP1 PUSH2 0x2132 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x11AA JUMPI PUSH1 0x0 PUSH2 0x119A PUSH2 0x2710 PUSH2 0x94E PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB65D08B0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x216C JUMP JUMPDEST DUP9 SWAP1 PUSH2 0xFFFF AND PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x11A6 DUP6 DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP5 POP POP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0x1216 JUMPI PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x11D7 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x94E SWAP1 DUP9 SWAP1 PUSH2 0xFFFF AND PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP5 SLOAD SWAP2 SWAP3 POP PUSH2 0x11F6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1999 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x120E SWAP1 DUP3 SWAP1 PUSH2 0x1208 SWAP1 DUP9 PUSH2 0x17EE JUMP JUMPDEST SWAP1 PUSH2 0x17E2 JUMP JUMPDEST DUP3 SSTORE POP PUSH2 0x1225 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1222 SWAP1 DUP6 PUSH2 0x17EE JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x1240 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x94E SWAP2 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP4 MSTORE DUP1 DUP6 KECCAK256 PUSH1 0x6 SWAP5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD SWAP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP7 POP SWAP4 SWAP5 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1327 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x135F JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x13BF JUMPI PUSH1 0x0 PUSH2 0x1374 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xF16 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x139B PUSH1 0x9 SLOAD PUSH2 0x94E DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xAF1 PUSH1 0x6 SLOAD DUP8 PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13BA PUSH2 0x13B3 DUP5 PUSH2 0x94E DUP5 PUSH5 0xE8D4A51000 PUSH2 0x19F0 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x17EE JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1208 PUSH5 0xE8D4A51000 PUSH2 0x94E DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1402 DUP5 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2710 DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20696E76616C6964206465706F736974206665652062617369732070 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F696E7473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH3 0x127500 DUP3 GT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20696E76616C6964206861727665737420696E74657276616C000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14FD JUMPI PUSH2 0x14FD PUSH2 0xDED JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0x1510 JUMPI PUSH1 0xA SLOAD PUSH2 0x1512 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x1522 SWAP1 DUP8 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 DUP9 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0xFFFF SWAP7 DUP8 AND PUSH1 0x80 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP5 ADD SWAP7 DUP8 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP4 MSTORE SWAP3 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x6 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP10 AND OR SWAP1 SWAP8 SSTORE SWAP7 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 DUP9 ADD SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A DUP8 ADD SSTORE SWAP4 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68B DUP7 ADD SSTORE POP SWAP2 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68C DUP5 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68D SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574446576416464726573733A20464F5242494444454E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x736574446576416464726573733A205A45524F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH2 0x17DF DUP2 PUSH2 0x1A08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP3 DUP5 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP3 DUP5 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x180F JUMPI PUSH2 0x180F PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x6 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x1856 JUMPI PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x1850 SWAP1 TIMESTAMP SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x1884 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1208 PUSH5 0xE8D4A51000 PUSH2 0x94E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 POP TIMESTAMP LT PUSH2 0x1930 JUMPI PUSH1 0x0 DUP2 GT DUP1 PUSH2 0x18BD JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x2 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x192B JUMPI PUSH1 0x0 PUSH2 0x18DB DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x18F6 DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0xB SLOAD PUSH2 0x17E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x0 PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x1910 SWAP1 TIMESTAMP SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SSTORE PUSH2 0x191F CALLER DUP3 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1929 CALLER DUP3 PUSH2 0x1B9E JUMP JUMPDEST POP JUMPDEST PUSH2 0x1993 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1993 JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x1945 SWAP1 DUP3 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0xB SLOAD PUSH2 0x1957 SWAP1 DUP3 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xEE470483107F579A55C754FA00613C45A9A3B617A418B39CB0BE97E5381BA7C1 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x19EB SWAP1 DUP5 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP3 DUP5 PUSH2 0x23CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP3 DUP5 PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD4 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B65 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1993 SWAP2 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BC4 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE14 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A9FEFC7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x4A9FEFC7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C47 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1C6E SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x94E SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C88 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1993 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D08 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST LT ISZERO PUSH2 0x1D73 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF9 SWAP2 SWAP1 PUSH2 0x2132 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1B82D297 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDC1694B8 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x86DDAB457291316E0F5496737E5CA67C4037234C32C3BE04C48AE96186893A7B DUP4 PUSH1 0x40 MLOAD PUSH2 0x198A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F77 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x19EB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F18 SWAP2 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0x19EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F86 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1F8E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1FEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2046 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2062 SWAP2 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x209F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20B4 DUP3 DUP3 DUP7 PUSH2 0x20BF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x20CE JUMPI POP DUP2 PUSH2 0xF27 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x20DE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x210A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF27 DUP2 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF27 DUP2 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF27 DUP2 PUSH2 0x2489 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF27 DUP2 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF27 DUP2 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x219B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x21E0 DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2215 DUP2 PUSH2 0x2474 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2225 DUP2 PUSH2 0x2497 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x223C DUP2 PUSH2 0x2489 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x225D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x229A DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2225 DUP2 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x22E8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2401 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2311 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x23A4 JUMPI PUSH2 0x23A4 PUSH2 0x2448 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x23E5 JUMPI PUSH2 0x23E5 PUSH2 0x2448 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x23FC JUMPI PUSH2 0x23FC PUSH2 0x2448 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x241C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2404 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1993 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2441 JUMPI PUSH2 0x2441 PUSH2 0x2448 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SWAP10 0x5C LOG2 SUB 0xC8 0xD3 KECCAK256 0x4D 0xBF 0xC5 CREATE NUMBER 0xAF SLT SSTORE TIMESTAMP CODESIZE ADDRESS 0xA8 0x4A SWAP5 0xE3 0x28 SWAP11 GASLIMIT PUSH21 0x963BF11A6464736F6C634300080700330000000000 ",
							"sourceMap": "949:16672:7:-:0;;;3474:1;3441:34;;3820:42;;;-1:-1:-1;;;;3820:42:7;-1:-1:-1;;;3820:42:7;;;4671:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:5;921:18:0;:32::i;:::-;1701:1:1;1806:22;;4837:7:7;:18;;-1:-1:-1;;;;;;4837:18:7;;;-1:-1:-1;;;;;4837:18:7;;;;;;;4866:12;:28;;;;;;;;;;;;;;;4905:10;:24;4940:15;:34;;;;-1:-1:-1;4987:23:7;;5000:10;4987:23;;;;;;;;5021:10;:23;;;;;;;;949:16672;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:582:10:-;155:6;163;171;179;232:3;220:9;211:7;207:23;203:33;200:53;;;249:1;246;239:12;200:53;281:9;275:16;300:46;340:5;300:46;:::i;:::-;415:2;400:18;;394:25;365:5;;-1:-1:-1;428:48:10;394:25;428:48;:::i;:::-;542:2;527:18;;521:25;586:2;571:18;;;565:25;14:582;;495:7;;-1:-1:-1;14:582:10;-1:-1:-1;;;14:582:10:o;601:146::-;-1:-1:-1;;;;;691:31:10;;681:42;;671:70;;737:1;734;727:12;671:70;601:146;:::o;:::-;949:16672:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_1141": {
									"entryPoint": null,
									"id": 1141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAXIMUM_HARVEST_INTERVAL_1144": {
									"entryPoint": null,
									"id": 1144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAXIMUM_REFERRAL_COMMISSION_RATE_1184": {
									"entryPoint": null,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_STAKING_ALLOCATION_1155": {
									"entryPoint": null,
									"id": 1155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_445": {
									"entryPoint": 7845,
									"id": 445,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_753": {
									"entryPoint": null,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6664,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1349": {
									"entryPoint": 5134,
									"id": 1349,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@add_939": {
									"entryPoint": 6126,
									"id": 939,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@canHarvest_1572": {
									"entryPoint": null,
									"id": 1572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_1929": {
									"entryPoint": 3886,
									"id": 1929,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@devAddress_1134": {
									"entryPoint": null,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_984": {
									"entryPoint": 6652,
									"id": 984,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2095": {
									"entryPoint": 3138,
									"id": 2095,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeAddress_1136": {
									"entryPoint": null,
									"id": 1136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_605": {
									"entryPoint": 8078,
									"id": 605,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_535": {
									"entryPoint": 8055,
									"id": 535,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1437": {
									"entryPoint": 3862,
									"id": 1437,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_464": {
									"entryPoint": null,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@loteTreasury_1132": {
									"entryPoint": null,
									"id": 1132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lotteryPerBlock_1138": {
									"entryPoint": null,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lotteryReferral_1178": {
									"entryPoint": null,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lottery_1129": {
									"entryPoint": null,
									"id": 1129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@massUpdatePools_1597": {
									"entryPoint": 3565,
									"id": 1597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_969": {
									"entryPoint": 6640,
									"id": 969,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payOrLockupPendingPosition_2242": {
									"entryPoint": 6138,
									"id": 2242,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@payReferralCommission_2483": {
									"entryPoint": 7070,
									"id": 2483,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@pendingPosition_1547": {
									"entryPoint": 4743,
									"id": 1547,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_1159": {
									"entryPoint": 1494,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1281": {
									"entryPoint": null,
									"id": 1281,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@referralCommissionRate_1181": {
									"entryPoint": null,
									"id": 1181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 3608,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safePositionTransfer_2280": {
									"entryPoint": 6744,
									"id": 2280,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_253": {
									"entryPoint": 6553,
									"id": 253,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setDevAddress_2308": {
									"entryPoint": 5759,
									"id": 2308,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeAddress_2336": {
									"entryPoint": 3662,
									"id": 2336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPositionReferral_2371": {
									"entryPoint": 2045,
									"id": 2371,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setReferralCommissionRate_2390": {
									"entryPoint": 3348,
									"id": 2390,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1419": {
									"entryPoint": 1581,
									"id": 1419,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@stakingMinted_1175": {
									"entryPoint": null,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startBlock_1171": {
									"entryPoint": null,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_954": {
									"entryPoint": 6114,
									"id": 954,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalAllocPoint_1169": {
									"entryPoint": null,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalLockedUpRewards_1173": {
									"entryPoint": null,
									"id": 1173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 5959,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateEmissionRate_2358": {
									"entryPoint": 1368,
									"id": 2358,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1733": {
									"entryPoint": 2459,
									"id": 1733,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1166": {
									"entryPoint": null,
									"id": 1166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_740": {
									"entryPoint": 8383,
									"id": 740,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_2021": {
									"entryPoint": 2121,
									"id": 2021,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ILotteryReferral_$2511": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 8527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16_fromMemory": {
									"entryPoint": 8556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 8635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$222t_uint16t_uint256t_bool": {
									"entryPoint": 8683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 8812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint16t_uint256t_bool": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$222_t_uint256_t_uint256_t_uint256_t_uint16_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint16_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILoteTreasury_$1092__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILotteryReferral_$2511__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILotteryToken_$2575__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ecf01aeb804f0ae223eada9d16893a9009cdcbe208d348705dc613f9a9f5331__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_10056cb1bd3d8ee5530a7851844bdbf3666d1f6a5ce16135570259449183c8ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2135bd7a71e1ea126d853a1cc8c34707e4a82417f6097a0ca255ae1f628b3c99__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ccf24bd4623988e8895731fc5360356fd4ddc1cf9889b4a2ccd0c3b70522c65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3237ba8244ae492b3c06266a57c254aac412dbaf030a3c787404ac514698d9af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3afb489d0fdedbdd1ea85eac9ddbe1364eb6d65afbae3ba5fa8e9d567276c114__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f178f6b435869b11e7807ebabe44aaf37869349d89b2de2d38d8ce2ca49db57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9353dfb5d58f0da66015bbcadafa0686e2e7b7226db2e603088e70c7012680cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a334800cd19b18b6d938393d303a75ee080f825dc478f54dd3ef6d6a8de1a586__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4b2eb0827e71ee18958471ff450fe4680022dd427d5a87a7a424434363e4c1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9217,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 9261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 9332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 9353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint16": {
									"entryPoint": 9367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16609:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:10"
															},
															"nodeType": "YulIf",
															"src": "94:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:10",
														"type": ""
													}
												],
												"src": "14:247:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:170:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "393:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "395:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "395:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "395:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "368:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "377:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "364:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "364:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "389:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "360:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:32:10"
															},
															"nodeType": "YulIf",
															"src": "357:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "418:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "437:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "422:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "481:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "456:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "496:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "506:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "496:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "313:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "324:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "336:6:10",
														"type": ""
													}
												],
												"src": "266:251:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "600:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "646:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "655:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "658:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "648:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "648:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "648:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "621:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "642:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:32:10"
															},
															"nodeType": "YulIf",
															"src": "610:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "671:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "690:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "684:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "675:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "731:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "709:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "709:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "709:28:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "746:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "756:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "746:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "566:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "577:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "589:6:10",
														"type": ""
													}
												],
												"src": "522:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "867:177:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "913:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "922:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "925:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "915:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "915:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "915:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "888:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "897:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "884:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "884:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "880:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "880:32:10"
															},
															"nodeType": "YulIf",
															"src": "877:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "938:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "964:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "951:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "942:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1008:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "983:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "983:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1023:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1033:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ILotteryReferral_$2511",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "833:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "844:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "856:6:10",
														"type": ""
													}
												],
												"src": "772:272:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1118:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1164:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1173:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1176:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1166:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1166:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1166:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1148:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1135:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1135:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1160:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1131:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:32:10"
															},
															"nodeType": "YulIf",
															"src": "1128:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1189:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1215:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1193:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1234:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1234:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1273:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1283:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1273:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1084:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1095:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1107:6:10",
														"type": ""
													}
												],
												"src": "1049:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1379:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1425:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1400:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1396:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1421:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1392:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:32:10"
															},
															"nodeType": "YulIf",
															"src": "1389:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1450:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1469:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1463:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1454:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1512:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1488:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1488:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1488:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1527:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1537:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1527:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1345:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1356:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1368:6:10",
														"type": ""
													}
												],
												"src": "1299:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1623:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1669:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1678:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1681:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1671:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1671:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1671:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1644:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1653:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1640:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1665:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:32:10"
															},
															"nodeType": "YulIf",
															"src": "1633:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1694:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1717:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1704:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1694:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1589:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1600:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1612:6:10",
														"type": ""
													}
												],
												"src": "1553:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1819:103:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1865:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1874:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1877:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1867:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1867:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1867:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1840:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1849:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1836:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1861:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1832:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:32:10"
															},
															"nodeType": "YulIf",
															"src": "1829:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1890:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1906:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1900:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1785:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1796:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1808:6:10",
														"type": ""
													}
												],
												"src": "1738:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2014:228:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2060:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2069:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2035:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2044:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2031:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2056:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2027:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2027:32:10"
															},
															"nodeType": "YulIf",
															"src": "2024:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2085:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2108:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2095:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2085:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2127:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2157:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2168:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2153:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2153:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2140:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2131:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2206:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2181:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2221:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2231:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1972:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1983:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1995:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2003:6:10",
														"type": ""
													}
												],
												"src": "1927:315:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2395:525:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2442:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2451:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2444:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2444:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2425:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:33:10"
															},
															"nodeType": "YulIf",
															"src": "2405:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2467:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2490:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2477:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2509:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2539:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2550:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2522:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2513:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2588:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2563:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2563:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2563:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2603:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2613:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2627:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2659:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2670:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2655:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2655:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2642:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2631:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2707:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "2683:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2683:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2724:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2734:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2788:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2773:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2760:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2760:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2801:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2844:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2816:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:33:10"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2805:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2880:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2858:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2858:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2897:17:10",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "2907:7:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2897:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$222t_uint16t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2329:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2340:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2352:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2360:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2368:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2376:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2384:6:10",
														"type": ""
													}
												],
												"src": "2247:673:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3012:161:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3058:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3067:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3070:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3060:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3060:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3060:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3033:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3042:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3029:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3029:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3054:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3025:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:32:10"
															},
															"nodeType": "YulIf",
															"src": "3022:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3083:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3106:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3093:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3093:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3083:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3125:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3152:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3163:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3148:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3148:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3135:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3125:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2970:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2981:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2993:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3001:6:10",
														"type": ""
													}
												],
												"src": "2925:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:279:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3337:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3340:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3330:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:10"
															},
															"nodeType": "YulIf",
															"src": "3292:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3353:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3363:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3395:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3422:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3433:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3418:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3405:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3405:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3446:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3476:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3487:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3472:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3459:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3450:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3525:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3500:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3500:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3500:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3540:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3550:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3540:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3232:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3243:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3255:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3263:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3271:6:10",
														"type": ""
													}
												],
												"src": "3178:383:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3700:452:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3747:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3756:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3759:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3749:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3749:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3749:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3721:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3730:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3742:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3713:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:33:10"
															},
															"nodeType": "YulIf",
															"src": "3710:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3772:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3795:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3782:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3782:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3814:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3841:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3852:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3837:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3837:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3824:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3824:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3865:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3895:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3906:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3891:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3891:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3878:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3878:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3869:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3943:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "3919:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3958:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3968:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3958:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3982:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4009:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4020:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4005:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3992:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4033:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4065:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4076:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4061:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4048:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:33:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4037:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4112:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4090:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4090:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4129:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4139:7:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint16t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3634:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3645:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3657:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3665:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3673:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3681:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3689:6:10",
														"type": ""
													}
												],
												"src": "3566:586:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4294:137:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4304:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4324:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4318:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4308:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4366:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4374:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:17:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4381:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4386:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4340:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4340:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4402:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4413:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4418:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4409:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4402:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4270:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4275:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4286:3:10",
														"type": ""
													}
												],
												"src": "4157:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4537:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4547:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4559:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4570:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4555:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4555:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4547:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4589:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4604:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4620:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4625:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4616:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4616:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4629:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4612:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4612:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4600:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4600:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4582:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4582:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4582:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4506:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4517:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4528:4:10",
														"type": ""
													}
												],
												"src": "4436:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4773:175:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4783:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4795:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4806:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4791:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4783:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4818:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4836:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4841:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4828:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4828:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4822:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4863:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4878:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4886:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4874:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4874:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4856:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4856:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4910:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4921:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4906:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4906:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4930:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4938:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4926:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4926:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4899:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4899:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4899:43:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4734:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4745:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4753:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4764:4:10",
														"type": ""
													}
												],
												"src": "4644:304:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5110:218:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5120:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5132:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5143:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5128:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5128:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5120:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5155:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5173:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5178:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5169:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5169:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5182:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5165:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5159:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5215:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5223:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5193:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5247:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5258:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5243:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5267:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5275:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5263:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5263:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5236:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5299:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5310:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5295:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5295:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5315:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5288:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5288:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5063:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5074:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5082:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5090:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5101:4:10",
														"type": ""
													}
												],
												"src": "4953:375:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5462:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5472:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5484:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5495:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5480:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5472:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5514:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5545:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5550:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5541:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5541:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5554:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5537:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5537:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5507:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5578:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5589:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5574:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5574:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5594:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5567:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5567:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5567:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5423:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5434:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5442:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5453:4:10",
														"type": ""
													}
												],
												"src": "5333:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5707:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5717:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5729:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5740:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5725:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5717:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5759:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5784:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5777:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5777:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5770:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5770:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5752:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5752:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5752:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5676:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5687:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5698:4:10",
														"type": ""
													}
												],
												"src": "5612:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6057:333:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6067:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6079:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6090:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6075:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6075:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6067:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6110:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6125:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6141:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6146:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6137:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6137:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6150:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6133:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6121:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6103:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6103:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6103:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6174:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6185:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6170:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6170:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6190:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6163:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6163:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6163:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6217:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6228:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6213:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6213:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6233:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6206:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6206:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6206:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6260:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6271:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6256:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6249:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6249:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6303:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6314:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6299:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "6324:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6332:6:10",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6320:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6320:19:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6292:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6292:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6292:48:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6360:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6371:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6356:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6356:19:10"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6349:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6349:35:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$222_t_uint256_t_uint256_t_uint256_t_uint16_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint16_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5986:9:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5997:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6005:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6013:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6021:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6029:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6037:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6048:4:10",
														"type": ""
													}
												],
												"src": "5804:586:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6518:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6528:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6540:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6551:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6536:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6536:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6528:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6570:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6585:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6601:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6606:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6597:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6597:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6610:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6593:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6593:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6581:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6581:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6563:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6563:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6563:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILoteTreasury_$1092__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6487:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6498:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6509:4:10",
														"type": ""
													}
												],
												"src": "6395:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6751:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6761:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6773:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6784:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6769:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6761:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6803:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6818:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6834:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6839:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6830:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6830:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6843:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6826:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6826:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6814:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6814:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6796:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6796:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6796:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILotteryReferral_$2511__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6720:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6731:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6742:4:10",
														"type": ""
													}
												],
												"src": "6625:228:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6981:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6991:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7003:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7014:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6999:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6991:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7033:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7048:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7064:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7069:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7060:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7060:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7073:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7056:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7056:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7044:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7044:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7026:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILotteryToken_$2575__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6950:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6961:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6972:4:10",
														"type": ""
													}
												],
												"src": "6858:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7209:262:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7226:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7237:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7219:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7219:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7219:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7249:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7269:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7263:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7263:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7253:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7296:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7307:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7292:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7292:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7312:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7285:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7285:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7285:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7354:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7362:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7350:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7350:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7371:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7382:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7367:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7367:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7328:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7328:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7328:66:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7403:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7438:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7446:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7434:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7434:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7455:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7451:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7451:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7430:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7430:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7462:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7411:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7411:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7403:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7178:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7189:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7200:4:10",
														"type": ""
													}
												],
												"src": "7088:383:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7650:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7667:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7678:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7660:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7660:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7660:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7701:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7712:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7697:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7697:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7690:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7690:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7740:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7751:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7736:18:10"
																	},
																	{
																		"hexValue": "6164643a20696e76616c6964206465706f736974206665652062617369732070",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7756:34:10",
																		"type": "",
																		"value": "add: invalid deposit fee basis p"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7729:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7729:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7811:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7822:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7807:18:10"
																	},
																	{
																		"hexValue": "6f696e7473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7827:7:10",
																		"type": "",
																		"value": "oints"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7800:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7800:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7800:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7844:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7867:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7852:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ecf01aeb804f0ae223eada9d16893a9009cdcbe208d348705dc613f9a9f5331__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7627:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7641:4:10",
														"type": ""
													}
												],
												"src": "7476:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8056:302:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8073:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8084:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8066:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8066:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8066:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8118:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8103:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8123:2:10",
																		"type": "",
																		"value": "72"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8096:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8096:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8146:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8157:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8142:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8142:18:10"
																	},
																	{
																		"hexValue": "736574526566657272616c436f6d6d697373696f6e526174653a20696e76616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8162:34:10",
																		"type": "",
																		"value": "setReferralCommissionRate: inval"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8135:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8135:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8217:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8228:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8213:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8213:18:10"
																	},
																	{
																		"hexValue": "696420726566657272616c20636f6d6d697373696f6e20726174652062617369",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8233:34:10",
																		"type": "",
																		"value": "id referral commission rate basi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8206:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8288:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8299:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8284:19:10"
																	},
																	{
																		"hexValue": "7320706f696e7473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8305:10:10",
																		"type": "",
																		"value": "s points"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8277:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8277:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8277:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8325:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8337:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8348:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8333:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8325:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10056cb1bd3d8ee5530a7851844bdbf3666d1f6a5ce16135570259449183c8ef__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8033:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8047:4:10",
														"type": ""
													}
												],
												"src": "7882:476:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8537:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8554:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8565:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8547:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8547:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8588:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8599:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8584:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8584:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8604:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8577:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8577:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8627:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8638:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8623:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8623:18:10"
																	},
																	{
																		"hexValue": "736574446576416464726573733a20464f5242494444454e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8643:26:10",
																		"type": "",
																		"value": "setDevAddress: FORBIDDEN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8616:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8616:54:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8679:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8691:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8702:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8687:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8687:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8679:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2135bd7a71e1ea126d853a1cc8c34707e4a82417f6097a0ca255ae1f628b3c99__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8514:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8528:4:10",
														"type": ""
													}
												],
												"src": "8363:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8890:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8907:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8918:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8900:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8900:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8941:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8952:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8937:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8937:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8957:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8930:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8930:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8930:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8980:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8991:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8976:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8976:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8996:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8969:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8969:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9051:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9062:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9047:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9067:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9040:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9040:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9040:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9085:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9097:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9108:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9093:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9085:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8867:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8881:4:10",
														"type": ""
													}
												],
												"src": "8716:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9297:169:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9314:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9325:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9307:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9307:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9307:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9348:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9359:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9344:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9364:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9387:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9398:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9383:18:10"
																	},
																	{
																		"hexValue": "736574446576416464726573733a205a45524f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9403:21:10",
																		"type": "",
																		"value": "setDevAddress: ZERO"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9376:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9376:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9434:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9446:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9457:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9442:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9434:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ccf24bd4623988e8895731fc5360356fd4ddc1cf9889b4a2ccd0c3b70522c65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9274:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9288:4:10",
														"type": ""
													}
												],
												"src": "9123:343:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9645:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9662:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9673:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9655:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9655:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9655:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9696:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9707:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9692:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9692:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9712:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9685:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9685:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9685:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9735:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9746:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9731:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9731:18:10"
																	},
																	{
																		"hexValue": "4e6f206d6f7265207374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9751:17:10",
																		"type": "",
																		"value": "No more staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9778:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9790:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9801:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9786:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9786:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9778:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3237ba8244ae492b3c06266a57c254aac412dbaf030a3c787404ac514698d9af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9622:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9636:4:10",
														"type": ""
													}
												],
												"src": "9471:339:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9989:169:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10006:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10017:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9999:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9999:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10040:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10051:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10036:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10036:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10056:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10029:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10029:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10029:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10079:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10090:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10075:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10075:18:10"
																	},
																	{
																		"hexValue": "736574466565416464726573733a205a45524f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10095:21:10",
																		"type": "",
																		"value": "setFeeAddress: ZERO"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10068:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10068:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10068:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10126:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10138:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10149:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10134:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10126:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3afb489d0fdedbdd1ea85eac9ddbe1364eb6d65afbae3ba5fa8e9d567276c114__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9966:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9980:4:10",
														"type": ""
													}
												],
												"src": "9815:343:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10337:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10354:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10365:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10347:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10347:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10388:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10399:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10384:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10384:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10404:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10377:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10377:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10377:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10427:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10438:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10423:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10423:18:10"
																	},
																	{
																		"hexValue": "6164643a20696e76616c6964206861727665737420696e74657276616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10443:31:10",
																		"type": "",
																		"value": "add: invalid harvest interval"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10416:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10416:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10416:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10484:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10496:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10507:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10492:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10492:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10484:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f178f6b435869b11e7807ebabe44aaf37869349d89b2de2d38d8ce2ca49db57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10314:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10328:4:10",
														"type": ""
													}
												],
												"src": "10163:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10695:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10712:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10723:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10705:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10705:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10746:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10757:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10742:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10762:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10735:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10735:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10785:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10796:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10781:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10781:18:10"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10801:34:10",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10774:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10774:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10774:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10856:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10867:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10852:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10852:18:10"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10872:8:10",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10845:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10845:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10845:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10890:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10902:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10913:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10898:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10898:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10890:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10672:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10686:4:10",
														"type": ""
													}
												],
												"src": "10521:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11102:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11119:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11130:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11112:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11112:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11112:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11153:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11164:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11149:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11149:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11169:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11142:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11192:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11203:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11188:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11188:18:10"
																	},
																	{
																		"hexValue": "7365743a20696e76616c6964206465706f736974206665652062617369732070",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11208:34:10",
																		"type": "",
																		"value": "set: invalid deposit fee basis p"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11181:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11181:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11263:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11274:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11259:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11259:18:10"
																	},
																	{
																		"hexValue": "6f696e7473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11279:7:10",
																		"type": "",
																		"value": "oints"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11252:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11252:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11296:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11308:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11319:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11304:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11304:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11296:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9353dfb5d58f0da66015bbcadafa0686e2e7b7226db2e603088e70c7012680cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11079:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11093:4:10",
														"type": ""
													}
												],
												"src": "10928:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11508:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11525:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11536:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11518:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11518:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11518:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11559:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11570:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11555:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11555:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11548:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11548:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11548:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11598:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11609:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11594:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11594:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11614:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11587:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11587:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11658:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11670:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11681:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11666:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11666:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11658:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11485:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11499:4:10",
														"type": ""
													}
												],
												"src": "11334:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11869:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11886:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11879:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11879:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11879:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11920:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11931:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11916:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11916:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11936:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11909:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11909:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11959:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11970:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11955:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11955:18:10"
																	},
																	{
																		"hexValue": "7365743a20696e76616c6964206861727665737420696e74657276616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11975:31:10",
																		"type": "",
																		"value": "set: invalid harvest interval"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11948:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11948:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12016:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12028:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12039:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12024:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12024:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12016:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a334800cd19b18b6d938393d303a75ee080f825dc478f54dd3ef6d6a8de1a586__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11846:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11860:4:10",
														"type": ""
													}
												],
												"src": "11695:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12227:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12244:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12255:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12237:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12237:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12237:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12278:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12289:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12274:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12274:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12294:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12267:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12267:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12267:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12317:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12328:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12313:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12313:18:10"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12333:31:10",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12306:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12306:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12306:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12374:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12386:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12397:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12382:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12382:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12374:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12204:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12218:4:10",
														"type": ""
													}
												],
												"src": "12053:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12585:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12602:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12613:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12595:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12595:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12636:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12647:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12632:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12632:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12652:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12625:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12675:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12686:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12671:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12671:18:10"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12691:20:10",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12664:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12664:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12664:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12721:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12733:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12744:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12729:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12721:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12562:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12576:4:10",
														"type": ""
													}
												],
												"src": "12411:342:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12932:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12949:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12960:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12942:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12942:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12942:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12983:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12994:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12979:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12979:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12999:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12972:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12972:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12972:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13022:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13033:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13018:18:10"
																	},
																	{
																		"hexValue": "736574466565416464726573733a20464f5242494444454e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13038:26:10",
																		"type": "",
																		"value": "setFeeAddress: FORBIDDEN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13011:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13011:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13011:54:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13074:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13086:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13097:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13082:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13082:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13074:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4b2eb0827e71ee18958471ff450fe4680022dd427d5a87a7a424434363e4c1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12909:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12923:4:10",
														"type": ""
													}
												],
												"src": "12758:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13285:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13302:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13313:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13295:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13295:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13295:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13336:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13347:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13332:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13332:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13352:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13325:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13325:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13325:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13375:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13386:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13371:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13371:18:10"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13391:34:10",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13364:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13364:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13364:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13446:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13457:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13442:18:10"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13462:12:10",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13435:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13435:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13484:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13496:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13507:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13492:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13492:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13484:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13262:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13276:4:10",
														"type": ""
													}
												],
												"src": "13111:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13696:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13713:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13724:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13706:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13706:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13706:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13747:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13758:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13743:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13743:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13763:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13736:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13736:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13736:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13786:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13797:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13782:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13782:18:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13802:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13775:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13775:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13845:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13857:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13868:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13853:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13853:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13845:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13673:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13687:4:10",
														"type": ""
													}
												],
												"src": "13522:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13981:89:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13991:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14003:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14014:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13999:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13999:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13991:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14033:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14048:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14056:6:10",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14044:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14044:19:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14026:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14026:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14026:38:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13950:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13961:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13972:4:10",
														"type": ""
													}
												],
												"src": "13882:188:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14176:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14186:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14198:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14209:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14194:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14194:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14186:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14228:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14239:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14221:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14221:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14145:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14156:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14167:4:10",
														"type": ""
													}
												],
												"src": "14075:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14386:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14396:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14408:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14419:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14404:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14404:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14396:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14438:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14449:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14431:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14431:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14431:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14476:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14487:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14472:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14472:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14492:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14465:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14465:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14465:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14347:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14358:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14366:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14377:4:10",
														"type": ""
													}
												],
												"src": "14257:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14695:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14705:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14717:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14728:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14713:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14713:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14705:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14748:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14759:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14741:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14741:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14741:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14786:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14797:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14782:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14782:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14802:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14775:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14775:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14775:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14829:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14840:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14825:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14825:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14845:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14818:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14818:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14818:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14872:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14883:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14868:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14888:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14861:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14640:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14651:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14659:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14667:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14675:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14686:4:10",
														"type": ""
													}
												],
												"src": "14510:391:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14954:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14981:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14983:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14983:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14983:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14970:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14977:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14973:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14973:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14967:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14967:13:10"
															},
															"nodeType": "YulIf",
															"src": "14964:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15012:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15023:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15026:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15019:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15019:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15012:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14937:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14940:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14946:3:10",
														"type": ""
													}
												],
												"src": "14906:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15085:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15116:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15137:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15144:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15149:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "15140:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15140:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15130:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15130:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15130:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15181:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15184:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15174:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15174:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15174:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15209:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15212:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15202:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15202:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15202:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15105:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15098:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15098:9:10"
															},
															"nodeType": "YulIf",
															"src": "15095:132:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15236:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15245:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15248:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15241:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15241:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15236:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15070:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15073:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15079:1:10",
														"type": ""
													}
												],
												"src": "15039:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15313:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15372:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15374:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15374:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15374:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15344:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15337:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15337:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15330:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15330:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15352:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15363:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15359:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15359:6:10"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15367:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15355:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15355:14:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15349:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15349:21:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:45:10"
															},
															"nodeType": "YulIf",
															"src": "15323:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15403:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15418:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15421:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15414:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15414:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15403:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15292:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15295:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15301:7:10",
														"type": ""
													}
												],
												"src": "15261:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15483:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15505:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15507:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15507:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15507:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15499:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15502:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15496:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15496:8:10"
															},
															"nodeType": "YulIf",
															"src": "15493:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15536:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15548:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15551:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15544:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15544:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15536:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15465:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15468:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15474:4:10",
														"type": ""
													}
												],
												"src": "15434:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15617:205:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15627:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15636:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15631:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15696:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15721:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15726:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15717:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15717:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15740:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15745:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15736:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15736:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15730:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15730:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15710:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15710:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15710:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15657:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15660:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15654:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15654:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15668:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15670:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15679:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15682:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15675:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15675:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15670:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15650:3:10",
																"statements": []
															},
															"src": "15646:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15785:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15798:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15803:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15794:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15794:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15812:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15787:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15787:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15787:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15777:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15771:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15771:13:10"
															},
															"nodeType": "YulIf",
															"src": "15768:48:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15595:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15600:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15605:6:10",
														"type": ""
													}
												],
												"src": "15564:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15874:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15905:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15907:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15907:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15907:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15890:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15901:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15897:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15897:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15887:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15887:17:10"
															},
															"nodeType": "YulIf",
															"src": "15884:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15936:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15947:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15954:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15943:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15943:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15936:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15856:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15866:3:10",
														"type": ""
													}
												],
												"src": "15827:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15999:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16016:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16023:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16028:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16019:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16009:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16009:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16009:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16056:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16059:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16049:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16049:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16049:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16080:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16083:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16073:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16073:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16073:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15967:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16131:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16148:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16155:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16160:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16151:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16141:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16141:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16141:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16188:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16191:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16181:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16181:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16212:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16215:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16205:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16205:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16205:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16099:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16276:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16340:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16349:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16352:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16342:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16342:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16342:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16299:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16310:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16325:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16330:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "16321:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16321:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16334:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "16317:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16317:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16306:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16306:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16296:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16296:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16289:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16289:50:10"
															},
															"nodeType": "YulIf",
															"src": "16286:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16265:5:10",
														"type": ""
													}
												],
												"src": "16231:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16409:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16463:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16472:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16475:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16465:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16465:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16465:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16432:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "16453:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "16446:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16446:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16439:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16439:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16429:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16429:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16422:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16422:40:10"
															},
															"nodeType": "YulIf",
															"src": "16419:60:10"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16398:5:10",
														"type": ""
													}
												],
												"src": "16367:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16534:73:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16585:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16594:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16597:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16587:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16587:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16587:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16557:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16568:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16575:6:10",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16564:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16564:18:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16554:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16554:29:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16547:37:10"
															},
															"nodeType": "YulIf",
															"src": "16544:57:10"
														}
													]
												},
												"name": "validator_revert_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16523:5:10",
														"type": ""
													}
												],
												"src": "16490:117:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ILotteryReferral_$2511(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint16_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$222t_uint16t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_uint16(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_2)\n        value4 := value_2\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint16t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_uint16(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$222_t_uint256_t_uint256_t_uint256_t_uint16_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint16_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffff))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_contract$_ILoteTreasury_$1092__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ILotteryReferral_$2511__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ILotteryToken_$2575__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0ecf01aeb804f0ae223eada9d16893a9009cdcbe208d348705dc613f9a9f5331__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"add: invalid deposit fee basis p\")\n        mstore(add(headStart, 96), \"oints\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_10056cb1bd3d8ee5530a7851844bdbf3666d1f6a5ce16135570259449183c8ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"setReferralCommissionRate: inval\")\n        mstore(add(headStart, 96), \"id referral commission rate basi\")\n        mstore(add(headStart, 128), \"s points\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_2135bd7a71e1ea126d853a1cc8c34707e4a82417f6097a0ca255ae1f628b3c99__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"setDevAddress: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2ccf24bd4623988e8895731fc5360356fd4ddc1cf9889b4a2ccd0c3b70522c65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"setDevAddress: ZERO\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3237ba8244ae492b3c06266a57c254aac412dbaf030a3c787404ac514698d9af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"No more staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3afb489d0fdedbdd1ea85eac9ddbe1364eb6d65afbae3ba5fa8e9d567276c114__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"setFeeAddress: ZERO\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3f178f6b435869b11e7807ebabe44aaf37869349d89b2de2d38d8ce2ca49db57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"add: invalid harvest interval\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9353dfb5d58f0da66015bbcadafa0686e2e7b7226db2e603088e70c7012680cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"set: invalid deposit fee basis p\")\n        mstore(add(headStart, 96), \"oints\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a334800cd19b18b6d938393d303a75ee080f825dc478f54dd3ef6d6a8de1a586__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"set: invalid harvest interval\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"withdraw: not good\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d4b2eb0827e71ee18958471ff450fe4680022dd427d5a87a7a424434363e4c1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"setFeeAddress: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function validator_revert_uint16(value)\n    {\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061021c5760003560e01c8063630b5ba11161012557806393f1a40b116100ad578063ba13a5721161007c578063ba13a57214610500578063d0d41fe114610513578063d30ef61b14610526578063de73149d1461053b578063f2fde38b1461054557600080fd5b806393f1a40b1461046757806399335c39146104c7578063a6530050146104da578063af018de8146104ed57600080fd5b80638aa28550116100f45780638aa285501461041f5780638da5cb5b146104275780638dbb1e3a146104385780638dbdbe6d1461044b5780638f97f54c1461045e57600080fd5b8063630b5ba1146103f35780636497aa90146103fb578063715018a6146104045780638705fcd41461040c57600080fd5b80633ad10ef6116101a857806348b22bfb1161017757806348b22bfb1461039557806348cd4cb1146103b157806351eb05a6146103ba5780635312ea8e146103cd57806355dbc826146103e057600080fd5b80633ad10ef6146103535780634127535814610366578063441a3e7014610379578063474fa6301461038c57600080fd5b80632143e545116101ef5780632143e545146102a4578063251b7e89146102b757806327ddb5a9146102e25780632e6c998d146102f45780632f1536b81461034057600080fd5b8063081e3eda146102215780630ba84cd2146102385780631526fe271461024d57806317caf6f11461029b575b600080fd5b6007545b6040519081526020015b60405180910390f35b61024b610246366004612189565b610558565b005b61026061025b366004612189565b6105d6565b604080516001600160a01b039097168752602087019590955293850192909252606084015261ffff16608083015260a082015260c00161022f565b61022560095481565b61024b6102b23660046122a5565b61062d565b600d546102ca906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b6102256a422ca8b0a00a425000000081565b6103306103023660046121bb565b60009182526008602090815260408084206001600160a01b0393909316845291905290206003015442101590565b604051901515815260200161022f565b61024b61034e3660046120f8565b6107fd565b6004546102ca906001600160a01b031681565b6005546102ca906001600160a01b031681565b61024b61038736600461224a565b610849565b610225600b5481565b61039e6103e881565b60405161ffff909116815260200161022f565b610225600a5481565b61024b6103c8366004612189565b61099b565b61024b6103db366004612189565b610c42565b61024b6103ee36600461214f565b610d14565b61024b610ded565b610225600c5481565b61024b610e18565b61024b61041a3660046120f8565b610e4e565b610225600181565b6000546001600160a01b03166102ca565b61022561044636600461224a565b610f16565b61024b61045936600461226c565b610f2e565b61022560065481565b6104a76104753660046121bb565b600860209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b60408051948552602085019390935291830152606082015260800161022f565b6102256104d53660046121bb565b611287565b6003546102ca906001600160a01b031681565b61024b6104fb3660046121eb565b61140e565b6002546102ca906001600160a01b031681565b61024b6105213660046120f8565b61167f565b600d5461039e90600160a01b900461ffff1681565b6102256212750081565b61024b6105533660046120f8565b611747565b6000546001600160a01b0316331461058b5760405162461bcd60e51b815260040161058290612325565b60405180910390fd5b610593610ded565b600654604080519182526020820183905233917feedc6338c9c1ad8f3cd6c90dd09dbe98dbd57e610d3e59a17996d07acb0d9511910160405180910390a2600655565b600781815481106105e657600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909261ffff9091169086565b6000546001600160a01b031633146106575760405162461bcd60e51b815260040161058290612325565b6127108361ffff1611156106bb5760405162461bcd60e51b815260206004820152602560248201527f7365743a20696e76616c6964206465706f7369742066656520626173697320706044820152646f696e747360d81b6064820152608401610582565b6212750082111561070e5760405162461bcd60e51b815260206004820152601d60248201527f7365743a20696e76616c6964206861727665737420696e74657276616c0000006044820152606401610582565b801561071c5761071c610ded565b61075f84610759600788815481106107365761073661245e565b9060005260206000209060060201600101546009546117e290919063ffffffff16565b906117ee565b60098190555083600786815481106107795761077961245e565b90600052602060002090600602016001018190555082600786815481106107a2576107a261245e565b906000526020600020906006020160040160006101000a81548161ffff021916908361ffff16021790555081600786815481106107e1576107e161245e565b9060005260206000209060060201600501819055505050505050565b6000546001600160a01b031633146108275760405162461bcd60e51b815260040161058290612325565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154141561086c5760405162461bcd60e51b81526004016105829061235a565b60026001819055506000600783815481106108895761088961245e565b6000918252602080832086845260088252604080852033865290925292208054600690920290920192508311156108f75760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b6044820152606401610582565b6109008461099b565b610909846117fa565b821561093357805461091b90846117e2565b81558154610933906001600160a01b03163385611999565b600382015481546109549164e8d4a510009161094e916119f0565b906119fc565b6001820155604051838152849033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a35050600180555050565b6a422ca8b0a00a4250000000600c5411156109ea5760405162461bcd60e51b815260206004820152600f60248201526e4e6f206d6f7265207374616b696e6760881b6044820152606401610582565b6000600782815481106109ff576109ff61245e565b9060005260206000209060060201905080600201544311610a1e575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906121a2565b9050801580610aaa57506001820154155b15610aba57504360029091015550565b6000610aca836002015443610f16565b90506000610af760095461094e8660010154610af1600654876119f090919063ffffffff16565b906119f0565b9050610b1a610b11610b0a83600a6119fc565b83906117ee565b600c54906117ee565b600c556003546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015610b6957600080fd5b505af1158015610b7d573d6000803e3d6000fd5b50506003546004546001600160a01b0391821693506340c10f19925016610ba584600a6119fc565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610beb57600080fd5b505af1158015610bff573d6000803e3d6000fd5b50505050610c2d610c228461094e64e8d4a51000856119f090919063ffffffff16565b6003860154906117ee565b60038501555050436002909201919091555050565b60026001541415610c655760405162461bcd60e51b81526004016105829061235a565b6002600181905550600060078281548110610c8257610c8261245e565b6000918252602080832085845260088252604080852033808752935284208054858255600182018690556002820186905560038201959095556006909302018054909450919291610ce0916001600160a01b03919091169083611999565b604051818152849033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059590602001610989565b6000546001600160a01b03163314610d3e5760405162461bcd60e51b815260040161058290612325565b6103e861ffff82161115610dcb5760405162461bcd60e51b815260206004820152604860248201527f736574526566657272616c436f6d6d697373696f6e526174653a20696e76616c60448201527f696420726566657272616c20636f6d6d697373696f6e207261746520626173696064820152677320706f696e747360c01b608482015260a401610582565b600d805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b60075460005b81811015610e1457610e048161099b565b610e0d8161242d565b9050610df3565b5050565b6000546001600160a01b03163314610e425760405162461bcd60e51b815260040161058290612325565b610e4c6000611a08565b565b6005546001600160a01b03163314610ea85760405162461bcd60e51b815260206004820152601860248201527f736574466565416464726573733a20464f5242494444454e00000000000000006044820152606401610582565b6001600160a01b038116610ef45760405162461bcd60e51b8152602060048201526013602482015272736574466565416464726573733a205a45524f60681b6044820152606401610582565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000610f276001610af184866117e2565b9392505050565b60026001541415610f515760405162461bcd60e51b81526004016105829061235a565b6002600181905550600060078481548110610f6e57610f6e61245e565b60009182526020808320878452600882526040808520338652909252922060069091029091019150610f9f8561099b565b600084118015610fb95750600d546001600160a01b031615155b8015610fcd57506001600160a01b03831615155b8015610fe257506001600160a01b0383163314155b1561104d57600d54604051630c7f7b6b60e01b81523360048201526001600160a01b03858116602483015290911690630c7f7b6b90604401600060405180830381600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050505b611056856117fa565b83156112255781546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156110ad57600080fd5b505af11580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190612132565b5060025482546001600160a01b03908116911614156111aa57600061119a61271061094e600260009054906101000a90046001600160a01b03166001600160a01b031663b65d08b06040518163ffffffff1660e01b815260040160206040518083038186803b15801561115757600080fd5b505afa15801561116b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118f919061216c565b889061ffff166119f0565b90506111a685826117e2565b9450505b600482015461ffff16156112165760048201546000906111d7906127109061094e90889061ffff166119f0565b60055484549192506111f6916001600160a01b03908116911683611999565b815461120e90829061120890886117ee565b906117e2565b825550611225565b805461122290856117ee565b81555b600382015481546112409164e8d4a510009161094e916119f0565b6001820155604051848152859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505060018055505050565b6000806007848154811061129d5761129d61245e565b600091825260208083208784526008825260408085206001600160a01b03898116875293528085206006949094029091016003810154815492516370a0823160e01b815230600482015291965093949291909116906370a082319060240160206040518083038186803b15801561131357600080fd5b505afa158015611327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134b91906121a2565b905083600201544311801561135f57508015155b156113bf576000611374856002015443610f16565b9050600061139b60095461094e8860010154610af1600654876119f090919063ffffffff16565b90506113ba6113b38461094e8464e8d4a510006119f0565b85906117ee565b935050505b60006113e9846001015461120864e8d4a5100061094e8789600001546119f090919063ffffffff16565b90506114028460020154826117ee90919063ffffffff16565b98975050505050505050565b6000546001600160a01b031633146114385760405162461bcd60e51b815260040161058290612325565b6127108361ffff16111561149c5760405162461bcd60e51b815260206004820152602560248201527f6164643a20696e76616c6964206465706f7369742066656520626173697320706044820152646f696e747360d81b6064820152608401610582565b621275008211156114ef5760405162461bcd60e51b815260206004820152601d60248201527f6164643a20696e76616c6964206861727665737420696e74657276616c0000006044820152606401610582565b80156114fd576114fd610ded565b6000600a54431161151057600a54611512565b435b60095490915061152290876117ee565b6009556040805160c0810182526001600160a01b0396871681526020810197885290810191825260006060820181815261ffff9687166080840190815260a0840196875260078054600181018255935292517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600690930292830180546001600160a01b031916919099161790975596517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68988015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a87015593517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b8601555091517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c8401805461ffff191691909216179055517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68d90910155565b6004546001600160a01b031633146116d95760405162461bcd60e51b815260206004820152601860248201527f736574446576416464726573733a20464f5242494444454e00000000000000006044820152606401610582565b6001600160a01b0381166117255760405162461bcd60e51b8152602060048201526013602482015272736574446576416464726573733a205a45524f60681b6044820152606401610582565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146117715760405162461bcd60e51b815260040161058290612325565b6001600160a01b0381166117d65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610582565b6117df81611a08565b50565b6000610f2782846123ea565b6000610f278284612391565b60006007828154811061180f5761180f61245e565b6000918252602080832085845260088252604080852033865290925292206003810154600690920290920192506118565760058201546118509042906117ee565b60038201555b6000611884826001015461120864e8d4a5100061094e876003015487600001546119f090919063ffffffff16565b600085815260086020908152604080832033845290915290206003015490915042106119305760008111806118bd575060008260020154115b1561192b5760006118db8360020154836117ee90919063ffffffff16565b90506118f68360020154600b546117e290919063ffffffff16565b600b556000600284015560058401546119109042906117ee565b600384015561191f3382611a58565b6119293382611b9e565b505b611993565b801561199357600282015461194590826117ee565b6002830155600b5461195790826117ee565b600b55604051818152849033907fee470483107f579a55c754fa00613c45a9a3b617a418b39cb0be97e5381ba7c1906020015b60405180910390a35b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526119eb908490611ea5565b505050565b6000610f2782846123cb565b6000610f2782846123a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015611a9c57600080fd5b505afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906121a2565b905080821115611b655760025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044015b602060405180830381600087803b158015611b2d57600080fd5b505af1158015611b41573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119939190612132565b60025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb90604401611b13565b600d546001600160a01b031615801590611bc45750600d54600160a01b900461ffff1615155b15610e1457600d54604051634a9fefc760e01b81526001600160a01b0384811660048301526000921690634a9fefc79060240160206040518083038186803b158015611c0f57600080fd5b505afa158015611c23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c479190612115565b600d54909150600090611c6e906127109061094e908690600160a01b900461ffff166119f0565b90506001600160a01b03821615801590611c885750600081115b15611993576002546040516370a0823160e01b815230600482015282916001600160a01b0316906370a082319060240160206040518083038186803b158015611cd057600080fd5b505afa158015611ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0891906121a2565b1015611d73576003546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015611d5a57600080fd5b505af1158015611d6e573d6000803e3d6000fd5b505050505b60025460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015611dc157600080fd5b505af1158015611dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df99190612132565b50600d54604051631b82d29760e31b81526001600160a01b038481166004830152602482018490529091169063dc1694b890604401600060405180830381600087803b158015611e4857600080fd5b505af1158015611e5c573d6000803e3d6000fd5b50505050816001600160a01b0316846001600160a01b03167f86ddab457291316e0f5496737e5ca67c4037234c32c3be04c48ae96186893a7b8360405161198a91815260200190565b6000611efa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f779092919063ffffffff16565b8051909150156119eb5780806020019051810190611f189190612132565b6119eb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610582565b6060611f868484600085611f8e565b949350505050565b606082471015611fef5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610582565b6001600160a01b0385163b6120465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610582565b600080866001600160a01b0316858760405161206291906122d6565b60006040518083038185875af1925050503d806000811461209f576040519150601f19603f3d011682016040523d82523d6000602084013e6120a4565b606091505b50915091506120b48282866120bf565b979650505050505050565b606083156120ce575081610f27565b8251156120de5782518084602001fd5b8160405162461bcd60e51b815260040161058291906122f2565b60006020828403121561210a57600080fd5b8135610f2781612474565b60006020828403121561212757600080fd5b8151610f2781612474565b60006020828403121561214457600080fd5b8151610f2781612489565b60006020828403121561216157600080fd5b8135610f2781612497565b60006020828403121561217e57600080fd5b8151610f2781612497565b60006020828403121561219b57600080fd5b5035919050565b6000602082840312156121b457600080fd5b5051919050565b600080604083850312156121ce57600080fd5b8235915060208301356121e081612474565b809150509250929050565b600080600080600060a0868803121561220357600080fd5b85359450602086013561221581612474565b9350604086013561222581612497565b925060608601359150608086013561223c81612489565b809150509295509295909350565b6000806040838503121561225d57600080fd5b50508035926020909101359150565b60008060006060848603121561228157600080fd5b8335925060208401359150604084013561229a81612474565b809150509250925092565b600080600080600060a086880312156122bd57600080fd5b8535945060208601359350604086013561222581612497565b600082516122e8818460208701612401565b9190910192915050565b6020815260008251806020840152612311816040850160208701612401565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156123a4576123a4612448565b500190565b6000826123c657634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156123e5576123e5612448565b500290565b6000828210156123fc576123fc612448565b500390565b60005b8381101561241c578181015183820152602001612404565b838111156119935750506000910152565b600060001982141561244157612441612448565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146117df57600080fd5b80151581146117df57600080fd5b61ffff811681146117df57600080fdfea26469706673582212202f995ca203c8d3204dbfc5f043af1255423830a84a94e3289a4574963bf11a6464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x93F1A40B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBA13A572 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBA13A572 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xD30EF61B EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xDE73149D EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x99335C39 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xA6530050 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xAF018DE8 EQ PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x8DBDBE6D EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x8F97F54C EQ PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x6497AA90 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x8705FCD4 EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AD10EF6 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x48B22BFB GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x48B22BFB EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x55DBC826 EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AD10EF6 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x41275358 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x474FA630 EQ PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2143E545 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2143E545 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x251B7E89 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x27DDB5A9 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x2E6C998D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x2F1536B8 EQ PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xBA84CD2 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH11 0x422CA8B0A00A4250000000 DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x24B PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x224A JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x225 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x39E PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x214F JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x24B PUSH2 0xDED JUMP JUMPDEST PUSH2 0x225 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x225 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CA JUMP JUMPDEST PUSH2 0x225 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x224A JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x226C JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x225 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH2 0x4D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BB JUMP JUMPDEST PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x21EB JUMP JUMPDEST PUSH2 0x140E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH3 0x127500 DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x593 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xEEDC6338C9C1AD8F3CD6C90DD09DBE98DBD57E610D3E59A17996D07ACB0D9511 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2710 DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365743A20696E76616C6964206465706F736974206665652062617369732070 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F696E7473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH3 0x127500 DUP3 GT ISZERO PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7365743A20696E76616C6964206861727665737420696E74657276616C000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71C JUMPI PUSH2 0x71C PUSH2 0xDED JUMP JUMPDEST PUSH2 0x75F DUP5 PUSH2 0x759 PUSH1 0x7 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x17E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x779 JUMPI PUSH2 0x779 PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7A2 JUMPI PUSH2 0x7A2 PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x7E1 JUMPI PUSH2 0x7E1 PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x889 JUMPI PUSH2 0x889 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x6 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH2 0x900 DUP5 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x909 DUP5 PUSH2 0x17FA JUMP JUMPDEST DUP3 ISZERO PUSH2 0x933 JUMPI DUP1 SLOAD PUSH2 0x91B SWAP1 DUP5 PUSH2 0x17E2 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH2 0x933 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP6 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x954 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x94E SWAP2 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH11 0x422CA8B0A00A4250000000 PUSH1 0xC SLOAD GT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F206D6F7265207374616B696E67 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0x245E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0xA1E JUMPI POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0xAAA JUMPI POP PUSH1 0x1 DUP3 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0xABA JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xF16 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAF7 PUSH1 0x9 SLOAD PUSH2 0x94E DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0xAF1 PUSH1 0x6 SLOAD DUP8 PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB1A PUSH2 0xB11 PUSH2 0xB0A DUP4 PUSH1 0xA PUSH2 0x19FC JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP PUSH4 0x40C10F19 SWAP3 POP AND PUSH2 0xBA5 DUP5 PUSH1 0xA PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC2D PUSH2 0xC22 DUP5 PUSH2 0x94E PUSH5 0xE8D4A51000 DUP6 PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP NUMBER PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x6 SWAP1 SWAP4 MUL ADD DUP1 SLOAD SWAP1 SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH2 0xCE0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP1 PUSH1 0x20 ADD PUSH2 0x989 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF DUP3 AND GT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574526566657272616C436F6D6D697373696F6E526174653A20696E76616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696420726566657272616C20636F6D6D697373696F6E20726174652062617369 PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x7320706F696E7473 PUSH1 0xC0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH2 0xFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE14 JUMPI PUSH2 0xE04 DUP2 PUSH2 0x99B JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP1 POP PUSH2 0xDF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0xE4C PUSH1 0x0 PUSH2 0x1A08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574466565416464726573733A20464F5242494444454E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x736574466565416464726573733A205A45524F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 PUSH1 0x1 PUSH2 0xAF1 DUP5 DUP7 PUSH2 0x17E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF6E JUMPI PUSH2 0xF6E PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xF9F DUP6 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0xFB9 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xFCD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xFE2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x104D JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xC7F7B6B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC7F7B6B SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1048 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x1056 DUP6 PUSH2 0x17FA JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1225 JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E5 SWAP2 SWAP1 PUSH2 0x2132 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x11AA JUMPI PUSH1 0x0 PUSH2 0x119A PUSH2 0x2710 PUSH2 0x94E PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB65D08B0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x216C JUMP JUMPDEST DUP9 SWAP1 PUSH2 0xFFFF AND PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x11A6 DUP6 DUP3 PUSH2 0x17E2 JUMP JUMPDEST SWAP5 POP POP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0x1216 JUMPI PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x11D7 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x94E SWAP1 DUP9 SWAP1 PUSH2 0xFFFF AND PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP5 SLOAD SWAP2 SWAP3 POP PUSH2 0x11F6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1999 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x120E SWAP1 DUP3 SWAP1 PUSH2 0x1208 SWAP1 DUP9 PUSH2 0x17EE JUMP JUMPDEST SWAP1 PUSH2 0x17E2 JUMP JUMPDEST DUP3 SSTORE POP PUSH2 0x1225 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1222 SWAP1 DUP6 PUSH2 0x17EE JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x1240 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x94E SWAP2 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP4 MSTORE DUP1 DUP6 KECCAK256 PUSH1 0x6 SWAP5 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD SWAP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP7 POP SWAP4 SWAP5 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1327 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x135F JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x13BF JUMPI PUSH1 0x0 PUSH2 0x1374 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xF16 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x139B PUSH1 0x9 SLOAD PUSH2 0x94E DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xAF1 PUSH1 0x6 SLOAD DUP8 PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13BA PUSH2 0x13B3 DUP5 PUSH2 0x94E DUP5 PUSH5 0xE8D4A51000 PUSH2 0x19F0 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x17EE JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1208 PUSH5 0xE8D4A51000 PUSH2 0x94E DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1402 DUP5 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x2710 DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20696E76616C6964206465706F736974206665652062617369732070 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F696E7473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH3 0x127500 DUP3 GT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164643A20696E76616C6964206861727665737420696E74657276616C000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14FD JUMPI PUSH2 0x14FD PUSH2 0xDED JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0x1510 JUMPI PUSH1 0xA SLOAD PUSH2 0x1512 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x1522 SWAP1 DUP8 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 DUP9 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0xFFFF SWAP7 DUP8 AND PUSH1 0x80 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP5 ADD SWAP7 DUP8 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP4 MSTORE SWAP3 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x6 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP10 AND OR SWAP1 SWAP8 SSTORE SWAP7 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 DUP9 ADD SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A DUP8 ADD SSTORE SWAP4 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68B DUP7 ADD SSTORE POP SWAP2 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68C DUP5 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68D SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736574446576416464726573733A20464F5242494444454E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x736574446576416464726573733A205A45524F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH2 0x17DF DUP2 PUSH2 0x1A08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP3 DUP5 PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP3 DUP5 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x180F JUMPI PUSH2 0x180F PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x6 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x1856 JUMPI PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x1850 SWAP1 TIMESTAMP SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x1884 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1208 PUSH5 0xE8D4A51000 PUSH2 0x94E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 POP TIMESTAMP LT PUSH2 0x1930 JUMPI PUSH1 0x0 DUP2 GT DUP1 PUSH2 0x18BD JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x2 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x192B JUMPI PUSH1 0x0 PUSH2 0x18DB DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x18F6 DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0xB SLOAD PUSH2 0x17E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x0 PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x1910 SWAP1 TIMESTAMP SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SSTORE PUSH2 0x191F CALLER DUP3 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1929 CALLER DUP3 PUSH2 0x1B9E JUMP JUMPDEST POP JUMPDEST PUSH2 0x1993 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1993 JUMPI PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x1945 SWAP1 DUP3 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0xB SLOAD PUSH2 0x1957 SWAP1 DUP3 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xEE470483107F579A55C754FA00613C45A9A3B617A418B39CB0BE97E5381BA7C1 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x19EB SWAP1 DUP5 SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP3 DUP5 PUSH2 0x23CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP3 DUP5 PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD4 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B65 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1993 SWAP2 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BC4 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE14 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A9FEFC7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x4A9FEFC7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C47 SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1C6E SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x94E SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C88 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1993 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D08 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST LT ISZERO PUSH2 0x1D73 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF9 SWAP2 SWAP1 PUSH2 0x2132 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1B82D297 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDC1694B8 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x86DDAB457291316E0F5496737E5CA67C4037234C32C3BE04C48AE96186893A7B DUP4 PUSH1 0x40 MLOAD PUSH2 0x198A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F77 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x19EB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F18 SWAP2 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0x19EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F86 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1F8E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1FEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2046 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x582 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2062 SWAP2 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x209F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20B4 DUP3 DUP3 DUP7 PUSH2 0x20BF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x20CE JUMPI POP DUP2 PUSH2 0xF27 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x20DE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x210A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF27 DUP2 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF27 DUP2 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF27 DUP2 PUSH2 0x2489 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF27 DUP2 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF27 DUP2 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x219B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x21E0 DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2215 DUP2 PUSH2 0x2474 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2225 DUP2 PUSH2 0x2497 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x223C DUP2 PUSH2 0x2489 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x225D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x229A DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2225 DUP2 PUSH2 0x2497 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x22E8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2401 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2311 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x23A4 JUMPI PUSH2 0x23A4 PUSH2 0x2448 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x23E5 JUMPI PUSH2 0x23E5 PUSH2 0x2448 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x23FC JUMPI PUSH2 0x23FC PUSH2 0x2448 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x241C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2404 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1993 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2441 JUMPI PUSH2 0x2441 PUSH2 0x2448 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SWAP10 0x5C LOG2 SUB 0xC8 0xD3 KECCAK256 0x4D 0xBF 0xC5 CREATE NUMBER 0xAF SLT SSTORE TIMESTAMP CODESIZE ADDRESS 0xA8 0x4A SWAP5 0xE3 0x28 SWAP11 GASLIMIT PUSH21 0x963BF11A6464736F6C634300080700330000000000 ",
							"sourceMap": "949:16672:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5060:95;5132:8;:15;5060:95;;;14221:25:10;;;14209:2;14194:18;5060:95:7;;;;;;;;15713:234;;;;;;:::i;:::-;;:::i;:::-;;3200:26;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6121:32:10;;;6103:51;;6185:2;6170:18;;6163:34;;;;6213:18;;;6206:34;;;;6271:2;6256:18;;6249:34;6332:6;6320:19;6314:3;6299:19;;6292:48;6141:3;6356:19;;6349:35;6090:3;6075:19;3200:26:7;5804:586:10;3441:34:7;;;;;;6479:796;;;;;;:::i;:::-;;:::i;3724:39::-;;;;;-1:-1:-1;;;;;3724:39:7;;;;;;-1:-1:-1;;;;;4600:32:10;;;4582:51;;4570:2;4555:18;3724:39:7;4436:203:10;3092:64:7;;3141:15;3092:64;;8696:230;;;;;;:::i;:::-;8793:4;8839:14;;;:8;:14;;;;;;;;-1:-1:-1;;;;;8839:21:7;;;;;;;;;;;8897;;;8878:15;:40;;;8696:230;;;;5777:14:10;;5770:22;5752:41;;5740:2;5725:18;8696:230:7;5612:187:10;16022:157:7;;;;;;:::i;:::-;;:::i;2714:25::-;;;;;-1:-1:-1;;;;;2714:25:7;;;2774;;;;;-1:-1:-1;;;;;2774:25:7;;;12031:614;;;;;;:::i;:::-;;:::i;3600:35::-;;;;;;3912:62;;3970:4;3912:62;;;;;14056:6:10;14044:19;;;14026:38;;14014:2;13999:18;3912:62:7;13882:188:10;3536:25:7;;;;;;9265:1116;;;;;;:::i;:::-;;:::i;12716:468::-;;;;;;:::i;:::-;;:::i;16240:366::-;;;;;;:::i;:::-;;:::i;9009:180::-;;;:::i;3644:28::-;;;;;;1668:101:0;;;:::i;15346:234:7:-;;;;;;:::i;:::-;;:::i;2937:44::-;;2980:1;2937:44;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;7351:175:7;;;;;;:::i;:::-;;:::i;10462:1509::-;;;;;;:::i;:::-;;:::i;2849:30::-;;;;;;3282:64;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14741:25:10;;;14797:2;14782:18;;14775:34;;;;14825:18;;;14818:34;14883:2;14868:18;;14861:34;14728:3;14713:19;3282:64:7;14510:391:10;7594:1034:7;;;;;;:::i;:::-;;:::i;2653:33::-;;;;;-1:-1:-1;;;;;2653:33:7;;;5324:1039;;;;;;:::i;:::-;;:::i;2618:28::-;;;;;-1:-1:-1;;;;;2618:28:7;;;15104:234;;;;;;:::i;:::-;;:::i;3820:42::-;;;;;-1:-1:-1;;;3820:42:7;;;;;;3027:58;;3078:7;3027:58;;1918:198:0;;;;;;:::i;:::-;;:::i;15713:234:7:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;15795:17:7::1;:15;:17::i;:::-;15860:15;::::0;15828:66:::1;::::0;;14431:25:10;;;14487:2;14472:18;;14465:34;;;15848:10:7::1;::::0;15828:66:::1;::::0;14404:18:10;15828:66:7::1;;;;;;;15905:15;:34:::0;15713:234::o;3200:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3200:26:7;;;;-1:-1:-1;3200:26:7;;;;;;;;;;:::o;6479:796::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6712:5:7::1;6695:13;:22;;;;6673:109;;;::::0;-1:-1:-1;;;6673:109:7;;11130:2:10;6673:109:7::1;::::0;::::1;11112:21:10::0;11169:2;11149:18;;;11142:30;11208:34;11188:18;;;11181:62;-1:-1:-1;;;11259:18:10;;;11252:35;11304:19;;6673:109:7::1;10928:401:10::0;6673:109:7::1;3078:7;6815:16;:44;;6793:123;;;::::0;-1:-1:-1;;;6793:123:7;;11897:2:10;6793:123:7::1;::::0;::::1;11879:21:10::0;11936:2;11916:18;;;11909:30;11975:31;11955:18;;;11948:59;12024:18;;6793:123:7::1;11695:353:10::0;6793:123:7::1;6931:11;6927:61;;;6959:17;:15;:17::i;:::-;7016:87;7081:11;7016:46;7036:8;7045:4;7036:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;7016:15;;:19;;:46;;;;:::i;:::-;:50:::0;::::1;:87::i;:::-;6998:15;:105;;;;7142:11;7114:8;7123:4;7114:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;:39;;;;7194:13;7164:8;7173:4;7164:14;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:43;;;;;;;;;;;;;;;;;;7251:16;7218:8;7227:4;7218:14;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;:49;;;;6479:796:::0;;;;;:::o;16022:157::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;16137:15:7::1;:34:::0;;-1:-1:-1;;;;;;16137:34:7::1;-1:-1:-1::0;;;;;16137:34:7;;;::::1;::::0;;;::::1;::::0;;16022:157::o;12031:614::-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;;12111:21:7::1;12135:8;12144:4;12135:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;12184;;;:8:::1;:14:::0;;;;;;12199:10:::1;12184:26:::0;;;;;;;12229:11;;12135:14:::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;12229:22:7;-1:-1:-1;12229:22:7::1;12221:53;;;::::0;-1:-1:-1;;;12221:53:7;;12613:2:10;12221:53:7::1;::::0;::::1;12595:21:10::0;12652:2;12632:18;;;12625:30;-1:-1:-1;;;12671:18:10;;;12664:48;12729:18;;12221:53:7::1;12411:342:10::0;12221:53:7::1;12285:16;12296:4;12285:10;:16::i;:::-;12312:32;12339:4;12312:26;:32::i;:::-;12359:11:::0;;12355:152:::1;;12401:11:::0;;:24:::1;::::0;12417:7;12401:15:::1;:24::i;:::-;12387:38:::0;;12440:12;;:55:::1;::::0;-1:-1:-1;;;;;12440:12:7::1;12474:10;12487:7:::0;12440:25:::1;:55::i;:::-;12551:24;::::0;::::1;::::0;12535:11;;:51:::1;::::0;12581:4:::1;::::0;12535:41:::1;::::0;:15:::1;:41::i;:::-;:45:::0;::::1;:51::i;:::-;12517:15;::::0;::::1;:69:::0;12602:35:::1;::::0;14221:25:10;;;12623:4:7;;12611:10:::1;::::0;12602:35:::1;::::0;14209:2:10;14194:18;12602:35:7::1;;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;12031:614:7:o;9265:1116::-;3141:15;9325:13;;:39;;9317:67;;;;-1:-1:-1;;;9317:67:7;;9673:2:10;9317:67:7;;;9655:21:10;9712:2;9692:18;;;9685:30;-1:-1:-1;;;9731:18:10;;;9724:45;9786:18;;9317:67:7;9471:339:10;9317:67:7;9395:21;9419:8;9428:4;9419:14;;;;;;;;:::i;:::-;;;;;;;;;;;9395:38;;9464:4;:20;;;9448:12;:36;9444:75;;9501:7;9265:1116;:::o;9444:75::-;9548:12;;:37;;-1:-1:-1;;;9548:37:7;;9579:4;9548:37;;;4582:51:10;9529:16:7;;-1:-1:-1;;;;;9548:12:7;;:22;;4555:18:10;;9548:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9529:56;-1:-1:-1;9600:13:7;;;:37;;-1:-1:-1;9617:15:7;;;;:20;9600:37;9596:126;;;-1:-1:-1;9677:12:7;9654:20;;;;:35;-1:-1:-1;9265:1116:7:o;9596:126::-;9732:18;9753:49;9767:4;:20;;;9789:12;9753:13;:49::i;:::-;9732:70;;9813:22;9838:103;9925:15;;9838:72;9894:4;:15;;;9838:41;9863:15;;9838:10;:24;;:41;;;;:::i;:::-;:55;;:72::i;:103::-;9813:128;-1:-1:-1;9970:61:7;9988:42;10007:22;9813:128;10026:2;10007:18;:22::i;:::-;9988:14;;:18;:42::i;:::-;9970:13;;;:17;:61::i;:::-;9954:13;:77;10042:12;;:48;;-1:-1:-1;;;10042:48:7;;10068:4;10042:48;;;5507:51:10;5574:18;;;5567:34;;;-1:-1:-1;;;;;10042:12:7;;;;:17;;5480:18:10;;10042:48:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10144:12:7;;10162:10;;-1:-1:-1;;;;;10144:12:7;;;;-1:-1:-1;10144:17:7;;-1:-1:-1;10162:10:7;10174:22;:14;10193:2;10174:18;:22::i;:::-;10144:53;;-1:-1:-1;;;;;;10144:53:7;;;;;;;-1:-1:-1;;;;;5525:32:10;;;10144:53:7;;;5507:51:10;5574:18;;;5567:34;5480:18;;10144:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10235:92;10278:38;10307:8;10278:24;10297:4;10278:14;:18;;:24;;;;:::i;:38::-;10235:24;;;;;:28;:92::i;:::-;10208:24;;;:119;-1:-1:-1;;10361:12:7;10338:20;;;;:35;;;;-1:-1:-1;;9265:1116:7:o;12716:468::-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;;12788:21:7::1;12812:8;12821:4;12812:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;12861;;;:8:::1;:14:::0;;;;;;12876:10:::1;12861:26:::0;;;;;;;12915:11;;12937:15;;;-1:-1:-1;12963:15:7;::::1;:19:::0;;;12993::::1;::::0;::::1;:23:::0;;;13027:21:::1;::::0;::::1;:25:::0;;;;12812:14:::1;::::0;;::::1;;13063:12:::0;;12812:14;;-1:-1:-1;12861:26:7;;12915:11;13063:54:::1;::::0;-1:-1:-1;;;;;13063:12:7;;;::::1;::::0;12915:11;13063:25:::1;:54::i;:::-;13133:43;::::0;14221:25:10;;;13163:4:7;;13151:10:::1;::::0;13133:43:::1;::::0;14209:2:10;14194:18;13133:43:7::1;14075:177:10::0;16240:366:7;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3970:4:7::1;16380:59;::::0;::::1;;;16358:181;;;::::0;-1:-1:-1;;;16358:181:7;;8084:2:10;16358:181:7::1;::::0;::::1;8066:21:10::0;8123:2;8103:18;;;8096:30;8162:34;8142:18;;;8135:62;8233:34;8213:18;;;8206:62;-1:-1:-1;;;8284:19:10;;;8277:39;8333:19;;16358:181:7::1;7882:476:10::0;16358:181:7::1;16550:22;:48:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;16550:48:7::1;-1:-1:-1::0;;;;16550:48:7;;::::1;::::0;;;::::1;::::0;;16240:366::o;9009:180::-;9071:8;:15;9054:14;9097:85;9125:6;9119:3;:12;9097:85;;;9155:15;9166:3;9155:10;:15::i;:::-;9133:5;;;:::i;:::-;;;9097:85;;;;9043:146;9009:180::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;15346:234:7:-;15430:10;;-1:-1:-1;;;;;15430:10:7;15416;:24;15408:61;;;;-1:-1:-1;;;15408:61:7;;12960:2:10;15408:61:7;;;12942:21:10;12999:2;12979:18;;;12972:30;13038:26;13018:18;;;13011:54;13082:18;;15408:61:7;12758:348:10;15408:61:7;-1:-1:-1;;;;;15488:25:7;;15480:57;;;;-1:-1:-1;;;15480:57:7;;10017:2:10;15480:57:7;;;9999:21:10;10056:2;10036:18;;;10029:30;-1:-1:-1;;;10075:18:10;;;10068:49;10134:18;;15480:57:7;9815:343:10;15480:57:7;15548:10;:24;;-1:-1:-1;;;;;;15548:24:7;-1:-1:-1;;;;;15548:24:7;;;;;;;;;;15346:234::o;7351:175::-;7450:7;7482:36;2980:1;7482:14;:3;7490:5;7482:7;:14::i;:36::-;7475:43;7351:175;-1:-1:-1;;;7351:175:7:o;10462:1509::-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;;10594:21:7::1;10618:8;10627:4;10618:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;10667;;;:8:::1;:14:::0;;;;;;10682:10:::1;10667:26:::0;;;;;;;10618:14:::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;10704:16:7::1;10676:4:::0;10704:10:::1;:16::i;:::-;10759:1;10749:7;:11;:66;;;;-1:-1:-1::0;10785:15:7::1;::::0;-1:-1:-1;;;;;10785:15:7::1;10777:38:::0;::::1;10749:66;:106;;;;-1:-1:-1::0;;;;;;10832:23:7;::::1;::::0;::::1;10749:106;:146;;;;-1:-1:-1::0;;;;;;10872:23:7;::::1;10885:10;10872:23;;10749:146;10731:256;;;10922:15;::::0;:53:::1;::::0;-1:-1:-1;;;10922:53:7;;10953:10:::1;10922:53;::::0;::::1;4856:34:10::0;-1:-1:-1;;;;;4926:15:10;;;4906:18;;;4899:43;10922:15:7;;::::1;::::0;:30:::1;::::0;4791:18:10;;10922:53:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10731:256;10997:32;11024:4;10997:26;:32::i;:::-;11044:11:::0;;11040:794:::1;;11072:12:::0;;:136:::1;::::0;-1:-1:-1;;;11072:136:7;;11124:10:::1;11072:136;::::0;::::1;5193:34:10::0;11162:4:7::1;5243:18:10::0;;;5236:43;5295:18;;;5288:34;;;-1:-1:-1;;;;;11072:12:7;;::::1;::::0;:25:::1;::::0;5128:18:10;;11072:136:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11260:7:7::1;::::0;11235:12;;-1:-1:-1;;;;;11235:12:7;;::::1;11260:7:::0;::::1;11227:41;11223:242;;;11289:19;11311:85;11390:5;11311:56;11341:7;;;;;;;;;-1:-1:-1::0;;;;;11341:7:7::1;-1:-1:-1::0;;;;;11341:23:7::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11311:7:::0;;:56:::1;;:29;:56::i;:85::-;11289:107:::0;-1:-1:-1;11425:24:7::1;:7:::0;11289:107;11425:11:::1;:24::i;:::-;11415:34;;11270:195;11223:242;11483:17;::::0;::::1;::::0;::::1;;:21:::0;11479:344:::1;;11558:17;::::0;::::1;::::0;11525:18:::1;::::0;11546:41:::1;::::0;11581:5:::1;::::0;11546:30:::1;::::0;:7;;11558:17:::1;;11546:11;:30::i;:41::-;11632:10;::::0;11606:12;;11525:62;;-1:-1:-1;11606:49:7::1;::::0;-1:-1:-1;;;;;11606:12:7;;::::1;::::0;11632:10:::1;11525:62:::0;11606:25:::1;:49::i;:::-;11688:11:::0;;:40:::1;::::0;11717:10;;11688:24:::1;::::0;11704:7;11688:15:::1;:24::i;:::-;:28:::0;::::1;:40::i;:::-;11674:54:::0;;-1:-1:-1;11479:344:7::1;;;11783:11:::0;;:24:::1;::::0;11799:7;11783:15:::1;:24::i;:::-;11769:38:::0;;11479:344:::1;11878:24;::::0;::::1;::::0;11862:11;;:51:::1;::::0;11908:4:::1;::::0;11862:41:::1;::::0;:15:::1;:41::i;:51::-;11844:15;::::0;::::1;:69:::0;11929:34:::1;::::0;14221:25:10;;;11949:4:7;;11937:10:::1;::::0;11929:34:::1;::::0;14209:2:10;14194:18;11929:34:7::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;;10462:1509:7:o;7594:1034::-;7698:7;7723:21;7747:8;7756:4;7747:14;;;;;;;;:::i;:::-;;;;;;;;;7796;;;:8;:14;;;;;;-1:-1:-1;;;;;7796:21:7;;;;;;;;;;7747:14;;;;;;;;7858:24;;;;7912:12;;:37;;-1:-1:-1;;;7912:37:7;;7943:4;7912:37;;;4582:51:10;7747:14:7;;-1:-1:-1;7796:21:7;;7747:14;7912:12;;;;;:22;;4555:18:10;;7912:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7893:56;;7979:4;:20;;;7964:12;:35;:52;;;;-1:-1:-1;8003:13:7;;;7964:52;7960:491;;;8033:18;8054:98;8086:4;:20;;;8125:12;8054:13;:98::i;:::-;8033:119;;8167:22;8192:115;8291:15;;8192:80;8256:4;:15;;;8192:45;8221:15;;8192:10;:28;;:45;;;;:::i;:115::-;8167:140;-1:-1:-1;8344:95:7;8386:38;8415:8;8386:24;8167:140;8405:4;8386:18;:24::i;:38::-;8344:19;;:23;:95::i;:::-;8322:117;;8018:433;;7960:491;8461:15;8479:91;8544:4;:15;;;8479:46;8520:4;8479:36;8495:19;8479:4;:11;;;:15;;:36;;;;:::i;:91::-;8461:109;;8588:32;8600:4;:19;;;8588:7;:11;;:32;;;;:::i;:::-;8581:39;7594:1034;-1:-1:-1;;;;;;;;7594:1034:7:o;5324:1039::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5560:5:7::1;5543:13;:22;;;;5521:109;;;::::0;-1:-1:-1;;;5521:109:7;;7678:2:10;5521:109:7::1;::::0;::::1;7660:21:10::0;7717:2;7697:18;;;7690:30;7756:34;7736:18;;;7729:62;-1:-1:-1;;;7807:18:10;;;7800:35;7852:19;;5521:109:7::1;7476:401:10::0;5521:109:7::1;3078:7;5663:16;:44;;5641:123;;;::::0;-1:-1:-1;;;5641:123:7;;10365:2:10;5641:123:7::1;::::0;::::1;10347:21:10::0;10404:2;10384:18;;;10377:30;10443:31;10423:18;;;10416:59;10492:18;;5641:123:7::1;10163:353:10::0;5641:123:7::1;5779:11;5775:61;;;5807:17;:15;:17::i;:::-;5846:23;5887:10;;5872:12;:25;:79;;5941:10;;5872:79;;;5913:12;5872:79;5980:15;::::0;5846:105;;-1:-1:-1;5980:32:7::1;::::0;6000:11;5980:19:::1;:32::i;:::-;5962:15;:50:::0;6051:293:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;6051:293:7;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;6051:293:7;;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;6023:8:::1;:332:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;6023:332:7::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6023:332:7;;;;;;;-1:-1:-1;;6023:332:7::1;::::0;;;::::1;;::::0;;;;;;;;5324:1039::o;15104:234::-;15188:10;;-1:-1:-1;;;;;15188:10:7;15174;:24;15166:61;;;;-1:-1:-1;;;15166:61:7;;8565:2:10;15166:61:7;;;8547:21:10;8604:2;8584:18;;;8577:30;8643:26;8623:18;;;8616:54;8687:18;;15166:61:7;8363:348:10;15166:61:7;-1:-1:-1;;;;;15246:25:7;;15238:57;;;;-1:-1:-1;;;15238:57:7;;9325:2:10;15238:57:7;;;9307:21:10;9364:2;9344:18;;;9337:30;-1:-1:-1;;;9383:18:10;;;9376:49;9442:18;;15238:57:7;9123:343:10;15238:57:7;15306:10;:24;;-1:-1:-1;;;;;;15306:24:7;-1:-1:-1;;;;;15306:24:7;;;;;;;;;;15104:234::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;8918:2:10;1998:73:0::1;::::0;::::1;8900:21:10::0;8957:2;8937:18;;;8930:30;8996:34;8976:18;;;8969:62;-1:-1:-1;;;9047:18:10;;;9040:36;9093:19;;1998:73:0::1;8716:402:10::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;3122:96:6:-;3180:7;3206:5;3210:1;3206;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;13233:1390:7:-;13303:21;13327:8;13336:4;13327:14;;;;;;;;:::i;:::-;;;;;;;;;13376;;;:8;:14;;;;;;13391:10;13376:26;;;;;;;13419:21;;;;13327:14;;;;;;;;-1:-1:-1;13415:124:7;;13506:20;;;;13486:41;;:15;;:19;:41::i;:::-;13462:21;;;:65;13415:124;13551:15;13569:112;13665:4;:15;;;13569:81;13645:4;13569:61;13605:4;:24;;;13569:4;:21;;;:35;;:61;;;;:::i;:112::-;8793:4;8839:14;;;:8;:14;;;;;;;;13713:10;8839:21;;;;;;;8897;;;13551:130;;-1:-1:-1;8878:15:7;:40;13692:924;;13755:1;13745:7;:11;:38;;;;13782:1;13760:4;:19;;;:23;13745:38;13741:628;;;13804:20;13827:32;13839:4;:19;;;13827:7;:11;;:32;;;;:::i;:::-;13804:55;;13936:85;13983:4;:19;;;13936:20;;:24;;:85;;;;:::i;:::-;13913:20;:108;14062:1;14040:19;;;:23;14148:20;;;;14106:81;;:15;;:19;:81::i;:::-;14082:21;;;:105;14241:46;14262:10;14274:12;14241:20;:46::i;:::-;14306:47;14328:10;14340:12;14306:21;:47::i;:::-;13785:584;13741:628;13692:924;;;14390:11;;14386:230;;14440:19;;;;:32;;14464:7;14440:23;:32::i;:::-;14418:19;;;:54;14510:20;;:33;;14535:7;14510:24;:33::i;:::-;14487:20;:56;14563:41;;14221:25:10;;;14590:4:7;;14578:10;;14563:41;;14209:2:10;14194:18;14563:41:7;;;;;;;;14386:230;13292:1331;;;13233:1390;:::o;701:205:3:-;840:58;;;-1:-1:-1;;;;;5525:32:10;;840:58:3;;;5507:51:10;5574:18;;;;5567:34;;;840:58:3;;;;;;;;;;5480:18:10;;;;840:58:3;;;;;;;;-1:-1:-1;;;;;840:58:3;-1:-1:-1;;;840:58:3;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3465:96:6:-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14745:303:7:-;14847:7;;:32;;-1:-1:-1;;;14847:32:7;;14873:4;14847:32;;;4582:51:10;14825:19:7;;-1:-1:-1;;;;;14847:7:7;;:17;;4555:18:10;;14847:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14825:54;;14904:11;14894:7;:21;14890:151;;;14932:7;;:34;;-1:-1:-1;;;14932:34:7;;-1:-1:-1;;;;;5525:32:10;;;14932:34:7;;;5507:51:10;5574:18;;;5567:34;;;14932:7:7;;;;:16;;5480:18:10;;14932:34:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14890:151::-;14999:7;;:30;;-1:-1:-1;;;14999:30:7;;-1:-1:-1;;;;;5525:32:10;;;14999:30:7;;;5507:51:10;5574:18;;;5567:34;;;14999:7:7;;;;:16;;5480:18:10;;14999:30:7;5333:274:10;16686:932:7;16796:15;;-1:-1:-1;;;;;16796:15:7;16788:38;;;;:68;;-1:-1:-1;16830:22:7;;-1:-1:-1;;;16830:22:7;;;;:26;;16788:68;16770:841;;;16902:15;;:34;;-1:-1:-1;;;16902:34:7;;-1:-1:-1;;;;;4600:32:10;;;16902:34:7;;;4582:51:10;16883:16:7;;16902:15;;:27;;4555:18:10;;16902:34:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16991:22;;16883:53;;-1:-1:-1;16951:24:7;;16978:79;;17037:5;;16978:36;;:8;;-1:-1:-1;;;16991:22:7;;;;16978:12;:36::i;:79::-;16951:106;-1:-1:-1;;;;;;17078:22:7;;;;;;:46;;;17123:1;17104:16;:20;17078:46;17074:526;;;17148:7;;:32;;-1:-1:-1;;;17148:32:7;;17174:4;17148:32;;;4582:51:10;17183:16:7;;-1:-1:-1;;;;;17148:7:7;;:17;;4555:18:10;;17148:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;17145:148;;;17223:12;;:50;;-1:-1:-1;;;17223:50:7;;17249:4;17223:50;;;5507:51:10;5574:18;;;5567:34;;;-1:-1:-1;;;;;17223:12:7;;;;:17;;5480:18:10;;17223:50:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17145:148;17311:7;;:44;;-1:-1:-1;;;17311:44:7;;-1:-1:-1;;;;;5525:32:10;;;17311:44:7;;;5507:51:10;5574:18;;;5567:34;;;17311:7:7;;;;:16;;5480:18:10;;17311:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17374:15:7;;:129;;-1:-1:-1;;;17374:129:7;;-1:-1:-1;;;;;5525:32:10;;;17374:129:7;;;5507:51:10;5574:18;;;5567:34;;;17374:15:7;;;;:40;;5480:18:10;;17374:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17557:8;-1:-1:-1;;;;;17527:57:7;17550:5;-1:-1:-1;;;;;17527:57:7;;17567:16;17527:57;;;;14221:25:10;;14209:2;14194:18;;14075:177;3207:706:3;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:3;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:3;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:3;;13313:2:10;3811:85:3;;;13295:21:10;13352:2;13332:18;;;13325:30;13391:34;13371:18;;;13364:62;-1:-1:-1;;;13442:18:10;;;13435:40;13492:19;;3811:85:3;13111:406:10;3861:223:4;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:4:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:4;;10723:2:10;5137:81:4;;;10705:21:10;10762:2;10742:18;;;10735:30;10801:34;10781:18;;;10774:62;-1:-1:-1;;;10852:18:10;;;10845:36;10898:19;;5137:81:4;10521:402:10;5137:81:4;-1:-1:-1;;;;;1465:19:4;;;5228:60;;;;-1:-1:-1;;;5228:60:4;;12255:2:10;5228:60:4;;;12237:21:10;12294:2;12274:18;;;12267:30;12333:31;12313:18;;;12306:59;12382:18;;5228:60:4;12053:353:10;5228:60:4;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:4;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:4:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:4;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:4;;;;;;;;:::i;14:247:10:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:52;;;405:1;402;395:12;357:52;437:9;431:16;456:31;481:5;456:31;:::i;522:245::-;589:6;642:2;630:9;621:7;617:23;613:32;610:52;;;658:1;655;648:12;610:52;690:9;684:16;709:28;731:5;709:28;:::i;1049:245::-;1107:6;1160:2;1148:9;1139:7;1135:23;1131:32;1128:52;;;1176:1;1173;1166:12;1128:52;1215:9;1202:23;1234:30;1258:5;1234:30;:::i;1299:249::-;1368:6;1421:2;1409:9;1400:7;1396:23;1392:32;1389:52;;;1437:1;1434;1427:12;1389:52;1469:9;1463:16;1488:30;1512:5;1488:30;:::i;1553:180::-;1612:6;1665:2;1653:9;1644:7;1640:23;1636:32;1633:52;;;1681:1;1678;1671:12;1633:52;-1:-1:-1;1704:23:10;;1553:180;-1:-1:-1;1553:180:10:o;1738:184::-;1808:6;1861:2;1849:9;1840:7;1836:23;1832:32;1829:52;;;1877:1;1874;1867:12;1829:52;-1:-1:-1;1900:16:10;;1738:184;-1:-1:-1;1738:184:10:o;1927:315::-;1995:6;2003;2056:2;2044:9;2035:7;2031:23;2027:32;2024:52;;;2072:1;2069;2062:12;2024:52;2108:9;2095:23;2085:33;;2168:2;2157:9;2153:18;2140:32;2181:31;2206:5;2181:31;:::i;:::-;2231:5;2221:15;;;1927:315;;;;;:::o;2247:673::-;2352:6;2360;2368;2376;2384;2437:3;2425:9;2416:7;2412:23;2408:33;2405:53;;;2454:1;2451;2444:12;2405:53;2490:9;2477:23;2467:33;;2550:2;2539:9;2535:18;2522:32;2563:31;2588:5;2563:31;:::i;:::-;2613:5;-1:-1:-1;2670:2:10;2655:18;;2642:32;2683;2642;2683;:::i;:::-;2734:7;-1:-1:-1;2788:2:10;2773:18;;2760:32;;-1:-1:-1;2844:3:10;2829:19;;2816:33;2858:30;2816:33;2858:30;:::i;:::-;2907:7;2897:17;;;2247:673;;;;;;;;:::o;2925:248::-;2993:6;3001;3054:2;3042:9;3033:7;3029:23;3025:32;3022:52;;;3070:1;3067;3060:12;3022:52;-1:-1:-1;;3093:23:10;;;3163:2;3148:18;;;3135:32;;-1:-1:-1;2925:248:10:o;3178:383::-;3255:6;3263;3271;3324:2;3312:9;3303:7;3299:23;3295:32;3292:52;;;3340:1;3337;3330:12;3292:52;3376:9;3363:23;3353:33;;3433:2;3422:9;3418:18;3405:32;3395:42;;3487:2;3476:9;3472:18;3459:32;3500:31;3525:5;3500:31;:::i;:::-;3550:5;3540:15;;;3178:383;;;;;:::o;3566:586::-;3657:6;3665;3673;3681;3689;3742:3;3730:9;3721:7;3717:23;3713:33;3710:53;;;3759:1;3756;3749:12;3710:53;3795:9;3782:23;3772:33;;3852:2;3841:9;3837:18;3824:32;3814:42;;3906:2;3895:9;3891:18;3878:32;3919:30;3943:5;3919:30;:::i;4157:274::-;4286:3;4324:6;4318:13;4340:53;4386:6;4381:3;4374:4;4366:6;4362:17;4340:53;:::i;:::-;4409:16;;;;;4157:274;-1:-1:-1;;4157:274:10:o;7088:383::-;7237:2;7226:9;7219:21;7200:4;7269:6;7263:13;7312:6;7307:2;7296:9;7292:18;7285:34;7328:66;7387:6;7382:2;7371:9;7367:18;7362:2;7354:6;7350:15;7328:66;:::i;:::-;7455:2;7434:15;-1:-1:-1;;7430:29:10;7415:45;;;;7462:2;7411:54;;7088:383;-1:-1:-1;;7088:383:10:o;11334:356::-;11536:2;11518:21;;;11555:18;;;11548:30;11614:34;11609:2;11594:18;;11587:62;11681:2;11666:18;;11334:356::o;13522:355::-;13724:2;13706:21;;;13763:2;13743:18;;;13736:30;13802:33;13797:2;13782:18;;13775:61;13868:2;13853:18;;13522:355::o;14906:128::-;14946:3;14977:1;14973:6;14970:1;14967:13;14964:39;;;14983:18;;:::i;:::-;-1:-1:-1;15019:9:10;;14906:128::o;15039:217::-;15079:1;15105;15095:132;;15149:10;15144:3;15140:20;15137:1;15130:31;15184:4;15181:1;15174:15;15212:4;15209:1;15202:15;15095:132;-1:-1:-1;15241:9:10;;15039:217::o;15261:168::-;15301:7;15367:1;15363;15359:6;15355:14;15352:1;15349:21;15344:1;15337:9;15330:17;15326:45;15323:71;;;15374:18;;:::i;:::-;-1:-1:-1;15414:9:10;;15261:168::o;15434:125::-;15474:4;15502:1;15499;15496:8;15493:34;;;15507:18;;:::i;:::-;-1:-1:-1;15544:9:10;;15434:125::o;15564:258::-;15636:1;15646:113;15660:6;15657:1;15654:13;15646:113;;;15736:11;;;15730:18;15717:11;;;15710:39;15682:2;15675:10;15646:113;;;15777:6;15774:1;15771:13;15768:48;;;-1:-1:-1;;15812:1:10;15794:16;;15787:27;15564:258::o;15827:135::-;15866:3;-1:-1:-1;;15887:17:10;;15884:43;;;15907:18;;:::i;:::-;-1:-1:-1;15954:1:10;15943:13;;15827:135::o;15967:127::-;16028:10;16023:3;16019:20;16016:1;16009:31;16059:4;16056:1;16049:15;16083:4;16080:1;16073:15;16099:127;16160:10;16155:3;16151:20;16148:1;16141:31;16191:4;16188:1;16181:15;16215:4;16212:1;16205:15;16231:131;-1:-1:-1;;;;;16306:31:10;;16296:42;;16286:70;;16352:1;16349;16342:12;16367:118;16453:5;16446:13;16439:21;16432:5;16429:32;16419:60;;16475:1;16472;16465:12;16490:117;16575:6;16568:5;16564:18;16557:5;16554:29;16544:57;;16597:1;16594;16587:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1887400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "229",
								"MAXIMUM_HARVEST_INTERVAL()": "294",
								"MAXIMUM_REFERRAL_COMMISSION_RATE()": "249",
								"MAX_STAKING_ALLOCATION()": "274",
								"add(uint256,address,uint16,uint256,bool)": "infinite",
								"canHarvest(uint256,address)": "2772",
								"deposit(uint256,uint256,address)": "infinite",
								"devAddress()": "2383",
								"emergencyWithdraw(uint256)": "infinite",
								"feeAddress()": "2405",
								"getMultiplier(uint256,uint256)": "infinite",
								"loteTreasury()": "2426",
								"lottery()": "2381",
								"lotteryPerBlock()": "2417",
								"lotteryReferral()": "2405",
								"massUpdatePools()": "infinite",
								"owner()": "2398",
								"pendingPosition(uint256,address)": "infinite",
								"poolInfo(uint256)": "15405",
								"poolLength()": "2317",
								"referralCommissionRate()": "2418",
								"renounceOwnership()": "28204",
								"set(uint256,uint256,uint16,uint256,bool)": "infinite",
								"setDevAddress(address)": "26806",
								"setFeeAddress(address)": "26852",
								"setPositionReferral(address)": "26839",
								"setReferralCommissionRate(uint16)": "26857",
								"stakingMinted()": "2352",
								"startBlock()": "2351",
								"totalAllocPoint()": "2397",
								"totalLockedUpRewards()": "2396",
								"transferOwnership(address)": "infinite",
								"updateEmissionRate(uint256)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "9063",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"payOrLockupPendingPosition(uint256)": "infinite",
								"payReferralCommission(address,uint256)": "infinite",
								"safePositionTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 949,
									"end": 17621,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3474,
									"end": 3475,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3441,
									"end": 3475,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 3441,
									"end": 3475,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3820,
									"end": 3862,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 3820,
									"end": 3862,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3820,
									"end": 3862,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3820,
									"end": 3862,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3820,
									"end": 3862,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3820,
									"end": 3862,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3820,
									"end": 3862,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4671,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4837,
									"end": 4844,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4878,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4894,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4905,
									"end": 4915,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 4905,
									"end": 4929,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 4955,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 4940,
									"end": 4974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 4974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 4974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 4974,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5010,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5031,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 5021,
									"end": 5044,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5044,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5044,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5044,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5044,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5021,
									"end": 5044,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 596,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 596,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 155,
									"end": 161,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 169,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 171,
									"end": 177,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 232,
									"end": 235,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 220,
									"end": 229,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 211,
									"end": 218,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 207,
									"end": 230,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 203,
									"end": 236,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 200,
									"end": 253,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 200,
									"end": 253,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 200,
									"end": 253,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 249,
									"end": 250,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 239,
									"end": 251,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 200,
									"end": 253,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 200,
									"end": 253,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 281,
									"end": 290,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 275,
									"end": 291,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 300,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 340,
									"end": 345,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 300,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 300,
									"end": 346,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 300,
									"end": 346,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 346,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 415,
									"end": 417,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 400,
									"end": 418,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 400,
									"end": 418,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 394,
									"end": 419,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 365,
									"end": 370,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 365,
									"end": 370,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 428,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 394,
									"end": 419,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 428,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 428,
									"end": 476,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 428,
									"end": 476,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 428,
									"end": 476,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 542,
									"end": 544,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 527,
									"end": 545,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 527,
									"end": 545,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 521,
									"end": 546,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 586,
									"end": 588,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 571,
									"end": 589,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 571,
									"end": 589,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 571,
									"end": 589,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 565,
									"end": 590,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 14,
									"end": 596,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 14,
									"end": 596,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 495,
									"end": 502,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 495,
									"end": 502,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 596,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 596,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 601,
									"end": 747,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 601,
									"end": 747,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 691,
									"end": 722,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 691,
									"end": 722,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 681,
									"end": 723,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 681,
									"end": 723,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 671,
									"end": 741,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 671,
									"end": 741,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 737,
									"end": 738,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 735,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 727,
									"end": 739,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 671,
									"end": 741,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 671,
									"end": 741,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 601,
									"end": 747,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 601,
									"end": 747,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 601,
									"end": 747,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 601,
									"end": 747,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 17621,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f995ca203c8d3204dbfc5f043af1255423830a84a94e3289a4574963bf11a6464736f6c63430008070033",
									".code": [
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "630B5BA1"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "93F1A40B"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "BA13A572"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "BA13A572"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "D0D41FE1"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "D30EF61B"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "DE73149D"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "93F1A40B"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "99335C39"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "A6530050"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "AF018DE8"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "8AA28550"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "8AA28550"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "8DBB1E3A"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "8DBDBE6D"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "8F97F54C"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "630B5BA1"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "6497AA90"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "8705FCD4"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "3AD10EF6"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "48B22BFB"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "48B22BFB"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "48CD4CB1"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "51EB05A6"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "5312EA8E"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "55DBC826"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "3AD10EF6"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "41275358"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "441A3E70"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "474FA630"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "2143E545"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "2143E545"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "251B7E89"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "27DDB5A9"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "2E6C998D"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "2F1536B8"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "81E3EDA"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "BA84CD2"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "1526FE27"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "17CAF6F1"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 17621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5140,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5132,
											"end": 5147,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5155,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6185,
											"end": 6187,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6170,
											"end": 6188,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6170,
											"end": 6188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6197,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6197,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6213,
											"end": 6231,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6213,
											"end": 6231,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6213,
											"end": 6231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6240,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6240,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6206,
											"end": 6240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6273,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6338,
											"name": "PUSH",
											"source": 10,
											"value": "FFFF"
										},
										{
											"begin": 6320,
											"end": 6339,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6317,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6144,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6356,
											"end": 6375,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6349,
											"end": 6384,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6093,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 6075,
											"end": 6094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5804,
											"end": 6390,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4582,
											"end": 4633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4582,
											"end": 4633,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3724,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4436,
											"end": 4639,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3156,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3092,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH",
											"source": 7,
											"value": "422CA8B0A00A4250000000"
										},
										{
											"begin": 3092,
											"end": 3156,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3156,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8793,
											"end": 8797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8847,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 8893,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 8918,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 8918,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 8918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5791,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5793,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5793,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8696,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5612,
											"end": 5799,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2739,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2799,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3600,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3600,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3600,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 3600,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3635,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3970,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14056,
											"end": 14062,
											"name": "PUSH",
											"source": 10,
											"value": "FFFF"
										},
										{
											"begin": 14044,
											"end": 14063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14063,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14026,
											"end": 14064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14026,
											"end": 14064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14014,
											"end": 14016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 13882,
											"end": 14070,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9009,
											"end": 9189,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9009,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 9009,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 9009,
											"end": 9189,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3644,
											"end": 3672,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3644,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3644,
											"end": 3672,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 3644,
											"end": 3672,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3672,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 2981,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2937,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2937,
											"end": 2981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2981,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2849,
											"end": 2879,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2849,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2879,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2879,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2879,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14741,
											"end": 14766,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 14766,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 14766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14797,
											"end": 14799,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14782,
											"end": 14800,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14782,
											"end": 14800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 14809,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 14809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 14809,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 14809,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14843,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14843,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14818,
											"end": 14852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14883,
											"end": 14885,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14868,
											"end": 14886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14861,
											"end": 14895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14731,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14713,
											"end": 14732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 14510,
											"end": 14901,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2686,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2646,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3862,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3085,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3027,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3078,
											"end": 3085,
											"name": "PUSH",
											"source": 7,
											"value": "127500"
										},
										{
											"begin": 3027,
											"end": 3085,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3027,
											"end": 3085,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 15795,
											"end": 15810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 15795,
											"end": 15812,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15795,
											"end": 15812,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 15795,
											"end": 15812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15860,
											"end": 15875,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 15860,
											"end": 15875,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14431,
											"end": 14456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14472,
											"end": 14490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14472,
											"end": 14490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14465,
											"end": 14499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14465,
											"end": 14499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14465,
											"end": 14499,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15848,
											"end": 15858,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 15848,
											"end": 15858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "PUSH",
											"source": 7,
											"value": "EEDC6338C9C1AD8F3CD6C90DD09DBE98DBD57E610D3E59A17996D07ACB0D9511"
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14404,
											"end": 14422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15828,
											"end": 15894,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 15905,
											"end": 15920,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 15905,
											"end": 15939,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15713,
											"end": 15947,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3226,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6717,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6695,
											"end": 6708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11130,
											"end": 11132,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11133,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11169,
											"end": 11171,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11142,
											"end": 11172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11208,
											"end": 11242,
											"name": "PUSH",
											"source": 10,
											"value": "7365743A20696E76616C6964206465706F736974206665652062617369732070"
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11188,
											"end": 11206,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11181,
											"end": 11243,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F696E7473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11259,
											"end": 11277,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11259,
											"end": 11277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11259,
											"end": 11277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11252,
											"end": 11287,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11323,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11304,
											"end": 11323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 10928,
											"end": 11329,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 6673,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3085,
											"name": "PUSH",
											"source": 7,
											"value": "127500"
										},
										{
											"begin": 6815,
											"end": 6831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6859,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6859,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11879,
											"end": 11900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11938,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11975,
											"end": 12006,
											"name": "PUSH",
											"source": 10,
											"value": "7365743A20696E76616C6964206861727665737420696E74657276616C000000"
										},
										{
											"begin": 11955,
											"end": 11973,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11955,
											"end": 11973,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11955,
											"end": 11973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11948,
											"end": 12007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 11695,
											"end": 12048,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 6793,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 6942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6988,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6927,
											"end": 6988,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6959,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6959,
											"end": 6976,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6959,
											"end": 6976,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6959,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7081,
											"end": 7092,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7036,
											"end": 7044,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7045,
											"end": 7049,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7061,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7016,
											"end": 7035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7016,
											"end": 7103,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7016,
											"end": 7103,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7016,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7013,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6998,
											"end": 7103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7103,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7142,
											"end": 7153,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7122,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7123,
											"end": 7127,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7139,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7114,
											"end": 7139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7153,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7153,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7172,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7173,
											"end": 7177,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7191,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7164,
											"end": 7191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7226,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7227,
											"end": 7231,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7248,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7218,
											"end": 7248,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7267,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 7275,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16137,
											"end": 16152,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16171,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16022,
											"end": 16179,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12111,
											"end": 12132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12135,
											"end": 12143,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 12144,
											"end": 12148,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12192,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12199,
											"end": 12209,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12229,
											"end": 12240,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12229,
											"end": 12240,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12229,
											"end": 12251,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 12229,
											"end": 12251,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12654,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12625,
											"end": 12655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12671,
											"end": 12689,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12671,
											"end": 12689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12671,
											"end": 12689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12664,
											"end": 12712,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12747,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12729,
											"end": 12747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 12411,
											"end": 12753,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 12221,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 12296,
											"end": 12300,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12285,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 12285,
											"end": 12301,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12285,
											"end": 12301,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 12285,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12312,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 12339,
											"end": 12343,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12312,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 12312,
											"end": 12344,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12312,
											"end": 12344,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 12312,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12359,
											"end": 12370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12359,
											"end": 12370,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12355,
											"end": 12507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 12355,
											"end": 12507,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12401,
											"end": 12412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12401,
											"end": 12412,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12401,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 12401,
											"end": 12425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12417,
											"end": 12424,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12401,
											"end": 12416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 12401,
											"end": 12425,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12401,
											"end": 12425,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 12401,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12425,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12452,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12452,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 12440,
											"end": 12495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12440,
											"end": 12452,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12484,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12487,
											"end": 12494,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 12440,
											"end": 12495,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12440,
											"end": 12495,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 12440,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12551,
											"end": 12575,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12546,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 12535,
											"end": 12586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12581,
											"end": 12585,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 12581,
											"end": 12585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 12535,
											"end": 12576,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 12535,
											"end": 12576,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12535,
											"end": 12576,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 12535,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12535,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 12535,
											"end": 12586,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12535,
											"end": 12586,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 12535,
											"end": 12586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12517,
											"end": 12532,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12517,
											"end": 12532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12517,
											"end": 12532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12517,
											"end": 12586,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12623,
											"end": 12627,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12623,
											"end": 12627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12611,
											"end": 12621,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12611,
											"end": 12621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "PUSH",
											"source": 7,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12637,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12031,
											"end": 12645,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH",
											"source": 7,
											"value": "422CA8B0A00A4250000000"
										},
										{
											"begin": 9325,
											"end": 9338,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 9325,
											"end": 9338,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9364,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9364,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9673,
											"end": 9675,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9655,
											"end": 9676,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9712,
											"end": 9714,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9685,
											"end": 9715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206D6F7265207374616B696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9724,
											"end": 9769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9786,
											"end": 9804,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9786,
											"end": 9804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 9471,
											"end": 9810,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 9317,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9427,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9428,
											"end": 9432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9464,
											"end": 9468,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9464,
											"end": 9484,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9464,
											"end": 9484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9464,
											"end": 9484,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9448,
											"end": 9460,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 9448,
											"end": 9484,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9444,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9444,
											"end": 9519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9444,
											"end": 9519,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9444,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9560,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9579,
											"end": 9583,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4633,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9529,
											"end": 9545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9529,
											"end": 9545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9548,
											"end": 9560,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9570,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 9548,
											"end": 9570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9529,
											"end": 9585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9600,
											"end": 9613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9600,
											"end": 9613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9600,
											"end": 9613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9600,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9600,
											"end": 9637,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9617,
											"end": 9632,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9617,
											"end": 9632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9617,
											"end": 9632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9617,
											"end": 9632,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9617,
											"end": 9637,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9600,
											"end": 9637,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9600,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9596,
											"end": 9722,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9596,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9596,
											"end": 9722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9677,
											"end": 9689,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 9654,
											"end": 9674,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9654,
											"end": 9674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9654,
											"end": 9674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9654,
											"end": 9674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9654,
											"end": 9689,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9596,
											"end": 9722,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9596,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9732,
											"end": 9750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9753,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9767,
											"end": 9771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9767,
											"end": 9787,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9767,
											"end": 9787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9767,
											"end": 9787,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9789,
											"end": 9801,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 9753,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 9753,
											"end": 9802,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9753,
											"end": 9802,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9753,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9732,
											"end": 9802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9732,
											"end": 9802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9925,
											"end": 9940,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9925,
											"end": 9940,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9894,
											"end": 9898,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9909,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9894,
											"end": 9909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9894,
											"end": 9909,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9863,
											"end": 9878,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9863,
											"end": 9878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9848,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 9838,
											"end": 9862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9879,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9838,
											"end": 9879,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9879,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9838,
											"end": 9879,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9838,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 9838,
											"end": 9910,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9838,
											"end": 9941,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9838,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9970,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9988,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 10007,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 9813,
											"end": 9941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10026,
											"end": 10028,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 10007,
											"end": 10029,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10007,
											"end": 10029,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 10007,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9988,
											"end": 10002,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9988,
											"end": 10002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9988,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 9988,
											"end": 10030,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9988,
											"end": 10030,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9988,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9970,
											"end": 9983,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 9970,
											"end": 9983,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9970,
											"end": 9983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9970,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 9970,
											"end": 10031,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 10031,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9970,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9967,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 9954,
											"end": 10031,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10054,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10042,
											"end": 10054,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10068,
											"end": 10072,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10042,
											"end": 10054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10054,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10059,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 10042,
											"end": 10059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10144,
											"end": 10156,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10144,
											"end": 10156,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10162,
											"end": 10172,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10162,
											"end": 10172,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10144,
											"end": 10156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10156,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10156,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10144,
											"end": 10161,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 10144,
											"end": 10161,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10162,
											"end": 10172,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10174,
											"end": 10188,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10193,
											"end": 10195,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 10174,
											"end": 10196,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10174,
											"end": 10196,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10174,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 10278,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 10307,
											"end": 10315,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10278,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 10297,
											"end": 10301,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 10278,
											"end": 10292,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10278,
											"end": 10302,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10278,
											"end": 10302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10278,
											"end": 10302,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10302,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10278,
											"end": 10302,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10278,
											"end": 10316,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 10278,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 10235,
											"end": 10327,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10235,
											"end": 10327,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 10235,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10232,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10208,
											"end": 10232,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10208,
											"end": 10327,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10361,
											"end": 10373,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10358,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10338,
											"end": 10358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10358,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10373,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9265,
											"end": 10381,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 12716,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12788,
											"end": 12809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12820,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 12821,
											"end": 12825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12869,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12875,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12876,
											"end": 12886,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 12926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 12926,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12937,
											"end": 12952,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12937,
											"end": 12952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12937,
											"end": 12952,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 12963,
											"end": 12978,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 12978,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 12982,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 12982,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 12982,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 13012,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 12993,
											"end": 13012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 13012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 13016,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 13016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 13016,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13048,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 13027,
											"end": 13048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13052,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13052,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13052,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13075,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12887,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 12926,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 13063,
											"end": 13117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13063,
											"end": 13075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13075,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 12926,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 13063,
											"end": 13117,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13063,
											"end": 13117,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 13063,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13176,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13133,
											"end": 13176,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13163,
											"end": 13167,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13163,
											"end": 13167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13151,
											"end": 13161,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 13151,
											"end": 13161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13176,
											"name": "PUSH",
											"source": 7,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 13133,
											"end": 13176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13133,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 14075,
											"end": 14252,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 16380,
											"end": 16439,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 16380,
											"end": 16439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16380,
											"end": 16439,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16380,
											"end": 16439,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16380,
											"end": 16439,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8086,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8087,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8123,
											"end": 8125,
											"name": "PUSH",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8162,
											"end": 8196,
											"name": "PUSH",
											"source": 10,
											"value": "736574526566657272616C436F6D6D697373696F6E526174653A20696E76616C"
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "PUSH",
											"source": 10,
											"value": "696420726566657272616C20636F6D6D697373696F6E20726174652062617369"
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8206,
											"end": 8268,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7320706F696E7473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8303,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8284,
											"end": 8303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8284,
											"end": 8303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8277,
											"end": 8316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8352,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 8333,
											"end": 8352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7882,
											"end": 8358,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 16358,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16572,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16598,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16240,
											"end": 16606,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9009,
											"end": 9189,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 9009,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9079,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9071,
											"end": 9086,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9131,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9131,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 9166,
											"end": 9169,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 9155,
											"end": 9170,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9170,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 9155,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9133,
											"end": 9138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9189,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15430,
											"end": 15440,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 15430,
											"end": 15440,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15430,
											"end": 15440,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15416,
											"end": 15426,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 15416,
											"end": 15440,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12960,
											"end": 12962,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12942,
											"end": 12963,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12999,
											"end": 13001,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 12979,
											"end": 12997,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12979,
											"end": 12997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 12997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 13002,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13064,
											"name": "PUSH",
											"source": 10,
											"value": "736574466565416464726573733A20464F5242494444454E0000000000000000"
										},
										{
											"begin": 13018,
											"end": 13036,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13018,
											"end": 13036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13018,
											"end": 13036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 12758,
											"end": 13106,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 15408,
											"end": 15469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15488,
											"end": 15513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15488,
											"end": 15513,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10017,
											"end": 10019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10058,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10029,
											"end": 10059,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "736574466565416464726573733A205A45524F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10068,
											"end": 10117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 9815,
											"end": 10158,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 15480,
											"end": 15537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15558,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15572,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15580,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7482,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7482,
											"end": 7485,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7490,
											"end": 7495,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7482,
											"end": 7496,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7482,
											"end": 7518,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7482,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7518,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7351,
											"end": 7526,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10594,
											"end": 10615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10626,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10675,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10681,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10682,
											"end": 10692,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10693,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 10676,
											"end": 10680,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10759,
											"end": 10760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10749,
											"end": 10756,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10760,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10815,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10749,
											"end": 10815,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10777,
											"end": 10815,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10777,
											"end": 10815,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10815,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10749,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10855,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10855,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 10749,
											"end": 10855,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10832,
											"end": 10855,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10855,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10855,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10855,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10855,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 10749,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10895,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10895,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10749,
											"end": 10895,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10872,
											"end": 10895,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10872,
											"end": 10895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10885,
											"end": 10895,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10872,
											"end": 10895,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10872,
											"end": 10895,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10895,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10749,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10731,
											"end": 10987,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10731,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 10731,
											"end": 10987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C7F7B6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10953,
											"end": 10963,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4856,
											"end": 4890,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4926,
											"end": 4941,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4926,
											"end": 4941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4926,
											"end": 4941,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 4942,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10952,
											"name": "PUSH",
											"source": 7,
											"value": "C7F7B6B"
										},
										{
											"begin": 10922,
											"end": 10952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4791,
											"end": 4809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10731,
											"end": 10987,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 10731,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10997,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 11024,
											"end": 11028,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10997,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 10997,
											"end": 11029,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10997,
											"end": 11029,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 10997,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 11040,
											"end": 11834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11084,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11124,
											"end": 11134,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5193,
											"end": 5227,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11166,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5243,
											"end": 5261,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5243,
											"end": 5261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5236,
											"end": 5279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5322,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11072,
											"end": 11084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11084,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11084,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11097,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 11072,
											"end": 11097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5128,
											"end": 5146,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5128,
											"end": 5146,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 11072,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11260,
											"end": 11267,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11260,
											"end": 11267,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11260,
											"end": 11267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11260,
											"end": 11267,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11227,
											"end": 11268,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11465,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 11223,
											"end": 11465,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11311,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 11390,
											"end": 11395,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 11311,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11341,
											"end": 11348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11341,
											"end": 11364,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11364,
											"name": "PUSH",
											"source": 7,
											"value": "B65D08B0"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 11341,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11318,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11367,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 11311,
											"end": 11367,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 11311,
											"end": 11367,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11311,
											"end": 11396,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 11311,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11425,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 11425,
											"end": 11432,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 11425,
											"end": 11449,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11425,
											"end": 11449,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 11425,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11449,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11270,
											"end": 11465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11465,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 11223,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11500,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11483,
											"end": 11500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11500,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11500,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 11483,
											"end": 11500,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11504,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11479,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 11479,
											"end": 11823,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11558,
											"end": 11575,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11558,
											"end": 11575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11558,
											"end": 11575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11558,
											"end": 11575,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 11546,
											"end": 11587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11581,
											"end": 11586,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 11581,
											"end": 11586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 11546,
											"end": 11576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11553,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11558,
											"end": 11575,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 11558,
											"end": 11575,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 11546,
											"end": 11576,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11546,
											"end": 11587,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 11546,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11632,
											"end": 11642,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 11632,
											"end": 11642,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11525,
											"end": 11587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11525,
											"end": 11587,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11606,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 11606,
											"end": 11655,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11632,
											"end": 11642,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11525,
											"end": 11587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11606,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 11606,
											"end": 11655,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11606,
											"end": 11655,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 11606,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 11688,
											"end": 11728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11717,
											"end": 11727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11717,
											"end": 11727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 11688,
											"end": 11712,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11704,
											"end": 11711,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 11688,
											"end": 11712,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11688,
											"end": 11712,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 11688,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 11688,
											"end": 11728,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11688,
											"end": 11728,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 11688,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11674,
											"end": 11728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11674,
											"end": 11728,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11479,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 11479,
											"end": 11823,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11479,
											"end": 11823,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 11479,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11794,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11794,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11799,
											"end": 11806,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11769,
											"end": 11807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11769,
											"end": 11807,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11479,
											"end": 11823,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 11479,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 11902,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11878,
											"end": 11902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 11902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 11902,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 11873,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 11873,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 11862,
											"end": 11913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11908,
											"end": 11912,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 11908,
											"end": 11912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 11862,
											"end": 11903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11862,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 11862,
											"end": 11903,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11862,
											"end": 11913,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 11862,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 11859,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11844,
											"end": 11859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 11859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 11913,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11949,
											"end": 11953,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11949,
											"end": 11953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 11947,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 11947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "PUSH",
											"source": 7,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11929,
											"end": 11963,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10462,
											"end": 11971,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7755,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7756,
											"end": 7760,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7804,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7858,
											"end": 7882,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7858,
											"end": 7882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7858,
											"end": 7882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7858,
											"end": 7882,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4633,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7817,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 7912,
											"end": 7934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 7949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7893,
											"end": 7949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 7976,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 7999,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 8016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 8016,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7964,
											"end": 8016,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8003,
											"end": 8016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8016,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8016,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 8016,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7964,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8451,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 7960,
											"end": 8451,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8125,
											"end": 8137,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 8054,
											"end": 8152,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8054,
											"end": 8152,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 8054,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 8291,
											"end": 8306,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8291,
											"end": 8306,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8271,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8256,
											"end": 8271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8271,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8221,
											"end": 8236,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8221,
											"end": 8236,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8202,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8192,
											"end": 8220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8237,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8192,
											"end": 8237,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8237,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8192,
											"end": 8307,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 8192,
											"end": 8307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8344,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 8386,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 8415,
											"end": 8423,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8386,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8167,
											"end": 8307,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8409,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 8386,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8386,
											"end": 8410,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8386,
											"end": 8424,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 8386,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8363,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 8344,
											"end": 8439,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8439,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 8344,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8322,
											"end": 8439,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8322,
											"end": 8439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7960,
											"end": 8451,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 7960,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8479,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 8544,
											"end": 8548,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8544,
											"end": 8559,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8544,
											"end": 8559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8544,
											"end": 8559,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 8479,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8483,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8479,
											"end": 8490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8490,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8479,
											"end": 8494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8515,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8479,
											"end": 8515,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8515,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8479,
											"end": 8570,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 8479,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 8600,
											"end": 8604,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8619,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8600,
											"end": 8619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8619,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8595,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 8588,
											"end": 8599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 8588,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8620,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7594,
											"end": 8628,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5565,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 5543,
											"end": 5556,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 7680,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7681,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7756,
											"end": 7790,
											"name": "PUSH",
											"source": 10,
											"value": "6164643A20696E76616C6964206465706F736974206665652062617369732070"
										},
										{
											"begin": 7736,
											"end": 7754,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7736,
											"end": 7754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7736,
											"end": 7754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7729,
											"end": 7791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F696E7473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7800,
											"end": 7835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7871,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7852,
											"end": 7871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7476,
											"end": 7877,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 5521,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3085,
											"name": "PUSH",
											"source": 7,
											"value": "127500"
										},
										{
											"begin": 5663,
											"end": 5679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5663,
											"end": 5707,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5663,
											"end": 5707,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10367,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10347,
											"end": 10368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10404,
											"end": 10406,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10377,
											"end": 10407,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10474,
											"name": "PUSH",
											"source": 10,
											"value": "6164643A20696E76616C6964206861727665737420696E74657276616C000000"
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10510,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10492,
											"end": 10510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 10163,
											"end": 10516,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 5641,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5790,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5775,
											"end": 5836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5775,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 5775,
											"end": 5836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 5807,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 5807,
											"end": 5824,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5807,
											"end": 5824,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 5807,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5884,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 5951,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5941,
											"end": 5951,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5925,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5980,
											"end": 5995,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5980,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 5980,
											"end": 6012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6011,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 5980,
											"end": 6012,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 6012,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 5980,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5962,
											"end": 5977,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5962,
											"end": 6012,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6031,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68A"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68B"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68C"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C68D"
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6355,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 6363,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15188,
											"end": 15198,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15188,
											"end": 15198,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15188,
											"end": 15198,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15174,
											"end": 15184,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 15174,
											"end": 15198,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8567,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8606,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8577,
											"end": 8607,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8669,
											"name": "PUSH",
											"source": 10,
											"value": "736574446576416464726573733A20464F5242494444454E0000000000000000"
										},
										{
											"begin": 8623,
											"end": 8641,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8623,
											"end": 8641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8623,
											"end": 8641,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8363,
											"end": 8711,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 15166,
											"end": 15227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15246,
											"end": 15271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15246,
											"end": 15271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "736574446576416464726573733A205A45524F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9442,
											"end": 9460,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9442,
											"end": 9460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 9123,
											"end": 9466,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 15238,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15316,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15330,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15104,
											"end": 15338,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8918,
											"end": 8920,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8900,
											"end": 8921,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8959,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8960,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8996,
											"end": 9030,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 9031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9040,
											"end": 9076,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9093,
											"end": 9112,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9093,
											"end": 9112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8716,
											"end": 9118,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13233,
											"end": 14623,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 13233,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13303,
											"end": 13324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13327,
											"end": 13335,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 13336,
											"end": 13340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13384,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13390,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13401,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13415,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 13415,
											"end": 13539,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13486,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 13486,
											"end": 13527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13486,
											"end": 13501,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 13486,
											"end": 13501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13486,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 13486,
											"end": 13527,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13486,
											"end": 13527,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 13486,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13483,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 13462,
											"end": 13483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13483,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13527,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13415,
											"end": 13539,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 13415,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13551,
											"end": 13566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 13665,
											"end": 13669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13665,
											"end": 13680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13665,
											"end": 13680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13665,
											"end": 13680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 13645,
											"end": 13649,
											"name": "PUSH",
											"source": 7,
											"value": "E8D4A51000"
										},
										{
											"begin": 13569,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 13605,
											"end": 13609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 13605,
											"end": 13629,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 13605,
											"end": 13629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13605,
											"end": 13629,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13573,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 13569,
											"end": 13604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13630,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13630,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13630,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13569,
											"end": 13630,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13630,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13569,
											"end": 13681,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 13569,
											"end": 13681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8793,
											"end": 8797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8847,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8853,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13713,
											"end": 13723,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13551,
											"end": 13681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13551,
											"end": 13681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8878,
											"end": 8893,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 8918,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13692,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 13692,
											"end": 14616,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13755,
											"end": 13756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13745,
											"end": 13752,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13756,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13783,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 13745,
											"end": 13783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13782,
											"end": 13783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13760,
											"end": 13779,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13760,
											"end": 13779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13760,
											"end": 13779,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13760,
											"end": 13783,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13783,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 13745,
											"end": 13783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 14369,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13741,
											"end": 14369,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13804,
											"end": 13824,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13827,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 13839,
											"end": 13843,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13839,
											"end": 13858,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13839,
											"end": 13858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13839,
											"end": 13858,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13827,
											"end": 13834,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13827,
											"end": 13838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 13827,
											"end": 13838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13827,
											"end": 13859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13827,
											"end": 13859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13827,
											"end": 13859,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13827,
											"end": 13859,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13827,
											"end": 13859,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13827,
											"end": 13859,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 13827,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13804,
											"end": 13859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13804,
											"end": 13859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 13983,
											"end": 13987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13983,
											"end": 14002,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13983,
											"end": 14002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13983,
											"end": 14002,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 13956,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 13936,
											"end": 13956,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 13960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 13936,
											"end": 13960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14021,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13936,
											"end": 14021,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13936,
											"end": 14021,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13936,
											"end": 14021,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 13936,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13913,
											"end": 13933,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 13913,
											"end": 14021,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14062,
											"end": 14063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14040,
											"end": 14059,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14040,
											"end": 14059,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14040,
											"end": 14059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14040,
											"end": 14063,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14106,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 14106,
											"end": 14187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 14106,
											"end": 14121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14106,
											"end": 14125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 14106,
											"end": 14187,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14106,
											"end": 14187,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 14106,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14082,
											"end": 14103,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 14082,
											"end": 14103,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14082,
											"end": 14103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14082,
											"end": 14187,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14241,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 14262,
											"end": 14272,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 14274,
											"end": 14286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14241,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 14241,
											"end": 14287,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14241,
											"end": 14287,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 14241,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14306,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 14328,
											"end": 14338,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 14340,
											"end": 14352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14306,
											"end": 14327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 14306,
											"end": 14353,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14306,
											"end": 14353,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 14306,
											"end": 14353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13785,
											"end": 14369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 14369,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13741,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13692,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 13692,
											"end": 14616,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13692,
											"end": 14616,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 13692,
											"end": 14616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14390,
											"end": 14401,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14390,
											"end": 14401,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14386,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 14386,
											"end": 14616,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14440,
											"end": 14459,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14440,
											"end": 14459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14440,
											"end": 14459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14440,
											"end": 14459,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14440,
											"end": 14472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 14440,
											"end": 14472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14464,
											"end": 14471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14440,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 14440,
											"end": 14472,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14440,
											"end": 14472,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 14440,
											"end": 14472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14437,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14418,
											"end": 14437,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14472,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 14530,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 14510,
											"end": 14530,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 14543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 14510,
											"end": 14543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14535,
											"end": 14542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 14534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 14510,
											"end": 14543,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14510,
											"end": 14543,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 14510,
											"end": 14543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14487,
											"end": 14507,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 14487,
											"end": 14543,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14590,
											"end": 14594,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14590,
											"end": 14594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14578,
											"end": 14588,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 14578,
											"end": 14588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "PUSH",
											"source": 7,
											"value": "EE470483107F579A55C754FA00613C45A9A3B617A418B39CB0BE97E5381BA7C1"
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14604,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 14386,
											"end": 14616,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 14386,
											"end": 14616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 14623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 14623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 14623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13233,
											"end": 14623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13233,
											"end": 14623,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 833,
											"end": 838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14745,
											"end": 15048,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 14745,
											"end": 15048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14854,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14847,
											"end": 14854,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14873,
											"end": 14877,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4633,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14847,
											"end": 14854,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14864,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 14847,
											"end": 14864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 14847,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14825,
											"end": 14879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14825,
											"end": 14879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14904,
											"end": 14915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14915,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14890,
											"end": 15041,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14890,
											"end": 15041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 14890,
											"end": 15041,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14939,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14932,
											"end": 14939,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 14939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14939,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14948,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 14932,
											"end": 14948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 14932,
											"end": 14966,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14890,
											"end": 15041,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 14890,
											"end": 15041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15006,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14999,
											"end": 15006,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14999,
											"end": 15006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15006,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15006,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14999,
											"end": 15029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 5333,
											"end": 5607,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 17618,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 16686,
											"end": 17618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16796,
											"end": 16811,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 16796,
											"end": 16811,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16796,
											"end": 16811,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16788,
											"end": 16826,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16788,
											"end": 16826,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16788,
											"end": 16826,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16788,
											"end": 16826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16788,
											"end": 16856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 16788,
											"end": 16856,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16830,
											"end": 16852,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 16830,
											"end": 16852,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16830,
											"end": 16852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16830,
											"end": 16852,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16830,
											"end": 16852,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 16830,
											"end": 16852,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16830,
											"end": 16856,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16830,
											"end": 16856,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16788,
											"end": 16856,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 16788,
											"end": 16856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16770,
											"end": 17611,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16770,
											"end": 17611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 16770,
											"end": 17611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16917,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 16902,
											"end": 16917,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A9FEFC7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4633,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16883,
											"end": 16899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16883,
											"end": 16899,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16917,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16929,
											"name": "PUSH",
											"source": 7,
											"value": "4A9FEFC7"
										},
										{
											"begin": 16902,
											"end": 16929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 16902,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16991,
											"end": 17013,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 16991,
											"end": 17013,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 16936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 16936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16951,
											"end": 16975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16951,
											"end": 16975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16978,
											"end": 17057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 16978,
											"end": 17057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17037,
											"end": 17042,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 17037,
											"end": 17042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16978,
											"end": 17014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 16978,
											"end": 17014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16978,
											"end": 16986,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16978,
											"end": 16986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16991,
											"end": 17013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16991,
											"end": 17013,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16991,
											"end": 17013,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 16991,
											"end": 17013,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16978,
											"end": 16990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 16978,
											"end": 17014,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16978,
											"end": 17057,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 16978,
											"end": 17057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16951,
											"end": 17057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17078,
											"end": 17100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17100,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17100,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17100,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17100,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 17078,
											"end": 17124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17123,
											"end": 17124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17104,
											"end": 17120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17104,
											"end": 17124,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17124,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 17078,
											"end": 17124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17600,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 17074,
											"end": 17600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17155,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17148,
											"end": 17155,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17174,
											"end": 17178,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4633,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17183,
											"end": 17199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17148,
											"end": 17155,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17165,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 17148,
											"end": 17165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 17148,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17199,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17145,
											"end": 17293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17145,
											"end": 17293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 17145,
											"end": 17293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17235,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 17223,
											"end": 17235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17249,
											"end": 17253,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17223,
											"end": 17235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17240,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 17223,
											"end": 17240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17145,
											"end": 17293,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 17145,
											"end": 17293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17318,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17311,
											"end": 17318,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17311,
											"end": 17318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17318,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17327,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 17311,
											"end": 17327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 17311,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17374,
											"end": 17389,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 17374,
											"end": 17389,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B82D297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17389,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17414,
											"name": "PUSH",
											"source": 7,
											"value": "DC1694B8"
										},
										{
											"begin": 17374,
											"end": 17414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17557,
											"end": 17565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17527,
											"end": 17584,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17550,
											"end": 17555,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17527,
											"end": 17584,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17527,
											"end": 17584,
											"name": "PUSH",
											"source": 7,
											"value": "86DDAB457291316E0F5496737E5CA67C4037234C32C3BE04C48AE96186893A7B"
										},
										{
											"begin": 17567,
											"end": 17583,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17527,
											"end": 17584,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17527,
											"end": 17584,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17527,
											"end": 17584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 17527,
											"end": 17584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14075,
											"end": 14252,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "528"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 3,
											"value": "528"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "531"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 3,
											"value": "531"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13313,
											"end": 13315,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13295,
											"end": 13316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13352,
											"end": 13354,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 13332,
											"end": 13350,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13332,
											"end": 13350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13332,
											"end": 13350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13425,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13364,
											"end": 13426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13435,
											"end": 13475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13511,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13492,
											"end": 13511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 13111,
											"end": 13517,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 4,
											"value": "529"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "536"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "536"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "539"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10705,
											"end": 10726,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10762,
											"end": 10764,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 10742,
											"end": 10760,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10742,
											"end": 10760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10742,
											"end": 10760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10735,
											"end": 10765,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10835,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10781,
											"end": 10799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10774,
											"end": 10836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10852,
											"end": 10870,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10852,
											"end": 10870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10852,
											"end": 10870,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10898,
											"end": 10917,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10898,
											"end": 10917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10521,
											"end": 10923,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "539"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "544"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12255,
											"end": 12257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12237,
											"end": 12258,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12294,
											"end": 12296,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 12274,
											"end": 12292,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12274,
											"end": 12292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12274,
											"end": 12292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12297,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12364,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12306,
											"end": 12365,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 12053,
											"end": 12406,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "544"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "547"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "548"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "547"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "551"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "551"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "553"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 4,
											"value": "553"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "556"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 4,
											"value": "556"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "558"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "558"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "561"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 517,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 266,
											"end": 517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 336,
											"end": 342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 391,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 368,
											"end": 375,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 364,
											"end": 387,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 405,
											"end": 406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 403,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 395,
											"end": 407,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 431,
											"end": 447,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 456,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 456,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 456,
											"end": 487,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 767,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 522,
											"end": 767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 589,
											"end": 595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 621,
											"end": 628,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 617,
											"end": 640,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 613,
											"end": 645,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 610,
											"end": 662,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 610,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 610,
											"end": 662,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 658,
											"end": 659,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 656,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 660,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 610,
											"end": 662,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 610,
											"end": 662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 690,
											"end": 699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 684,
											"end": 700,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 709,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 731,
											"end": 736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 709,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 709,
											"end": 737,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1049,
											"end": 1294,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1049,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1135,
											"end": 1158,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1163,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 1128,
											"end": 1180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1180,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 1128,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1225,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 1234,
											"end": 1264,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1299,
											"end": 1548,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 1299,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1423,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1419,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1424,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1441,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 1389,
											"end": 1441,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1435,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1427,
											"end": 1439,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1441,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 1389,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1479,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1512,
											"end": 1517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 1488,
											"end": 1518,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1553,
											"end": 1733,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1553,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1644,
											"end": 1651,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1668,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1685,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 1633,
											"end": 1685,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1683,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1685,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 1633,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1733,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1738,
											"end": 1922,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1738,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1847,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1859,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1881,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 1829,
											"end": 1881,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1881,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 1829,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1916,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1927,
											"end": 2242,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1927,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2009,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2053,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2042,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2054,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2059,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 2024,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2118,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2172,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 2206,
											"end": 2211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 2242,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2382,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2412,
											"end": 2435,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2441,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2456,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2552,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2535,
											"end": 2553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2554,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2613,
											"end": 2618,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2673,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2673,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2788,
											"end": 2790,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2829,
											"end": 2848,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2849,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 2816,
											"end": 2849,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 2858,
											"end": 2888,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2888,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 2858,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2907,
											"end": 2914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2920,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2925,
											"end": 3173,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 2925,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 2999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3056,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3033,
											"end": 3040,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3057,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3074,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 3022,
											"end": 3074,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3068,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3072,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3074,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 3022,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3116,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3116,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3167,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 3173,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3178,
											"end": 3561,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3178,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3269,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3344,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 3292,
											"end": 3344,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3344,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 3292,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3386,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3386,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3431,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3437,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3491,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 3500,
											"end": 3531,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3500,
											"end": 3531,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 3500,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3555,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3561,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3566,
											"end": 4152,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3566,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3745,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3728,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3740,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3746,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3757,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3761,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3805,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3850,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3824,
											"end": 3856,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3856,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3906,
											"end": 3908,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3878,
											"end": 3910,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 3919,
											"end": 3949,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4157,
											"end": 4431,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 4157,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4331,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4381,
											"end": 4384,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4374,
											"end": 4378,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 4340,
											"end": 4393,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4340,
											"end": 4393,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 4340,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4157,
											"end": 4431,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4157,
											"end": 4431,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7088,
											"end": 7471,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 7088,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7237,
											"end": 7239,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7219,
											"end": 7240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7312,
											"end": 7318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7296,
											"end": 7305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7319,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7371,
											"end": 7380,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7362,
											"end": 7364,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 7328,
											"end": 7394,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7328,
											"end": 7394,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 7328,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7457,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7434,
											"end": 7449,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7430,
											"end": 7459,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7462,
											"end": 7464,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7411,
											"end": 7465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7411,
											"end": 7465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7471,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7088,
											"end": 7471,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11334,
											"end": 11690,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 11334,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11536,
											"end": 11538,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11518,
											"end": 11539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11518,
											"end": 11539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11518,
											"end": 11539,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11548,
											"end": 11578,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11614,
											"end": 11648,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11609,
											"end": 11611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11594,
											"end": 11612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11587,
											"end": 11649,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11683,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11666,
											"end": 11684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11666,
											"end": 11684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11334,
											"end": 11690,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13522,
											"end": 13877,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 13522,
											"end": 13877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13724,
											"end": 13726,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13706,
											"end": 13727,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13706,
											"end": 13727,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13706,
											"end": 13727,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 13765,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13736,
											"end": 13766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13802,
											"end": 13835,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13797,
											"end": 13799,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13775,
											"end": 13836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13868,
											"end": 13870,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13522,
											"end": 13877,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14906,
											"end": 15034,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 14906,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14946,
											"end": 14949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14977,
											"end": 14978,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14973,
											"end": 14979,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14970,
											"end": 14971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14967,
											"end": 14980,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14964,
											"end": 15003,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14964,
											"end": 15003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 14964,
											"end": 15003,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14983,
											"end": 15001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 14983,
											"end": 15001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 14983,
											"end": 15001,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14983,
											"end": 15001,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 14983,
											"end": 15001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15019,
											"end": 15028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15019,
											"end": 15028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14906,
											"end": 15034,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15039,
											"end": 15256,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 15039,
											"end": 15256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15079,
											"end": 15080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15105,
											"end": 15106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15095,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 15095,
											"end": 15227,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15159,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15144,
											"end": 15147,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15140,
											"end": 15160,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15137,
											"end": 15138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15130,
											"end": 15161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15188,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 15181,
											"end": 15182,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15174,
											"end": 15189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15212,
											"end": 15216,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15209,
											"end": 15210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15202,
											"end": 15217,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15095,
											"end": 15227,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 15095,
											"end": 15227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15241,
											"end": 15250,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15241,
											"end": 15250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15039,
											"end": 15256,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15261,
											"end": 15429,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15261,
											"end": 15429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15301,
											"end": 15308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15367,
											"end": 15368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15363,
											"end": 15364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15359,
											"end": 15365,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15355,
											"end": 15369,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15353,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15349,
											"end": 15370,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15344,
											"end": 15345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15337,
											"end": 15346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15330,
											"end": 15347,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15326,
											"end": 15371,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15323,
											"end": 15394,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15323,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 15323,
											"end": 15394,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15374,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 15374,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 15374,
											"end": 15392,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15374,
											"end": 15392,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 15374,
											"end": 15392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15414,
											"end": 15423,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15414,
											"end": 15423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15429,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15434,
											"end": 15559,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 15434,
											"end": 15559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15474,
											"end": 15478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15502,
											"end": 15503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15496,
											"end": 15504,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15493,
											"end": 15527,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15493,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 15493,
											"end": 15527,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "tag",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15544,
											"end": 15553,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15434,
											"end": 15559,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15564,
											"end": 15822,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 15564,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15636,
											"end": 15637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15660,
											"end": 15666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15657,
											"end": 15658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15654,
											"end": 15667,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15736,
											"end": 15747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15736,
											"end": 15747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15736,
											"end": 15747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15730,
											"end": 15748,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15717,
											"end": 15728,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15717,
											"end": 15728,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15717,
											"end": 15728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15710,
											"end": 15749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15682,
											"end": 15684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15675,
											"end": 15685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 15646,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15777,
											"end": 15783,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15774,
											"end": 15775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15771,
											"end": 15784,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15768,
											"end": 15816,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15768,
											"end": 15816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 15768,
											"end": 15816,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15812,
											"end": 15813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15810,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15794,
											"end": 15810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15787,
											"end": 15814,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15564,
											"end": 15822,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15827,
											"end": 15962,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 15827,
											"end": 15962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15866,
											"end": 15869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15887,
											"end": 15904,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15904,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15884,
											"end": 15927,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15884,
											"end": 15927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 15884,
											"end": 15927,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15907,
											"end": 15925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 15907,
											"end": 15925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 15907,
											"end": 15925,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15907,
											"end": 15925,
											"name": "tag",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 15907,
											"end": 15925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15954,
											"end": 15955,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15943,
											"end": 15956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 15956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15827,
											"end": 15962,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15967,
											"end": 16094,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 15967,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16028,
											"end": 16038,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 16023,
											"end": 16026,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 16019,
											"end": 16039,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16016,
											"end": 16017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16009,
											"end": 16040,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16059,
											"end": 16063,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 16056,
											"end": 16057,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16049,
											"end": 16064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16083,
											"end": 16087,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16080,
											"end": 16081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16073,
											"end": 16088,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16099,
											"end": 16226,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 16099,
											"end": 16226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16160,
											"end": 16170,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 16155,
											"end": 16158,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 16151,
											"end": 16171,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16148,
											"end": 16149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16141,
											"end": 16172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16191,
											"end": 16195,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 16188,
											"end": 16189,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16181,
											"end": 16196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16215,
											"end": 16219,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16212,
											"end": 16213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16205,
											"end": 16220,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16231,
											"end": 16362,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 16231,
											"end": 16362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16306,
											"end": 16337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16306,
											"end": 16337,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16296,
											"end": 16338,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16296,
											"end": 16338,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 16286,
											"end": 16356,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16352,
											"end": 16353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16349,
											"end": 16350,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16342,
											"end": 16354,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16367,
											"end": 16485,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 16367,
											"end": 16485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16453,
											"end": 16458,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16459,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16439,
											"end": 16460,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16432,
											"end": 16437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16419,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 16419,
											"end": 16479,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16475,
											"end": 16476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16472,
											"end": 16473,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16465,
											"end": 16477,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16490,
											"end": 16607,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 16490,
											"end": 16607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16575,
											"end": 16581,
											"name": "PUSH",
											"source": 10,
											"value": "FFFF"
										},
										{
											"begin": 16568,
											"end": 16573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16564,
											"end": 16582,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16557,
											"end": 16562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16554,
											"end": 16583,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16544,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 16544,
											"end": 16601,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 16598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16594,
											"end": 16595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16587,
											"end": 16599,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"MAXIMUM_HARVEST_INTERVAL()": "de73149d",
							"MAXIMUM_REFERRAL_COMMISSION_RATE()": "48b22bfb",
							"MAX_STAKING_ALLOCATION()": "27ddb5a9",
							"add(uint256,address,uint16,uint256,bool)": "af018de8",
							"canHarvest(uint256,address)": "2e6c998d",
							"deposit(uint256,uint256,address)": "8dbdbe6d",
							"devAddress()": "3ad10ef6",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"feeAddress()": "41275358",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"loteTreasury()": "a6530050",
							"lottery()": "ba13a572",
							"lotteryPerBlock()": "8f97f54c",
							"lotteryReferral()": "251b7e89",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"pendingPosition(uint256,address)": "99335c39",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"referralCommissionRate()": "d30ef61b",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,uint16,uint256,bool)": "2143e545",
							"setDevAddress(address)": "d0d41fe1",
							"setFeeAddress(address)": "8705fcd4",
							"setPositionReferral(address)": "2f1536b8",
							"setReferralCommissionRate(uint16)": "55dbc826",
							"stakingMinted()": "6497aa90",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"totalLockedUpRewards()": "474fa630",
							"transferOwnership(address)": "f2fde38b",
							"updateEmissionRate(uint256)": "0ba84cd2",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ILotteryToken\",\"name\":\"_lottery\",\"type\":\"address\"},{\"internalType\":\"contract ILoteTreasury\",\"name\":\"_loteTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lotteryPerBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"EmissionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commissionAmount\",\"type\":\"uint256\"}],\"name\":\"ReferralCommissionPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLockedUp\",\"type\":\"uint256\"}],\"name\":\"RewardLockedUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_HARVEST_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_REFERRAL_COMMISSION_RATE\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKING_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_depositFeeBP\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_harvestInterval\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"canHarvest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loteTreasury\",\"outputs\":[{\"internalType\":\"contract ILoteTreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lottery\",\"outputs\":[{\"internalType\":\"contract ILotteryToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lotteryPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lotteryReferral\",\"outputs\":[{\"internalType\":\"contract ILotteryReferral\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPositionPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"depositFeeBP\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"harvestInterval\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralCommissionRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_depositFeeBP\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_harvestInterval\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devAddress\",\"type\":\"address\"}],\"name\":\"setDevAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILotteryReferral\",\"name\":\"_lotteryReferral\",\"type\":\"address\"}],\"name\":\"setPositionReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_referralCommissionRate\",\"type\":\"uint16\"}],\"name\":\"setReferralCommissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedUpRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lotteryPerBlock\",\"type\":\"uint256\"}],\"name\":\"updateEmissionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardLockedUp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextHarvestUntil\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LoteStakingManager.sol\":\"LoteStakingManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/LoteStakingManager.sol\":{\"keccak256\":\"0x9261056737b631509ef94c76284dac5591110d61b41dc603ba59f21e3a1329d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc6366efbac51ce848a90cbfa89cd5e32910af5a04a4175f828a2b2e00b4fd8c\",\"dweb:/ipfs/QmdckYDMVndgtXgXNy6kBfR4RhPbnvq71aCdpSMbrSnyxW\"]},\"contracts/interfaces/ILotteryReferral.sol\":{\"keccak256\":\"0xb7c355537a678fbb001642546124c5d4229cdaed810aab4b8b7de77259dbe620\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://51427683b9a82fde3e01533224e6a6c790128dcbb3edde1aa6bf4b80f74a660b\",\"dweb:/ipfs/QmUdLDviHyepEGqgATt8cfKXebfAPgRPKpMWD7VVAnTA1z\"]},\"contracts/interfaces/ILotteryToken.sol\":{\"keccak256\":\"0xd0162ef1f0b56b2c886a1c6810d7fe54878ff820d66a50da91e94155ffcfd168\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1df4da968967a50689fe71af8a949f1afa490ef90ade9539cdc284f9885f3159\",\"dweb:/ipfs/Qmesd87kJBNwfawF3xbgWbJUKZPuYBQnT1XK1tVqT4dUKo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 115,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1129,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "lottery",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ILotteryToken)2575"
							},
							{
								"astId": 1132,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "loteTreasury",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ILoteTreasury)1092"
							},
							{
								"astId": 1134,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "devAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1136,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "feeAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1138,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "lotteryPerBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1159,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "poolInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(PoolInfo)1126_storage)dyn_storage"
							},
							{
								"astId": 1166,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "userInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1112_storage))"
							},
							{
								"astId": 1169,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1171,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "startBlock",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1173,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "totalLockedUpRewards",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1175,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "stakingMinted",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1178,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "lotteryReferral",
								"offset": 0,
								"slot": "13",
								"type": "t_contract(ILotteryReferral)2511"
							},
							{
								"astId": 1181,
								"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
								"label": "referralCommissionRate",
								"offset": 20,
								"slot": "13",
								"type": "t_uint16"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1126_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1126_storage",
								"encoding": "dynamic_array",
								"label": "struct LoteStakingManager.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)222": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ILoteTreasury)1092": {
								"encoding": "inplace",
								"label": "contract ILoteTreasury",
								"numberOfBytes": "20"
							},
							"t_contract(ILotteryReferral)2511": {
								"encoding": "inplace",
								"label": "contract ILotteryReferral",
								"numberOfBytes": "20"
							},
							"t_contract(ILotteryToken)2575": {
								"encoding": "inplace",
								"label": "contract ILotteryToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1112_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LoteStakingManager.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1112_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1112_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1112_storage)"
							},
							"t_struct(PoolInfo)1126_storage": {
								"encoding": "inplace",
								"label": "struct LoteStakingManager.PoolInfo",
								"members": [
									{
										"astId": 1115,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)222"
									},
									{
										"astId": 1117,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1119,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1121,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "accPositionPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1123,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "depositFeeBP",
										"offset": 0,
										"slot": "4",
										"type": "t_uint16"
									},
									{
										"astId": 1125,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "harvestInterval",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(UserInfo)1112_storage": {
								"encoding": "inplace",
								"label": "struct LoteStakingManager.UserInfo",
								"members": [
									{
										"astId": 1105,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1107,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1109,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "rewardLockedUp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1111,
										"contract": "contracts/LoteStakingManager.sol:LoteStakingManager",
										"label": "nextHarvestUntil",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ILotteryReferral.sol": {
				"ILotteryReferral": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getReferrer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "recordReferral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "commission",
									"type": "uint256"
								}
							],
							"name": "recordReferralCommission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getReferrer(address)": {
								"details": "Get the referrer address that referred the user."
							},
							"recordReferral(address,address)": {
								"details": "Record referral."
							},
							"recordReferralCommission(address,uint256)": {
								"details": "Record referral commission."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getReferrer(address)": "4a9fefc7",
							"recordReferral(address,address)": "0c7f7b6b",
							"recordReferralCommission(address,uint256)": "dc1694b8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"recordReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"name\":\"recordReferralCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getReferrer(address)\":{\"details\":\"Get the referrer address that referred the user.\"},\"recordReferral(address,address)\":{\"details\":\"Record referral.\"},\"recordReferralCommission(address,uint256)\":{\"details\":\"Record referral commission.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILotteryReferral.sol\":\"ILotteryReferral\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILotteryReferral.sol\":{\"keccak256\":\"0xb7c355537a678fbb001642546124c5d4229cdaed810aab4b8b7de77259dbe620\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://51427683b9a82fde3e01533224e6a6c790128dcbb3edde1aa6bf4b80f74a660b\",\"dweb:/ipfs/QmUdLDviHyepEGqgATt8cfKXebfAPgRPKpMWD7VVAnTA1z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ILotteryToken.sol": {
				"ILotteryToken": {
					"abi": [
						{
							"inputs": [],
							"name": "BASE_MINT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isGenesisAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferTaxRate",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "treasuryTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "treasuryTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BASE_MINT()": "400d6844",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"isGenesisAddress(address)": "324884a9",
							"mint(address,uint256)": "40c10f19",
							"transfer(address,uint256)": "a9059cbb",
							"transferTaxRate()": "b65d08b0",
							"treasuryTransfer(address,uint256)": "f0c3443d",
							"treasuryTransfer(address[],uint256[])": "30d8ce9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BASE_MINT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isGenesisAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferTaxRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"treasuryTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"treasuryTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILotteryToken.sol\":\"ILotteryToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ILotteryToken.sol\":{\"keccak256\":\"0xd0162ef1f0b56b2c886a1c6810d7fe54878ff820d66a50da91e94155ffcfd168\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1df4da968967a50689fe71af8a949f1afa490ef90ade9539cdc284f9885f3159\",\"dweb:/ipfs/Qmesd87kJBNwfawF3xbgWbJUKZPuYBQnT1XK1tVqT4dUKo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							763
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 764,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								763
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							222
						]
					},
					"id": 223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 222,
							"linearizedBaseContracts": [
								222
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 156,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 165,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 222,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 222,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 222,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 222,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 222,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 222,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 223,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							741
						],
						"IERC20": [
							222
						],
						"SafeERC20": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 223,
							"src": "125:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 226,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 742,
							"src": "149:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 227,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 230,
									"libraryName": {
										"id": 228,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 741,
										"src": "675:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:3",
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "803:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "833:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 244,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "863:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "863:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 247,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "888:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "892:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 242,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 240,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "813:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "813:86:3"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "732:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 231,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "732:6:3"
													},
													"referencedDeclaration": 222,
													"src": "732:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "754:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "774:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:3"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:3"
									},
									"scope": 446,
									"src": "701:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "1040:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "1070:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 269,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "1100:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 221,
																		"src": "1100:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 272,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "1129:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "1135:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "1139:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 267,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 265,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1050:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "947:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 254,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "947:6:3"
													},
													"referencedDeclaration": 222,
													"src": "947:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "969:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "991:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1011:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:3"
									},
									"scope": 446,
									"src": "912:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1519:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 291,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1768:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 294,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 299,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$446",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$446",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 297,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 301,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 285,
																					"src": "1815:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 283,
																					"src": "1784:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 199,
																				"src": "1784:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1939:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 314,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1969:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 209,
																		"src": "1969:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 317,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "1993:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 318,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2002:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 312,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 310,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1919:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:3"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1443:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 281,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "1443:6:3"
													},
													"referencedDeclaration": 222,
													"src": "1443:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1465:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:3"
									},
									"scope": 446,
									"src": "1413:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2138:194:3",
										"statements": [
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "2148:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 339,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$446",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$446",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 337,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 341,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "2202:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 335,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2171:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$222",
																	"typeString": "contract IERC20"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 199,
															"src": "2171:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 343,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2213:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2248:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 350,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "2278:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 209,
																		"src": "2278:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 353,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "2302:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 354,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2311:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 348,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 346,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2228:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:3"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2062:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 324,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "2062:6:3"
													},
													"referencedDeclaration": 222,
													"src": "2062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2084:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2109:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:3"
									},
									"scope": 446,
									"src": "2022:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "2454:370:3",
										"statements": [
											{
												"id": 405,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:3",
												"statements": [
													{
														"assignments": [
															370
														],
														"declarations": [
															{
																"constant": false,
																"id": 370,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "2488:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 369,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 375,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$446",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$446",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 373,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "2542:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "2511:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 199,
																"src": "2511:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "2572:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 382,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "2588:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 380,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 386,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:3"
													},
													{
														"assignments": [
															388
														],
														"declarations": [
															{
																"constant": false,
																"id": 388,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "2653:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 387,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 392,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2676:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "2691:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 394,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "2730:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 397,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 362,
																					"src": "2760:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 209,
																				"src": "2760:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 400,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 364,
																			"src": "2784:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 401,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "2793:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 395,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 393,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "2710:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 404,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:3"
													}
												]
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2378:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 360,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "2378:6:3"
													},
													"referencedDeclaration": 222,
													"src": "2378:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2425:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:3"
									},
									"scope": 446,
									"src": "2338:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3277:636:3",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "3626:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"arguments": [
														{
															"id": 423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3680:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3660:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 535,
														"src": "3652:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 427,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3735:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "3731:176:3",
												"trueBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "3758:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 434,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "3830:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 436,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 435,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 437,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 432,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 431,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3236:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 409,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "3236:6:3"
													},
													"referencedDeclaration": 222,
													"src": "3236:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3250:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:3"
									},
									"scope": 446,
									"src": "3207:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 447,
							"src": "645:3270:3",
							"usedErrors": []
						}
					],
					"src": "100:3816:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							741
						]
					},
					"id": 742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 449,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 741,
							"linearizedBaseContracts": [
								741
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 457,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 456,
												"id": 462,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 741,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 475,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		],
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 473,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													484,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 483,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 485,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 487,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 741,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 508,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															535
														],
														"referencedDeclaration": 535,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 507,
												"id": 513,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 741,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 531,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 527,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															555,
															605
														],
														"referencedDeclaration": 605,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 526,
												"id": 533,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 741,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 550,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 547,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															555,
															605
														],
														"referencedDeclaration": 605,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 546,
												"id": 553,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 741,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 572,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 570,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 575,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 582,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 581,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													588,
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 587,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 589,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 591,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 593,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 598,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 603,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 741,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 615,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															657
														],
														"referencedDeclaration": 657,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 620,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 741,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 635,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													642,
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 641,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 650,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 655,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 741,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 667,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															674,
															709
														],
														"referencedDeclaration": 709,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 666,
												"id": 672,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 741,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 688,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 687,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													694,
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 693,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 695,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [
														{
															"id": 699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 697,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 704,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 705,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 702,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 685,
												"id": 707,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 741,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "7721:532:4",
										"statements": [
											{
												"condition": {
													"id": 721,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 712,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "7792:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 725,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "8184:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 732,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "8209:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 731,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 734,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:4"
																	}
																]
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "7872:365:4",
															"trueBody": {
																"id": 730,
																"nodeType": "Block",
																"src": "7899:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 714,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 714,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 729,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "7731:516:4",
												"trueBody": {
													"id": 724,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 722,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 720,
															"id": 723,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 741,
									"src": "7561:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 742,
							"src": "194:8061:4",
							"usedErrors": []
						}
					],
					"src": "101:8155:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							763
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 744,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 749,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 748,
												"id": 751,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 763,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 758,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 757,
												"id": 760,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 763,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 764,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1075
						]
					},
					"id": 1076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 766,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1075,
							"linearizedBaseContracts": [
								1075
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "717:140:6",
										"statements": [
											{
												"id": 796,
												"nodeType": "UncheckedBlock",
												"src": "727:124:6",
												"statements": [
													{
														"assignments": [
															779
														],
														"declarations": [
															{
																"constant": false,
																"id": 779,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 796,
																"src": "751:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 778,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 783,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 780,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 781,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "767:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 785,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "790:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 791,
														"nodeType": "IfStatement",
														"src": "782:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 789,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 777,
															"id": 790,
															"nodeType": "Return",
															"src": "793:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 793,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "838:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 777,
														"id": 795,
														"nodeType": "Return",
														"src": "824:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "668:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:6"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "702:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "708:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:6"
									},
									"scope": 1075,
									"src": "641:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "1078:113:6",
										"statements": [
											{
												"id": 824,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "1116:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 811,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "1120:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 817,
														"nodeType": "IfStatement",
														"src": "1112:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 815,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 809,
															"id": 816,
															"nodeType": "Return",
															"src": "1123:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 819,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "1168:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 820,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "1172:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 822,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 809,
														"id": 823,
														"nodeType": "Return",
														"src": "1154:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1018:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1029:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:6"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1063:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:6"
									},
									"scope": 1075,
									"src": "1002:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1415:417:6",
										"statements": [
											{
												"id": 866,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1683:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 845,
														"nodeType": "IfStatement",
														"src": "1679:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 837,
															"id": 844,
															"nodeType": "Return",
															"src": "1691:16:6"
														}
													},
													{
														"assignments": [
															847
														],
														"declarations": [
															{
																"constant": false,
																"id": 847,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 866,
																"src": "1721:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 846,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 851,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 849,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "1737:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "1756:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 853,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "1760:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 855,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "1765:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 861,
														"nodeType": "IfStatement",
														"src": "1752:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 859,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 837,
															"id": 860,
															"nodeType": "Return",
															"src": "1768:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 863,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "1813:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 864,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 837,
														"id": 865,
														"nodeType": "Return",
														"src": "1799:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1355:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1366:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:6"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1400:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1406:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:6"
									},
									"scope": 1075,
									"src": "1339:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "2057:114:6",
										"statements": [
											{
												"id": 894,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 880,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "2095:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 887,
														"nodeType": "IfStatement",
														"src": "2091:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 879,
															"id": 886,
															"nodeType": "Return",
															"src": "2103:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 889,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "2148:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 890,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "2152:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 892,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 879,
														"id": 893,
														"nodeType": "Return",
														"src": "2134:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2008:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:6"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2042:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2048:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:6"
									},
									"scope": 1075,
									"src": "1981:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "2406:114:6",
										"statements": [
											{
												"id": 922,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 908,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "2444:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 915,
														"nodeType": "IfStatement",
														"src": "2440:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 913,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 907,
															"id": 914,
															"nodeType": "Return",
															"src": "2452:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 917,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "2497:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 918,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "2501:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 920,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 907,
														"id": 921,
														"nodeType": "Return",
														"src": "2483:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2346:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2357:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:6"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2391:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2397:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:6"
									},
									"scope": 1075,
									"src": "2330:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "2822:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 934,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2839:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 935,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "2843:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 933,
												"id": 937,
												"nodeType": "Return",
												"src": "2832:12:6"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "2768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "2779:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:6"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "2813:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:6"
									},
									"scope": 1075,
									"src": "2755:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "3189:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 949,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3206:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 950,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3210:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 948,
												"id": 952,
												"nodeType": "Return",
												"src": "3199:12:6"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "3135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "3146:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:6"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "3180:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:6"
									},
									"scope": 1075,
									"src": "3122:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "3532:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 964,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3549:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 965,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "3553:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 963,
												"id": 967,
												"nodeType": "Return",
												"src": "3542:12:6"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3478:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:6"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3523:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:6"
									},
									"scope": 1075,
									"src": "3465:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "3917:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 979,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3934:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 980,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "3938:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 978,
												"id": 982,
												"nodeType": "Return",
												"src": "3927:12:6"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "3863:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "3874:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:6"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "3908:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:6"
									},
									"scope": 1075,
									"src": "3850:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "4466:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "4483:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 995,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "4487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 993,
												"id": 997,
												"nodeType": "Return",
												"src": "4476:12:6"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "4412:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "4423:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "4457:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:6"
									},
									"scope": 1075,
									"src": "4399:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "5084:106:6",
										"statements": [
											{
												"id": 1022,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1012,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5126:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1013,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "5131:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1015,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "5134:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1011,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1017,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "5168:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1019,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "5172:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1010,
														"id": 1021,
														"nodeType": "Return",
														"src": "5161:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "4981:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "5000:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "5019:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1005,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:6"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "5075:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:6"
									},
									"scope": 1075,
									"src": "4959:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "5799:105:6",
										"statements": [
											{
												"id": 1047,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1037,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "5841:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1040,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "5848:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1036,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1042,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1043,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "5882:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1044,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "5886:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1035,
														"id": 1046,
														"nodeType": "Return",
														"src": "5875:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5696:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5715:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5734:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1030,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:6"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5790:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:6"
									},
									"scope": 1075,
									"src": "5674:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "6675:105:6",
										"statements": [
											{
												"id": 1072,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1062,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "6717:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1065,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "6724:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1061,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1067,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1068,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "6758:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1069,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "6762:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1060,
														"id": 1071,
														"nodeType": "Return",
														"src": "6751:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6572:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6591:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6610:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1055,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:6"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6666:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:6"
									},
									"scope": 1075,
									"src": "6550:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1076,
							"src": "482:6300:6",
							"usedErrors": []
						}
					],
					"src": "107:6676:6"
				},
				"id": 6
			},
			"contracts/LoteStakingManager.sol": {
				"ast": {
					"absolutePath": "contracts/LoteStakingManager.sol",
					"exportedSymbols": {
						"Address": [
							741
						],
						"Context": [
							763
						],
						"IERC20": [
							222
						],
						"ILoteTreasury": [
							1092
						],
						"ILotteryReferral": [
							2511
						],
						"ILotteryToken": [
							2575
						],
						"LoteStakingManager": [
							2484
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"SafeERC20": [
							446
						],
						"SafeMath": [
							1075
						]
					},
					"id": 2485,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1077,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1078,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2485,
							"sourceUnit": 1076,
							"src": "74:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2485,
							"sourceUnit": 223,
							"src": "133:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2485,
							"sourceUnit": 447,
							"src": "191:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2485,
							"sourceUnit": 105,
							"src": "258:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2485,
							"sourceUnit": 145,
							"src": "312:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ILotteryReferral.sol",
							"file": "./interfaces/ILotteryReferral.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2485,
							"sourceUnit": 2512,
							"src": "376:43:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ILotteryToken.sol",
							"file": "./interfaces/ILotteryToken.sol",
							"id": 1084,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2485,
							"sourceUnit": 2576,
							"src": "421:40:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1092,
							"linearizedBaseContracts": [
								1092
							],
							"name": "ILoteTreasury",
							"nameLocation": "475:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 1091,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "505:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "518:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "510:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "537:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "529:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:35:7"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "553:0:7"
									},
									"scope": 1092,
									"src": "496:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2485,
							"src": "465:92:7",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1093,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "980:7:7"
									},
									"id": 1094,
									"nodeType": "InheritanceSpecifier",
									"src": "980:7:7"
								},
								{
									"baseName": {
										"id": 1095,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "989:15:7"
									},
									"id": 1096,
									"nodeType": "InheritanceSpecifier",
									"src": "989:15:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2484,
							"linearizedBaseContracts": [
								2484,
								144,
								104,
								763
							],
							"name": "LoteStakingManager",
							"nameLocation": "958:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1099,
									"libraryName": {
										"id": 1097,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1075,
										"src": "1018:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "1012:27:7",
									"typeName": {
										"id": 1098,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1031:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1103,
									"libraryName": {
										"id": 1100,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "1051:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "1045:27:7",
									"typeName": {
										"id": 1102,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1101,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 222,
											"src": "1065:6:7"
										},
										"referencedDeclaration": 222,
										"src": "1065:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$222",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "LoteStakingManager.UserInfo",
									"id": 1112,
									"members": [
										{
											"constant": false,
											"id": 1105,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1142:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1112,
											"src": "1134:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1104,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1134:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1107,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "1212:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1112,
											"src": "1204:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1106,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1204:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1109,
											"mutability": "mutable",
											"name": "rewardLockedUp",
											"nameLocation": "1280:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1112,
											"src": "1272:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1108,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1272:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1111,
											"mutability": "mutable",
											"name": "nextHarvestUntil",
											"nameLocation": "1334:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 1112,
											"src": "1326:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1110,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1326:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "1114:8:7",
									"nodeType": "StructDefinition",
									"scope": 2484,
									"src": "1107:928:7",
									"visibility": "public"
								},
								{
									"canonicalName": "LoteStakingManager.PoolInfo",
									"id": 1126,
									"members": [
										{
											"constant": false,
											"id": 1115,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "2104:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "2097:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$222",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1114,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1113,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 222,
													"src": "2097:6:7"
												},
												"referencedDeclaration": 222,
												"src": "2097:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1117,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "2163:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "2155:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2155:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1119,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "2280:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "2272:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1118,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2272:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1121,
											"mutability": "mutable",
											"name": "accPositionPerShare",
											"nameLocation": "2371:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "2363:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1120,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2363:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1123,
											"mutability": "mutable",
											"name": "depositFeeBP",
											"nameLocation": "2467:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "2460:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1122,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2460:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "harvestInterval",
											"nameLocation": "2529:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "2521:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1124,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2521:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "2077:8:7",
									"nodeType": "StructDefinition",
									"scope": 2484,
									"src": "2070:513:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba13a572",
									"id": 1129,
									"mutability": "mutable",
									"name": "lottery",
									"nameLocation": "2639:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "2618:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILotteryToken_$2575",
										"typeString": "contract ILotteryToken"
									},
									"typeName": {
										"id": 1128,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1127,
											"name": "ILotteryToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2575,
											"src": "2618:13:7"
										},
										"referencedDeclaration": 2575,
										"src": "2618:13:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILotteryToken_$2575",
											"typeString": "contract ILotteryToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6530050",
									"id": 1132,
									"mutability": "mutable",
									"name": "loteTreasury",
									"nameLocation": "2674:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "2653:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
										"typeString": "contract ILoteTreasury"
									},
									"typeName": {
										"id": 1131,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1130,
											"name": "ILoteTreasury",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1092,
											"src": "2653:13:7"
										},
										"referencedDeclaration": 1092,
										"src": "2653:13:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
											"typeString": "contract ILoteTreasury"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3ad10ef6",
									"id": 1134,
									"mutability": "mutable",
									"name": "devAddress",
									"nameLocation": "2729:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "2714:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1133,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2714:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "41275358",
									"id": 1136,
									"mutability": "mutable",
									"name": "feeAddress",
									"nameLocation": "2789:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "2774:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1135,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2774:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f97f54c",
									"id": 1138,
									"mutability": "mutable",
									"name": "lotteryPerBlock",
									"nameLocation": "2864:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "2849:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2849:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8aa28550",
									"id": 1141,
									"mutability": "constant",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "2961:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "2937:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1139,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2937:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1140,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2980:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "de73149d",
									"id": 1144,
									"mutability": "constant",
									"name": "MAXIMUM_HARVEST_INTERVAL",
									"nameLocation": "3051:24:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3027:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3027:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3134",
										"id": 1143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3078:7:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1209600_by_1",
											"typeString": "int_const 1209600"
										},
										"value": "14"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "27ddb5a9",
									"id": 1155,
									"mutability": "constant",
									"name": "MAX_STAKING_ALLOCATION",
									"nameLocation": "3116:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3092:64:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3092:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_80000000000000000000000000_by_1",
											"typeString": "int_const 80000000000000000000000000"
										},
										"id": 1154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_80000000_by_1",
												"typeString": "int_const 80000000"
											},
											"id": 1150,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3830",
												"id": 1146,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3141:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_80_by_1",
													"typeString": "int_const 80"
												},
												"value": "80"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"commonType": {
													"typeIdentifier": "t_rational_1000000_by_1",
													"typeString": "int_const 1000000"
												},
												"id": 1149,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3144:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"hexValue": "36",
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3148:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6_by_1",
														"typeString": "int_const 6"
													},
													"value": "6"
												},
												"src": "3144:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1000000_by_1",
													"typeString": "int_const 1000000"
												}
											},
											"src": "3141:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_80000000_by_1",
												"typeString": "int_const 80000000"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1153,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1151,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3150:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1152,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3154:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "3150:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "3141:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80000000000000000000000000_by_1",
											"typeString": "int_const 80000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1159,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "3218:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3200:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
										"typeString": "struct LoteStakingManager.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1157,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1156,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1126,
												"src": "3200:8:7"
											},
											"referencedDeclaration": 1126,
											"src": "3200:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
												"typeString": "struct LoteStakingManager.PoolInfo"
											}
										},
										"id": 1158,
										"nodeType": "ArrayTypeName",
										"src": "3200:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage_ptr",
											"typeString": "struct LoteStakingManager.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1166,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "3338:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3282:64:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo))"
									},
									"typeName": {
										"id": 1165,
										"keyType": {
											"id": 1160,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3290:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3282:48:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo))"
										},
										"valueType": {
											"id": 1164,
											"keyType": {
												"id": 1161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3309:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3301:28:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$",
												"typeString": "mapping(address => struct LoteStakingManager.UserInfo)"
											},
											"valueType": {
												"id": 1163,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1162,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1112,
													"src": "3320:8:7"
												},
												"referencedDeclaration": 1112,
												"src": "3320:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
													"typeString": "struct LoteStakingManager.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1169,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "3456:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3441:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3441:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3474:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 1171,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "3551:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3536:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3536:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "474fa630",
									"id": 1173,
									"mutability": "mutable",
									"name": "totalLockedUpRewards",
									"nameLocation": "3615:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3600:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1172,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3600:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6497aa90",
									"id": 1175,
									"mutability": "mutable",
									"name": "stakingMinted",
									"nameLocation": "3659:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3644:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1174,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3644:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "251b7e89",
									"id": 1178,
									"mutability": "mutable",
									"name": "lotteryReferral",
									"nameLocation": "3748:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3724:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
										"typeString": "contract ILotteryReferral"
									},
									"typeName": {
										"id": 1177,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1176,
											"name": "ILotteryReferral",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2511,
											"src": "3724:16:7"
										},
										"referencedDeclaration": 2511,
										"src": "3724:16:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
											"typeString": "contract ILotteryReferral"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d30ef61b",
									"id": 1181,
									"mutability": "mutable",
									"name": "referralCommissionRate",
									"nameLocation": "3834:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3820:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1179,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "3820:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1180,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3859:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "48b22bfb",
									"id": 1184,
									"mutability": "constant",
									"name": "MAXIMUM_REFERRAL_COMMISSION_RATE",
									"nameLocation": "3935:32:7",
									"nodeType": "VariableDeclaration",
									"scope": 2484,
									"src": "3912:62:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1182,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "3912:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3970:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1192,
									"name": "Deposit",
									"nameLocation": "3989:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4013:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3997:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "4035:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4019:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4019:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4048:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4040:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:59:7"
									},
									"src": "3983:73:7"
								},
								{
									"anonymous": false,
									"id": 1200,
									"name": "Withdraw",
									"nameLocation": "4068:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4093:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4077:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4077:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "4115:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4099:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4099:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4128:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4120:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:59:7"
									},
									"src": "4062:74:7"
								},
								{
									"anonymous": false,
									"id": 1208,
									"name": "EmergencyWithdraw",
									"nameLocation": "4148:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4192:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "4176:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "4223:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "4207:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4245:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "4237:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4237:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4165:93:7"
									},
									"src": "4142:117:7"
								},
								{
									"anonymous": false,
									"id": 1216,
									"name": "EmissionRateUpdated",
									"nameLocation": "4271:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "4317:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4301:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAmount",
												"nameLocation": "4342:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4334:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4334:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "4375:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4367:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4290:101:7"
									},
									"src": "4265:127:7"
								},
								{
									"anonymous": false,
									"id": 1224,
									"name": "ReferralCommissionPaid",
									"nameLocation": "4404:22:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4453:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "4437:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4437:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "4484:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "4468:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "commissionAmount",
												"nameLocation": "4511:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "4503:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4426:108:7"
									},
									"src": "4398:137:7"
								},
								{
									"anonymous": false,
									"id": 1232,
									"name": "RewardLockedUp",
									"nameLocation": "4547:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4588:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "4572:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4572:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "4619:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "4603:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountLockedUp",
												"nameLocation": "4641:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "4633:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4633:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:101:7"
									},
									"src": "4541:122:7"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "4826:226:7",
										"statements": [
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1245,
														"name": "lottery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "4837:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILotteryToken_$2575",
															"typeString": "contract ILotteryToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1246,
														"name": "_lottery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "4847:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILotteryToken_$2575",
															"typeString": "contract ILotteryToken"
														}
													},
													"src": "4837:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILotteryToken_$2575",
														"typeString": "contract ILotteryToken"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "4837:18:7"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "loteTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "4866:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
															"typeString": "contract ILoteTreasury"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1250,
														"name": "_loteTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "4881:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
															"typeString": "contract ILoteTreasury"
														}
													},
													"src": "4866:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
														"typeString": "contract ILoteTreasury"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "4866:28:7"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1253,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "4905:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1254,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "4918:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4905:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "4905:24:7"
											},
											{
												"expression": {
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1257,
														"name": "lotteryPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "4940:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1258,
														"name": "_lotteryPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4958:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4940:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "4940:34:7"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1261,
														"name": "devAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "4987:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1262,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5000:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5000:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4987:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "4987:23:7"
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1266,
														"name": "feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "5021:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1267,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5034:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5034:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5021:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "5021:23:7"
											}
										]
									},
									"id": 1272,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "_lottery",
												"nameLocation": "4707:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "4693:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILotteryToken_$2575",
													"typeString": "contract ILotteryToken"
												},
												"typeName": {
													"id": 1234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1233,
														"name": "ILotteryToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2575,
														"src": "4693:13:7"
													},
													"referencedDeclaration": 2575,
													"src": "4693:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILotteryToken_$2575",
														"typeString": "contract ILotteryToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_loteTreasury",
												"nameLocation": "4740:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "4726:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
													"typeString": "contract ILoteTreasury"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "ILoteTreasury",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "4726:13:7"
													},
													"referencedDeclaration": 1092,
													"src": "4726:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
														"typeString": "contract ILoteTreasury"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "4772:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "4764:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "_lotteryPerBlock",
												"nameLocation": "4802:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "4794:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:143:7"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4826:0:7"
									},
									"scope": 2484,
									"src": "4671:381:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "5114:41:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1277,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "5132:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
															"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5132:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1276,
												"id": 1279,
												"nodeType": "Return",
												"src": "5125:22:7"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "5069:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5079:2:7"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "5105:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5105:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5104:9:7"
									},
									"scope": 2484,
									"src": "5060:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "5510:853:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1298,
																"name": "_depositFeeBP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "5543:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5560:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "5543:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20696e76616c6964206465706f7369742066656520626173697320706f696e7473",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5580:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ecf01aeb804f0ae223eada9d16893a9009cdcbe208d348705dc613f9a9f5331",
																"typeString": "literal_string \"add: invalid deposit fee basis points\""
															},
															"value": "add: invalid deposit fee basis points"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ecf01aeb804f0ae223eada9d16893a9009cdcbe208d348705dc613f9a9f5331",
																"typeString": "literal_string \"add: invalid deposit fee basis points\""
															}
														],
														"id": 1297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5521:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5521:109:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "5521:109:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1305,
																"name": "_harvestInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "5663:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1306,
																"name": "MAXIMUM_HARVEST_INTERVAL",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "5683:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5663:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164643a20696e76616c6964206861727665737420696e74657276616c",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5722:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f178f6b435869b11e7807ebabe44aaf37869349d89b2de2d38d8ce2ca49db57",
																"typeString": "literal_string \"add: invalid harvest interval\""
															},
															"value": "add: invalid harvest interval"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f178f6b435869b11e7807ebabe44aaf37869349d89b2de2d38d8ce2ca49db57",
																"typeString": "literal_string \"add: invalid harvest interval\""
															}
														],
														"id": 1304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5641:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:123:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "5641:123:7"
											},
											{
												"condition": {
													"id": 1311,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1292,
													"src": "5779:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "5775:61:7",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "5792:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1312,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "5807:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5807:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1314,
															"nodeType": "ExpressionStatement",
															"src": "5807:17:7"
														}
													]
												}
											},
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "5854:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "5846:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5846:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1319,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5872:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "5872:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1321,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "5887:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5872:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1325,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "5941:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5872:79:7",
													"trueExpression": {
														"expression": {
															"id": 1323,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5913:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "5913:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5846:105:7"
											},
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1328,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "5962:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1331,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "6000:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1329,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "5980:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 939,
															"src": "5980:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5980:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5962:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "5962:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1339,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "6088:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1340,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "6127:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1341,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "6174:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6229:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 1343,
																	"name": "_depositFeeBP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "6263:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"id": 1344,
																	"name": "_harvestInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "6312:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1338,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "6051:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1126_storage_ptr_$",
																	"typeString": "type(struct LoteStakingManager.PoolInfo storage pointer)"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPositionPerShare",
																"depositFeeBP",
																"harvestInterval"
															],
															"nodeType": "FunctionCall",
															"src": "6051:293:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_memory_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1126_memory_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1335,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "6023:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
																"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6023:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1126_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LoteStakingManager.PoolInfo storage ref[] storage pointer,struct LoteStakingManager.PoolInfo storage ref)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:332:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "6023:332:7"
											}
										]
									},
									"functionSelector": "af018de8",
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1295,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1294,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5500:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5500:9:7"
										}
									],
									"name": "add",
									"nameLocation": "5333:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "5355:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5347:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5347:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "5384:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5377:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1284,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "5377:6:7"
													},
													"referencedDeclaration": 222,
													"src": "5377:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "_depositFeeBP",
												"nameLocation": "5410:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5403:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1287,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5403:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "_harvestInterval",
												"nameLocation": "5442:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5434:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5434:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "5474:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "5469:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5469:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5336:156:7"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5510:0:7"
									},
									"scope": 2484,
									"src": "5324:1039:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "6662:613:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "_depositFeeBP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "6695:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6712:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "6695:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7365743a20696e76616c6964206465706f7369742066656520626173697320706f696e7473",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6732:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9353dfb5d58f0da66015bbcadafa0686e2e7b7226db2e603088e70c7012680cf",
																"typeString": "literal_string \"set: invalid deposit fee basis points\""
															},
															"value": "set: invalid deposit fee basis points"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9353dfb5d58f0da66015bbcadafa0686e2e7b7226db2e603088e70c7012680cf",
																"typeString": "literal_string \"set: invalid deposit fee basis points\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6673:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6673:109:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "6673:109:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1372,
																"name": "_harvestInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "6815:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1373,
																"name": "MAXIMUM_HARVEST_INTERVAL",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "6835:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6815:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7365743a20696e76616c6964206861727665737420696e74657276616c",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6874:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a334800cd19b18b6d938393d303a75ee080f825dc478f54dd3ef6d6a8de1a586",
																"typeString": "literal_string \"set: invalid harvest interval\""
															},
															"value": "set: invalid harvest interval"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a334800cd19b18b6d938393d303a75ee080f825dc478f54dd3ef6d6a8de1a586",
																"typeString": "literal_string \"set: invalid harvest interval\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6793:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6793:123:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "6793:123:7"
											},
											{
												"condition": {
													"id": 1378,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1359,
													"src": "6931:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1383,
												"nodeType": "IfStatement",
												"src": "6927:61:7",
												"trueBody": {
													"id": 1382,
													"nodeType": "Block",
													"src": "6944:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1379,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "6959:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6959:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1381,
															"nodeType": "ExpressionStatement",
															"src": "6959:17:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1384,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "6998:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1393,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "7081:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1387,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "7036:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
																					"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1389,
																			"indexExpression": {
																				"id": 1388,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1351,
																				"src": "7045:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7036:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
																				"typeString": "struct LoteStakingManager.PoolInfo storage ref"
																			}
																		},
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1117,
																		"src": "7036:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1385,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "7016:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "7016:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7016:46:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 939,
															"src": "7016:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7016:87:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6998:105:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "6998:105:7"
											},
											{
												"expression": {
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1397,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "7114:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
																	"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1399,
															"indexExpression": {
																"id": 1398,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "7123:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7114:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
																"typeString": "struct LoteStakingManager.PoolInfo storage ref"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1117,
														"src": "7114:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1401,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "7142:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7114:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "7114:39:7"
											},
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1404,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "7164:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
																	"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1406,
															"indexExpression": {
																"id": 1405,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "7173:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7164:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
																"typeString": "struct LoteStakingManager.PoolInfo storage ref"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "depositFeeBP",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "7164:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1408,
														"name": "_depositFeeBP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "7194:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "7164:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "7164:43:7"
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1411,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "7218:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
																	"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1413,
															"indexExpression": {
																"id": 1412,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "7227:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7218:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
																"typeString": "struct LoteStakingManager.PoolInfo storage ref"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "harvestInterval",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1125,
														"src": "7218:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1415,
														"name": "_harvestInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "7251:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7218:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "7218:49:7"
											}
										]
									},
									"functionSelector": "2143e545",
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1362,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1361,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6652:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6652:9:7"
										}
									],
									"name": "set",
									"nameLocation": "6488:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6510:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "6502:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6502:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "6533:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "6525:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6525:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "_depositFeeBP",
												"nameLocation": "6562:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "6555:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1354,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6555:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "_harvestInterval",
												"nameLocation": "6594:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "6586:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6586:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "6626:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "6621:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6621:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6491:153:7"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6662:0:7"
									},
									"scope": 2484,
									"src": "6479:796:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "7464:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1433,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "7501:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1430,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "7490:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1428,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "7482:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 954,
																"src": "7482:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7482:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 969,
														"src": "7482:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7482:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1427,
												"id": 1435,
												"nodeType": "Return",
												"src": "7475:43:7"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "7360:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "7382:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "7374:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7374:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7397:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "7389:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7389:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7373:28:7"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "7450:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7450:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7449:9:7"
									},
									"scope": 2484,
									"src": "7351:175:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "7712:916:7",
										"statements": [
											{
												"assignments": [
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7740:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1546,
														"src": "7723:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
															"typeString": "struct LoteStakingManager.PoolInfo"
														},
														"typeName": {
															"id": 1447,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1446,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "7723:8:7"
															},
															"referencedDeclaration": 1126,
															"src": "7723:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1452,
												"initialValue": {
													"baseExpression": {
														"id": 1449,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "7747:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
															"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1451,
													"indexExpression": {
														"id": 1450,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "7756:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7747:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
														"typeString": "struct LoteStakingManager.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7723:38:7"
											},
											{
												"assignments": [
													1455
												],
												"declarations": [
													{
														"constant": false,
														"id": 1455,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7789:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1546,
														"src": "7772:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
															"typeString": "struct LoteStakingManager.UserInfo"
														},
														"typeName": {
															"id": 1454,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1453,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1112,
																"src": "7772:8:7"
															},
															"referencedDeclaration": 1112,
															"src": "7772:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1461,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1456,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "7796:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo storage ref))"
															}
														},
														"id": 1458,
														"indexExpression": {
															"id": 1457,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "7805:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7796:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$",
															"typeString": "mapping(address => struct LoteStakingManager.UserInfo storage ref)"
														}
													},
													"id": 1460,
													"indexExpression": {
														"id": 1459,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "7811:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7796:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1112_storage",
														"typeString": "struct LoteStakingManager.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7772:45:7"
											},
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "accPositionPerShare",
														"nameLocation": "7836:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1546,
														"src": "7828:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7828:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"expression": {
														"id": 1464,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "7858:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
															"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPositionPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1121,
													"src": "7858:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7828:54:7"
											},
											{
												"assignments": [
													1468
												],
												"declarations": [
													{
														"constant": false,
														"id": 1468,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "7901:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1546,
														"src": "7893:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7893:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1474,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7943:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																		"typeString": "contract LoteStakingManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																		"typeString": "contract LoteStakingManager"
																	}
																],
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7935:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7935:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7935:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1469,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "7912:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																	"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1115,
															"src": "7912:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 179,
														"src": "7912:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7912:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7893:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1478,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7964:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "7964:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1480,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "7979:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																	"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "7979:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7964:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1483,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "8003:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8015:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8003:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7964:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1524,
												"nodeType": "IfStatement",
												"src": "7960:491:7",
												"trueBody": {
													"id": 1523,
													"nodeType": "Block",
													"src": "8018:433:7",
													"statements": [
														{
															"assignments": [
																1488
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1488,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "8041:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1523,
																	"src": "8033:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1487,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8033:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1495,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1490,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "8086:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																				"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																			}
																		},
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1119,
																		"src": "8086:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1492,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8125:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "8125:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1489,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "8054:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8054:98:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8033:119:7"
														},
														{
															"assignments": [
																1497
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1497,
																	"mutability": "mutable",
																	"name": "positionReward",
																	"nameLocation": "8175:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1523,
																	"src": "8167:22:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1496,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8167:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1509,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1507,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "8291:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1503,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1448,
																					"src": "8256:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																						"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																					}
																				},
																				"id": 1504,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1117,
																				"src": "8256:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1500,
																						"name": "lotteryPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1138,
																						"src": "8221:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1498,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1488,
																						"src": "8192:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1499,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 969,
																					"src": "8192:28:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8192:45:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 969,
																			"src": "8192:63:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8192:80:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 984,
																	"src": "8192:98:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8192:115:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8167:140:7"
														},
														{
															"expression": {
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1510,
																	"name": "accPositionPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "8322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1518,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1468,
																					"src": "8415:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1515,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8405:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1513,
																							"name": "positionReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1497,
																							"src": "8386:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1514,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 969,
																						"src": "8386:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1516,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8386:24:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 984,
																				"src": "8386:28:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8386:38:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1511,
																			"name": "accPositionPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "8344:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 939,
																		"src": "8344:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8344:95:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8322:117:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1522,
															"nodeType": "ExpressionStatement",
															"src": "8322:117:7"
														}
													]
												}
											},
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "8469:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1546,
														"src": "8461:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1525,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8461:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1536,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "8544:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																	"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1107,
															"src": "8544:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8520:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1530,
																			"name": "accPositionPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "8495:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1527,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1455,
																				"src": "8479:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																					"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																				}
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1105,
																			"src": "8479:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 969,
																		"src": "8479:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8479:36:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 984,
																"src": "8479:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8479:46:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "8479:50:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8479:91:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8461:109:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1542,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "8600:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																	"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardLockedUp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1109,
															"src": "8600:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1540,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "8588:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 939,
														"src": "8588:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8588:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1445,
												"id": 1545,
												"nodeType": "Return",
												"src": "8581:39:7"
											}
										]
									},
									"functionSelector": "99335c39",
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingPosition",
									"nameLocation": "7603:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7627:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "7619:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7619:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "7641:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "7633:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7633:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7618:29:7"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "7698:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7698:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7697:9:7"
									},
									"scope": 2484,
									"src": "7594:1034:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "8804:122:7",
										"statements": [
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "8832:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "8815:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
															"typeString": "struct LoteStakingManager.UserInfo"
														},
														"typeName": {
															"id": 1557,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1556,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1112,
																"src": "8815:8:7"
															},
															"referencedDeclaration": 1112,
															"src": "8815:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1559,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "8839:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo storage ref))"
															}
														},
														"id": 1561,
														"indexExpression": {
															"id": 1560,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "8848:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8839:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$",
															"typeString": "mapping(address => struct LoteStakingManager.UserInfo storage ref)"
														}
													},
													"id": 1563,
													"indexExpression": {
														"id": 1562,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "8854:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8839:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1112_storage",
														"typeString": "struct LoteStakingManager.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8815:45:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1565,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8878:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8878:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1567,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "8897:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo storage pointer"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nextHarvestUntil",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "8897:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8878:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1570,
												"nodeType": "Return",
												"src": "8871:47:7"
											}
										]
									},
									"functionSelector": "2e6c998d",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canHarvest",
									"nameLocation": "8705:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8724:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "8716:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8716:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "8738:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "8730:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8730:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8715:29:7"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "8793:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8793:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8792:6:7"
									},
									"scope": 2484,
									"src": "8696:230:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "9043:146:7",
										"statements": [
											{
												"assignments": [
													1576
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "9062:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "9054:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9054:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"expression": {
														"id": 1577,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "9071:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
															"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "9071:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9054:32:7"
											},
											{
												"body": {
													"id": 1594,
													"nodeType": "Block",
													"src": "9140:42:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1591,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "9166:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1590,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1733,
																	"src": "9155:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9155:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1593,
															"nodeType": "ExpressionStatement",
															"src": "9155:15:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1584,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "9119:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1585,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "9125:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9119:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1595,
												"initializationExpression": {
													"assignments": [
														1581
													],
													"declarations": [
														{
															"constant": false,
															"id": 1581,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "9110:3:7",
															"nodeType": "VariableDeclaration",
															"scope": 1595,
															"src": "9102:11:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1580,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9102:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1583,
													"initialValue": {
														"hexValue": "30",
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9116:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9102:15:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "9133:5:7",
														"subExpression": {
															"id": 1587,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "9135:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1589,
													"nodeType": "ExpressionStatement",
													"src": "9133:5:7"
												},
												"nodeType": "ForStatement",
												"src": "9097:85:7"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "9018:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9033:2:7"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9043:0:7"
									},
									"scope": 2484,
									"src": "9009:180:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "9306:1075:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1603,
																"name": "stakingMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "9325:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1604,
																"name": "MAX_STAKING_ALLOCATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "9342:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9325:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206d6f7265207374616b696e67",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9366:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3237ba8244ae492b3c06266a57c254aac412dbaf030a3c787404ac514698d9af",
																"typeString": "literal_string \"No more staking\""
															},
															"value": "No more staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3237ba8244ae492b3c06266a57c254aac412dbaf030a3c787404ac514698d9af",
																"typeString": "literal_string \"No more staking\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9317:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9317:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "9317:67:7"
											},
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9412:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "9395:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
															"typeString": "struct LoteStakingManager.PoolInfo"
														},
														"typeName": {
															"id": 1610,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1609,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "9395:8:7"
															},
															"referencedDeclaration": 1126,
															"src": "9395:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"baseExpression": {
														"id": 1612,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "9419:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
															"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1614,
													"indexExpression": {
														"id": 1613,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "9428:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9419:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
														"typeString": "struct LoteStakingManager.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9395:38:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1616,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9448:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "9448:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1618,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "9464:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1119,
														"src": "9464:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9448:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "9444:75:7",
												"trueBody": {
													"id": 1622,
													"nodeType": "Block",
													"src": "9486:33:7",
													"statements": [
														{
															"functionReturnParameters": 1601,
															"id": 1621,
															"nodeType": "Return",
															"src": "9501:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "9537:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "9529:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9529:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1631,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9579:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																		"typeString": "contract LoteStakingManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																		"typeString": "contract LoteStakingManager"
																	}
																],
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9571:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1629,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9571:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9571:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1626,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "9548:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																	"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1115,
															"src": "9548:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 179,
														"src": "9548:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9548:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9529:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1635,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "9600:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9612:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9600:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1638,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "9617:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																	"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																}
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allocPoint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1117,
															"src": "9617:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9636:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9617:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9600:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "9596:126:7",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "9639:83:7",
													"statements": [
														{
															"expression": {
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1643,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "9654:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																			"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																		}
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1119,
																	"src": "9654:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1646,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "9677:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "9677:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9654:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1649,
															"nodeType": "ExpressionStatement",
															"src": "9654:35:7"
														},
														{
															"functionReturnParameters": 1601,
															"id": 1650,
															"nodeType": "Return",
															"src": "9704:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1654
												],
												"declarations": [
													{
														"constant": false,
														"id": 1654,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "9740:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "9732:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1661,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1656,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "9767:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																	"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "9767:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1658,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9789:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "9789:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1655,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "9753:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9753:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9732:70:7"
											},
											{
												"assignments": [
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "positionReward",
														"nameLocation": "9821:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "9813:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1662,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9813:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1675,
												"initialValue": {
													"arguments": [
														{
															"id": 1673,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "9925:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1669,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "9894:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																			"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1117,
																	"src": "9894:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1666,
																			"name": "lotteryPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "9863:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1664,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "9838:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 969,
																		"src": "9838:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9838:41:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 969,
																"src": "9838:55:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9838:72:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 984,
														"src": "9838:86:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9838:103:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9813:128:7"
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1676,
														"name": "stakingMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "9954:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "3130",
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10026:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				}
																			],
																			"expression": {
																				"id": 1681,
																				"name": "positionReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1663,
																				"src": "10007:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 984,
																			"src": "10007:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10007:22:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1679,
																		"name": "positionReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "9988:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 939,
																	"src": "9988:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9988:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1677,
																"name": "stakingMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "9970:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 939,
															"src": "9970:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9970:61:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9954:77:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "9954:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1694,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10068:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																		"typeString": "contract LoteStakingManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																		"typeString": "contract LoteStakingManager"
																	}
																],
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10060:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1692,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10060:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10060:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1696,
															"name": "positionReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "10075:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1689,
															"name": "loteTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "10042:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
																"typeString": "contract ILoteTreasury"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1091,
														"src": "10042:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10042:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "10042:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1702,
															"name": "devAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "10162:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "3130",
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10193:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	}
																],
																"expression": {
																	"id": 1703,
																	"name": "positionReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "10174:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 984,
																"src": "10174:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10174:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1699,
															"name": "loteTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "10144:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
																"typeString": "contract ILoteTreasury"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1091,
														"src": "10144:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10144:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "10144:53:7"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1709,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "10208:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accPositionPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1121,
														"src": "10208:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1720,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "10307:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10297:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1715,
																				"name": "positionReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1663,
																				"src": "10278:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 969,
																			"src": "10278:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10278:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 984,
																	"src": "10278:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10278:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1712,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "10235:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																		"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accPositionPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1121,
																"src": "10235:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 939,
															"src": "10235:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10235:92:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10208:119:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "10208:119:7"
											},
											{
												"expression": {
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1725,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "10338:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1119,
														"src": "10338:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1728,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10361:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "10361:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10338:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "10338:35:7"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "9274:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "9293:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "9285:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9285:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9284:14:7"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9306:0:7"
									},
									"scope": 2484,
									"src": "9265:1116:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "10583:1388:7",
										"statements": [
											{
												"assignments": [
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "10611:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1928,
														"src": "10594:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
															"typeString": "struct LoteStakingManager.PoolInfo"
														},
														"typeName": {
															"id": 1745,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1744,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "10594:8:7"
															},
															"referencedDeclaration": 1126,
															"src": "10594:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"baseExpression": {
														"id": 1747,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "10618:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
															"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1749,
													"indexExpression": {
														"id": 1748,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "10627:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10618:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
														"typeString": "struct LoteStakingManager.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10594:38:7"
											},
											{
												"assignments": [
													1753
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10660:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1928,
														"src": "10643:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
															"typeString": "struct LoteStakingManager.UserInfo"
														},
														"typeName": {
															"id": 1752,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1751,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1112,
																"src": "10643:8:7"
															},
															"referencedDeclaration": 1112,
															"src": "10643:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1754,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "10667:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo storage ref))"
															}
														},
														"id": 1756,
														"indexExpression": {
															"id": 1755,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "10676:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10667:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$",
															"typeString": "mapping(address => struct LoteStakingManager.UserInfo storage ref)"
														}
													},
													"id": 1759,
													"indexExpression": {
														"expression": {
															"id": 1757,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10682:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10682:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10667:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1112_storage",
														"typeString": "struct LoteStakingManager.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10643:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1762,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "10715:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "10704:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10704:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "10704:16:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1765,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "10749:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10759:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10749:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1770,
																			"name": "lotteryReferral",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "10785:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
																				"typeString": "contract ILotteryReferral"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
																				"typeString": "contract ILotteryReferral"
																			}
																		],
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10777:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1768,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10777:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10777:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10813:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10805:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1772,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10805:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10805:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10777:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10749:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1778,
																"name": "_referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "10832:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10853:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10845:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10845:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10845:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10832:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10749:106:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1785,
															"name": "_referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "10872:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 1786,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10885:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10885:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10872:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10749:146:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1799,
												"nodeType": "IfStatement",
												"src": "10731:256:7",
												"trueBody": {
													"id": 1798,
													"nodeType": "Block",
													"src": "10907:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1793,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10953:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10953:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1795,
																		"name": "_referrer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "10965:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1790,
																		"name": "lotteryReferral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "10922:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
																			"typeString": "contract ILotteryReferral"
																		}
																	},
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "recordReferral",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2494,
																	"src": "10922:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) external"
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10922:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1797,
															"nodeType": "ExpressionStatement",
															"src": "10922:53:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1801,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "11024:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1800,
														"name": "payOrLockupPendingPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "10997:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10997:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "10997:32:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "11044:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11054:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11044:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "11040:794:7",
												"trueBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "11057:777:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1814,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11124:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11124:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11116:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1812,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11116:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11116:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1819,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "11162:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																					"typeString": "contract LoteStakingManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																					"typeString": "contract LoteStakingManager"
																				}
																			],
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11154:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11154:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11154:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1821,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "11186:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1807,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "11072:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																				"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																			}
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1115,
																		"src": "11072:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 221,
																	"src": "11072:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11072:136:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1823,
															"nodeType": "ExpressionStatement",
															"src": "11072:136:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1826,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1746,
																				"src": "11235:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																					"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																				}
																			},
																			"id": 1827,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lpToken",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1115,
																			"src": "11235:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11227:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1824,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11227:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11227:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1831,
																			"name": "lottery",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "11260:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ILotteryToken_$2575",
																				"typeString": "contract ILotteryToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ILotteryToken_$2575",
																				"typeString": "contract ILotteryToken"
																			}
																		],
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11252:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1829,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11252:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11252:16:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11227:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1854,
															"nodeType": "IfStatement",
															"src": "11223:242:7",
															"trueBody": {
																"id": 1853,
																"nodeType": "Block",
																"src": "11270:195:7",
																"statements": [
																	{
																		"assignments": [
																			1835
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1835,
																				"mutability": "mutable",
																				"name": "transferTax",
																				"nameLocation": "11297:11:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1853,
																				"src": "11289:19:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1834,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11289:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1845,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "3130303030",
																					"id": 1843,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11390:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 1838,
																									"name": "lottery",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1129,
																									"src": "11341:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_ILotteryToken_$2575",
																										"typeString": "contract ILotteryToken"
																									}
																								},
																								"id": 1839,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "transferTaxRate",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2551,
																								"src": "11341:23:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																									"typeString": "function () view external returns (uint16)"
																								}
																							},
																							"id": 1840,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11341:25:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						],
																						"expression": {
																							"id": 1836,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1737,
																							"src": "11311:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1837,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 969,
																						"src": "11311:29:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1841,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11311:56:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 984,
																				"src": "11311:78:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11311:85:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11289:107:7"
																	},
																	{
																		"expression": {
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1846,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1737,
																				"src": "11415:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1849,
																						"name": "transferTax",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1835,
																						"src": "11437:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1847,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1737,
																						"src": "11425:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1848,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 954,
																					"src": "11425:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11425:24:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11415:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1852,
																		"nodeType": "ExpressionStatement",
																		"src": "11415:34:7"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1855,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "11483:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																			"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																		}
																	},
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "depositFeeBP",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1123,
																	"src": "11483:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11503:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11483:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1903,
																"nodeType": "Block",
																"src": "11750:73:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1893,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "11769:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																						"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																					}
																				},
																				"id": 1895,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1105,
																				"src": "11769:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1899,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1737,
																						"src": "11799:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1896,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1753,
																							"src": "11783:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																								"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																							}
																						},
																						"id": 1897,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1105,
																						"src": "11783:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1898,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 939,
																					"src": "11783:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11783:24:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11769:38:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1902,
																		"nodeType": "ExpressionStatement",
																		"src": "11769:38:7"
																	}
																]
															},
															"id": 1904,
															"nodeType": "IfStatement",
															"src": "11479:344:7",
															"trueBody": {
																"id": 1892,
																"nodeType": "Block",
																"src": "11506:238:7",
																"statements": [
																	{
																		"assignments": [
																			1860
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1860,
																				"mutability": "mutable",
																				"name": "depositFee",
																				"nameLocation": "11533:10:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1892,
																				"src": "11525:18:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1859,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11525:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1869,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "3130303030",
																					"id": 1867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11581:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1863,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1746,
																								"src": "11558:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																									"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																								}
																							},
																							"id": 1864,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "depositFeeBP",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1123,
																							"src": "11558:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						],
																						"expression": {
																							"id": 1861,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1737,
																							"src": "11546:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1862,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 969,
																						"src": "11546:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1865,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11546:30:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 984,
																				"src": "11546:34:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11546:41:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11525:62:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1875,
																					"name": "feeAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "11632:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1876,
																					"name": "depositFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "11644:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1870,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1746,
																						"src": "11606:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																							"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																						}
																					},
																					"id": 1873,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lpToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1115,
																					"src": "11606:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 253,
																				"src": "11606:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11606:49:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1878,
																		"nodeType": "ExpressionStatement",
																		"src": "11606:49:7"
																	},
																	{
																		"expression": {
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1879,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1753,
																					"src": "11674:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																						"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																					}
																				},
																				"id": 1881,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1105,
																				"src": "11674:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1888,
																						"name": "depositFee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1860,
																						"src": "11717:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1885,
																								"name": "_amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1737,
																								"src": "11704:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"id": 1882,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1753,
																									"src": "11688:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																										"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																									}
																								},
																								"id": 1883,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1105,
																								"src": "11688:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1884,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 939,
																							"src": "11688:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1886,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11688:24:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1887,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 954,
																					"src": "11688:28:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11688:40:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11674:54:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1891,
																		"nodeType": "ExpressionStatement",
																		"src": "11674:54:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1907,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "11844:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo storage pointer"
															}
														},
														"id": 1909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "11844:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11908:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1913,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "11878:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																				"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																			}
																		},
																		"id": 1914,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPositionPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1121,
																		"src": "11878:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1910,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1753,
																			"src": "11862:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																				"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																			}
																		},
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1105,
																		"src": "11862:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 969,
																	"src": "11862:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11862:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 984,
															"src": "11862:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11862:51:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11844:69:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "11844:69:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1922,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11937:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11937:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1924,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "11949:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1925,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "11955:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1921,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "11929:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11929:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1927,
												"nodeType": "EmitStatement",
												"src": "11924:39:7"
											}
										]
									},
									"functionSelector": "8dbdbe6d",
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1742,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1741,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "10570:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10570:12:7"
										}
									],
									"name": "deposit",
									"nameLocation": "10471:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "10497:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "10489:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10520:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "10512:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10512:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "_referrer",
												"nameLocation": "10546:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "10538:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10538:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10478:84:7"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10583:0:7"
									},
									"scope": 2484,
									"src": "10462:1509:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "12100:545:7",
										"statements": [
											{
												"assignments": [
													1940
												],
												"declarations": [
													{
														"constant": false,
														"id": 1940,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "12128:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "12111:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
															"typeString": "struct LoteStakingManager.PoolInfo"
														},
														"typeName": {
															"id": 1939,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1938,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "12111:8:7"
															},
															"referencedDeclaration": 1126,
															"src": "12111:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1944,
												"initialValue": {
													"baseExpression": {
														"id": 1941,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "12135:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
															"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1943,
													"indexExpression": {
														"id": 1942,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "12144:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12135:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
														"typeString": "struct LoteStakingManager.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12111:38:7"
											},
											{
												"assignments": [
													1947
												],
												"declarations": [
													{
														"constant": false,
														"id": 1947,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12177:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "12160:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
															"typeString": "struct LoteStakingManager.UserInfo"
														},
														"typeName": {
															"id": 1946,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1945,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1112,
																"src": "12160:8:7"
															},
															"referencedDeclaration": 1112,
															"src": "12160:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1954,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1948,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "12184:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo storage ref))"
															}
														},
														"id": 1950,
														"indexExpression": {
															"id": 1949,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "12193:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12184:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$",
															"typeString": "mapping(address => struct LoteStakingManager.UserInfo storage ref)"
														}
													},
													"id": 1953,
													"indexExpression": {
														"expression": {
															"id": 1951,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12199:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12184:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1112_storage",
														"typeString": "struct LoteStakingManager.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12160:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1956,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "12229:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																		"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1105,
																"src": "12229:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1958,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "12244:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12229:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12253:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12221:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12221:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "12221:53:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1964,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "12296:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1963,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "12285:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12285:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "12285:16:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1968,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "12339:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1967,
														"name": "payOrLockupPendingPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "12312:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12312:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "12312:32:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1971,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "12359:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12369:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12359:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1998,
												"nodeType": "IfStatement",
												"src": "12355:152:7",
												"trueBody": {
													"id": 1997,
													"nodeType": "Block",
													"src": "12372:135:7",
													"statements": [
														{
															"expression": {
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1974,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "12387:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																			"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																		}
																	},
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1105,
																	"src": "12387:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1980,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1933,
																			"src": "12417:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1977,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "12401:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																					"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																				}
																			},
																			"id": 1978,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1105,
																			"src": "12401:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "12401:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12401:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12387:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1983,
															"nodeType": "ExpressionStatement",
															"src": "12387:38:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1991,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "12474:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "12474:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12466:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1989,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12466:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12466:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1994,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "12487:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1984,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1940,
																			"src": "12440:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																				"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																			}
																		},
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1115,
																		"src": "12440:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "12440:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12440:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1996,
															"nodeType": "ExpressionStatement",
															"src": "12440:55:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1999,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "12517:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo storage pointer"
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "12517:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12581:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2005,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1940,
																			"src": "12551:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																				"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																			}
																		},
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPositionPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1121,
																		"src": "12551:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2002,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1947,
																			"src": "12535:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																				"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																			}
																		},
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1105,
																		"src": "12535:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 969,
																	"src": "12535:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12535:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 984,
															"src": "12535:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12535:51:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12517:69:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2012,
												"nodeType": "ExpressionStatement",
												"src": "12517:69:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2014,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12611:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12611:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2016,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "12623:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2017,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "12629:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2013,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "12602:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12602:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2019,
												"nodeType": "EmitStatement",
												"src": "12597:40:7"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1936,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1935,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "12087:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "12087:12:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "12040:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "12057:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "12049:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12049:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12071:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "12063:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12063:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12048:31:7"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12100:0:7"
									},
									"scope": 2484,
									"src": "12031:614:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "12777:407:7",
										"statements": [
											{
												"assignments": [
													2030
												],
												"declarations": [
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "12805:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "12788:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
															"typeString": "struct LoteStakingManager.PoolInfo"
														},
														"typeName": {
															"id": 2029,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2028,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "12788:8:7"
															},
															"referencedDeclaration": 1126,
															"src": "12788:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2034,
												"initialValue": {
													"baseExpression": {
														"id": 2031,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "12812:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
															"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2033,
													"indexExpression": {
														"id": 2032,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "12821:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12812:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
														"typeString": "struct LoteStakingManager.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12788:38:7"
											},
											{
												"assignments": [
													2037
												],
												"declarations": [
													{
														"constant": false,
														"id": 2037,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12854:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "12837:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
															"typeString": "struct LoteStakingManager.UserInfo"
														},
														"typeName": {
															"id": 2036,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2035,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1112,
																"src": "12837:8:7"
															},
															"referencedDeclaration": 1112,
															"src": "12837:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2044,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2038,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "12861:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo storage ref))"
															}
														},
														"id": 2040,
														"indexExpression": {
															"id": 2039,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "12870:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12861:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$",
															"typeString": "mapping(address => struct LoteStakingManager.UserInfo storage ref)"
														}
													},
													"id": 2043,
													"indexExpression": {
														"expression": {
															"id": 2041,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12876:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12876:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12861:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1112_storage",
														"typeString": "struct LoteStakingManager.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12837:50:7"
											},
											{
												"assignments": [
													2046
												],
												"declarations": [
													{
														"constant": false,
														"id": 2046,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "12906:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "12898:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12898:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2049,
												"initialValue": {
													"expression": {
														"id": 2047,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "12915:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
															"typeString": "struct LoteStakingManager.UserInfo storage pointer"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1105,
													"src": "12915:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12898:28:7"
											},
											{
												"expression": {
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2050,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "12937:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo storage pointer"
															}
														},
														"id": 2052,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "12937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12951:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12937:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "12937:15:7"
											},
											{
												"expression": {
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2056,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "12963:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo storage pointer"
															}
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "12963:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12981:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12963:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "12963:19:7"
											},
											{
												"expression": {
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2062,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "12993:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo storage pointer"
															}
														},
														"id": 2064,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardLockedUp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1109,
														"src": "12993:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13015:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12993:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "12993:23:7"
											},
											{
												"expression": {
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2068,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "13027:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo storage pointer"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nextHarvestUntil",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "13027:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13051:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13027:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2073,
												"nodeType": "ExpressionStatement",
												"src": "13027:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2081,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "13097:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "13097:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13089:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2079,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13089:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13089:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2084,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "13110:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2074,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "13063:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																	"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1115,
															"src": "13063:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "13063:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13063:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "13063:54:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2088,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13151:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13151:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2090,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "13163:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2091,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "13169:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2087,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "13133:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13133:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2093,
												"nodeType": "EmitStatement",
												"src": "13128:48:7"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2025,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "12764:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "12764:12:7"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "12725:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "12751:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "12743:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12743:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12742:14:7"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12777:0:7"
									},
									"scope": 2484,
									"src": "12716:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "13292:1331:7",
										"statements": [
											{
												"assignments": [
													2102
												],
												"declarations": [
													{
														"constant": false,
														"id": 2102,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "13320:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2241,
														"src": "13303:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
															"typeString": "struct LoteStakingManager.PoolInfo"
														},
														"typeName": {
															"id": 2101,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2100,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "13303:8:7"
															},
															"referencedDeclaration": 1126,
															"src": "13303:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																"typeString": "struct LoteStakingManager.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2106,
												"initialValue": {
													"baseExpression": {
														"id": 2103,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "13327:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1126_storage_$dyn_storage",
															"typeString": "struct LoteStakingManager.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2105,
													"indexExpression": {
														"id": 2104,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "13336:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13327:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1126_storage",
														"typeString": "struct LoteStakingManager.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13303:38:7"
											},
											{
												"assignments": [
													2109
												],
												"declarations": [
													{
														"constant": false,
														"id": 2109,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "13369:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2241,
														"src": "13352:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
															"typeString": "struct LoteStakingManager.UserInfo"
														},
														"typeName": {
															"id": 2108,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2107,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1112,
																"src": "13352:8:7"
															},
															"referencedDeclaration": 1112,
															"src": "13352:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2116,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2110,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "13376:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct LoteStakingManager.UserInfo storage ref))"
															}
														},
														"id": 2112,
														"indexExpression": {
															"id": 2111,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "13385:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13376:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1112_storage_$",
															"typeString": "mapping(address => struct LoteStakingManager.UserInfo storage ref)"
														}
													},
													"id": 2115,
													"indexExpression": {
														"expression": {
															"id": 2113,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "13391:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "13391:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13376:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1112_storage",
														"typeString": "struct LoteStakingManager.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13352:50:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2117,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "13419:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																"typeString": "struct LoteStakingManager.UserInfo storage pointer"
															}
														},
														"id": 2118,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nextHarvestUntil",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "13419:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13444:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13419:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2133,
												"nodeType": "IfStatement",
												"src": "13415:124:7",
												"trueBody": {
													"id": 2132,
													"nodeType": "Block",
													"src": "13447:92:7",
													"statements": [
														{
															"expression": {
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2121,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "13462:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																			"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																		}
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "nextHarvestUntil",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1111,
																	"src": "13462:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2127,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2102,
																				"src": "13506:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																					"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																				}
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "harvestInterval",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1125,
																			"src": "13506:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2124,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "13486:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "13486:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 939,
																		"src": "13486:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13486:41:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13462:65:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2131,
															"nodeType": "ExpressionStatement",
															"src": "13462:65:7"
														}
													]
												}
											},
											{
												"assignments": [
													2135
												],
												"declarations": [
													{
														"constant": false,
														"id": 2135,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "13559:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 2241,
														"src": "13551:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13551:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2149,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2146,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "13665:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																	"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1107,
															"src": "13665:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13645:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2139,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2102,
																				"src": "13605:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																					"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																				}
																			},
																			"id": 2140,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPositionPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1121,
																			"src": "13605:24:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2136,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2109,
																				"src": "13569:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																					"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																				}
																			},
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1105,
																			"src": "13569:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 969,
																		"src": "13569:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13569:61:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 984,
																"src": "13569:75:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13569:81:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "13569:95:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13569:112:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13551:130:7"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 2151,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "13707:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13713:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13713:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2150,
														"name": "canHarvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "13696:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
															"typeString": "function (uint256,address) view returns (bool)"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13696:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2211,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "14390:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14400:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14390:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2239,
													"nodeType": "IfStatement",
													"src": "14386:230:7",
													"trueBody": {
														"id": 2238,
														"nodeType": "Block",
														"src": "14403:213:7",
														"statements": [
															{
																"expression": {
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 2214,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2109,
																			"src": "14418:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																				"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																			}
																		},
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "rewardLockedUp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1109,
																		"src": "14418:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2220,
																				"name": "pending",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2135,
																				"src": "14464:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"id": 2217,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2109,
																					"src": "14440:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																						"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																					}
																				},
																				"id": 2218,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "rewardLockedUp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1109,
																				"src": "14440:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 939,
																			"src": "14440:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14440:32:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14418:54:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2223,
																"nodeType": "ExpressionStatement",
																"src": "14418:54:7"
															},
															{
																"expression": {
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2224,
																		"name": "totalLockedUpRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "14487:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2227,
																				"name": "pending",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2135,
																				"src": "14535:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2225,
																				"name": "totalLockedUpRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "14510:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 939,
																			"src": "14510:24:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14510:33:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14487:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2230,
																"nodeType": "ExpressionStatement",
																"src": "14487:56:7"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2232,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "14578:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "14578:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2234,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2097,
																			"src": "14590:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2235,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "14596:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2231,
																		"name": "RewardLockedUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "14563:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256,uint256)"
																		}
																	},
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14563:41:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2237,
																"nodeType": "EmitStatement",
																"src": "14558:46:7"
															}
														]
													}
												},
												"id": 2240,
												"nodeType": "IfStatement",
												"src": "13692:924:7",
												"trueBody": {
													"id": 2210,
													"nodeType": "Block",
													"src": "13726:654:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2155,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "13745:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13755:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13745:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2158,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2109,
																			"src": "13760:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																				"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																			}
																		},
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardLockedUp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1109,
																		"src": "13760:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13782:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13760:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "13745:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2209,
															"nodeType": "IfStatement",
															"src": "13741:628:7",
															"trueBody": {
																"id": 2208,
																"nodeType": "Block",
																"src": "13785:584:7",
																"statements": [
																	{
																		"assignments": [
																			2164
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2164,
																				"mutability": "mutable",
																				"name": "totalRewards",
																				"nameLocation": "13812:12:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 2208,
																				"src": "13804:20:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2163,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13804:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2170,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2167,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2109,
																						"src": "13839:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																							"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																						}
																					},
																					"id": 2168,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "rewardLockedUp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1109,
																					"src": "13839:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2165,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2135,
																					"src": "13827:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 939,
																				"src": "13827:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13827:32:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13804:55:7"
																	},
																	{
																		"expression": {
																			"id": 2177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2171,
																				"name": "totalLockedUpRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "13913:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2174,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2109,
																							"src": "13983:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																								"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																							}
																						},
																						"id": 2175,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "rewardLockedUp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1109,
																						"src": "13983:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2172,
																						"name": "totalLockedUpRewards",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1173,
																						"src": "13936:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 954,
																					"src": "13936:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13936:85:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13913:108:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2178,
																		"nodeType": "ExpressionStatement",
																		"src": "13913:108:7"
																	},
																	{
																		"expression": {
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2179,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2109,
																					"src": "14040:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																						"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																					}
																				},
																				"id": 2181,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rewardLockedUp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1109,
																				"src": "14040:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14062:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "14040:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2184,
																		"nodeType": "ExpressionStatement",
																		"src": "14040:23:7"
																	},
																	{
																		"expression": {
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2185,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2109,
																					"src": "14082:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1112_storage_ptr",
																						"typeString": "struct LoteStakingManager.UserInfo storage pointer"
																					}
																				},
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "nextHarvestUntil",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1111,
																				"src": "14082:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2191,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2102,
																							"src": "14148:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1126_storage_ptr",
																								"typeString": "struct LoteStakingManager.PoolInfo storage pointer"
																							}
																						},
																						"id": 2192,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "harvestInterval",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1125,
																						"src": "14148:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2188,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "14106:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 2189,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "14106:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2190,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 939,
																					"src": "14106:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14106:81:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14082:105:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2195,
																		"nodeType": "ExpressionStatement",
																		"src": "14082:105:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2197,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "14262:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "14262:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2199,
																					"name": "totalRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2164,
																					"src": "14274:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2196,
																				"name": "safePositionTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2280,
																				"src": "14241:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14241:46:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2201,
																		"nodeType": "ExpressionStatement",
																		"src": "14241:46:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2203,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "14328:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2204,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "14328:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2205,
																					"name": "totalRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2164,
																					"src": "14340:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2202,
																				"name": "payReferralCommission",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2483,
																				"src": "14306:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14306:47:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2207,
																		"nodeType": "ExpressionStatement",
																		"src": "14306:47:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payOrLockupPendingPosition",
									"nameLocation": "13242:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "13277:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "13269:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13269:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13268:14:7"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13292:0:7"
									},
									"scope": 2484,
									"src": "13233:1390:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2279,
										"nodeType": "Block",
										"src": "14814:234:7",
										"statements": [
											{
												"assignments": [
													2250
												],
												"declarations": [
													{
														"constant": false,
														"id": 2250,
														"mutability": "mutable",
														"name": "positionBal",
														"nameLocation": "14833:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 2279,
														"src": "14825:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14825:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2258,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2255,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "14873:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																		"typeString": "contract LoteStakingManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																		"typeString": "contract LoteStakingManager"
																	}
																],
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14865:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2253,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14865:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14865:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2251,
															"name": "lottery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "14847:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILotteryToken_$2575",
																"typeString": "contract ILotteryToken"
															}
														},
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2558,
														"src": "14847:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14847:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14825:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2259,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "14894:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2260,
														"name": "positionBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2250,
														"src": "14904:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14894:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2277,
													"nodeType": "Block",
													"src": "14984:57:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2273,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2244,
																		"src": "15016:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2274,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2246,
																		"src": "15021:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2270,
																		"name": "lottery",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "14999:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILotteryToken_$2575",
																			"typeString": "contract ILotteryToken"
																		}
																	},
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2567,
																	"src": "14999:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14999:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2276,
															"nodeType": "ExpressionStatement",
															"src": "14999:30:7"
														}
													]
												},
												"id": 2278,
												"nodeType": "IfStatement",
												"src": "14890:151:7",
												"trueBody": {
													"id": 2269,
													"nodeType": "Block",
													"src": "14917:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2265,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2244,
																		"src": "14949:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2266,
																		"name": "positionBal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2250,
																		"src": "14954:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2262,
																		"name": "lottery",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "14932:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILotteryToken_$2575",
																			"typeString": "contract ILotteryToken"
																		}
																	},
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2567,
																	"src": "14932:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14932:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2268,
															"nodeType": "ExpressionStatement",
															"src": "14932:34:7"
														}
													]
												}
											}
										]
									},
									"id": 2280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePositionTransfer",
									"nameLocation": "14754:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "14783:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "14775:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14775:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "14796:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "14788:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14788:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14774:30:7"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:7"
									},
									"scope": 2484,
									"src": "14745:303:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2307,
										"nodeType": "Block",
										"src": "15155:183:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2286,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15174:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15174:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2288,
																"name": "devAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "15188:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15174:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574446576416464726573733a20464f5242494444454e",
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15200:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2135bd7a71e1ea126d853a1cc8c34707e4a82417f6097a0ca255ae1f628b3c99",
																"typeString": "literal_string \"setDevAddress: FORBIDDEN\""
															},
															"value": "setDevAddress: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2135bd7a71e1ea126d853a1cc8c34707e4a82417f6097a0ca255ae1f628b3c99",
																"typeString": "literal_string \"setDevAddress: FORBIDDEN\""
															}
														],
														"id": 2285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15166:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15166:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2292,
												"nodeType": "ExpressionStatement",
												"src": "15166:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2294,
																"name": "_devAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "15246:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15269:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15261:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2295,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15261:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15261:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15246:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574446576416464726573733a205a45524f",
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15273:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ccf24bd4623988e8895731fc5360356fd4ddc1cf9889b4a2ccd0c3b70522c65",
																"typeString": "literal_string \"setDevAddress: ZERO\""
															},
															"value": "setDevAddress: ZERO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ccf24bd4623988e8895731fc5360356fd4ddc1cf9889b4a2ccd0c3b70522c65",
																"typeString": "literal_string \"setDevAddress: ZERO\""
															}
														],
														"id": 2293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15238:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15238:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "ExpressionStatement",
												"src": "15238:57:7"
											},
											{
												"expression": {
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2303,
														"name": "devAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "15306:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2304,
														"name": "_devAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "15319:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15306:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2306,
												"nodeType": "ExpressionStatement",
												"src": "15306:24:7"
											}
										]
									},
									"functionSelector": "d0d41fe1",
									"id": 2308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDevAddress",
									"nameLocation": "15113:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "_devAddress",
												"nameLocation": "15135:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "15127:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15127:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15126:21:7"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15155:0:7"
									},
									"scope": 2484,
									"src": "15104:234:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2335,
										"nodeType": "Block",
										"src": "15397:183:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2314,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15416:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15416:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2316,
																"name": "feeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "15430:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15416:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574466565416464726573733a20464f5242494444454e",
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15442:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4b2eb0827e71ee18958471ff450fe4680022dd427d5a87a7a424434363e4c1a",
																"typeString": "literal_string \"setFeeAddress: FORBIDDEN\""
															},
															"value": "setFeeAddress: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4b2eb0827e71ee18958471ff450fe4680022dd427d5a87a7a424434363e4c1a",
																"typeString": "literal_string \"setFeeAddress: FORBIDDEN\""
															}
														],
														"id": 2313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15408:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15408:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "15408:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2322,
																"name": "_feeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "15488:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15511:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15503:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2323,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15503:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15503:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15488:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574466565416464726573733a205a45524f",
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15515:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3afb489d0fdedbdd1ea85eac9ddbe1364eb6d65afbae3ba5fa8e9d567276c114",
																"typeString": "literal_string \"setFeeAddress: ZERO\""
															},
															"value": "setFeeAddress: ZERO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3afb489d0fdedbdd1ea85eac9ddbe1364eb6d65afbae3ba5fa8e9d567276c114",
																"typeString": "literal_string \"setFeeAddress: ZERO\""
															}
														],
														"id": 2321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15480:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15480:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "15480:57:7"
											},
											{
												"expression": {
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2331,
														"name": "feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "15548:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2332,
														"name": "_feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "15561:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15548:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2334,
												"nodeType": "ExpressionStatement",
												"src": "15548:24:7"
											}
										]
									},
									"functionSelector": "8705fcd4",
									"id": 2336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeAddress",
									"nameLocation": "15355:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "_feeAddress",
												"nameLocation": "15377:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "15369:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15369:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15368:21:7"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15397:0:7"
									},
									"scope": 2484,
									"src": "15346:234:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "15784:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2343,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "15795:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15795:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2345,
												"nodeType": "ExpressionStatement",
												"src": "15795:17:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2347,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15848:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15848:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2349,
															"name": "lotteryPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "15860:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2350,
															"name": "_lotteryPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "15877:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2346,
														"name": "EmissionRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "15828:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15828:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2352,
												"nodeType": "EmitStatement",
												"src": "15823:71:7"
											},
											{
												"expression": {
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2353,
														"name": "lotteryPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "15905:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2354,
														"name": "_lotteryPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "15923:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15905:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2356,
												"nodeType": "ExpressionStatement",
												"src": "15905:34:7"
											}
										]
									},
									"functionSelector": "0ba84cd2",
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2340,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "15774:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "15774:9:7"
										}
									],
									"name": "updateEmissionRate",
									"nameLocation": "15722:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "_lotteryPerBlock",
												"nameLocation": "15749:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "15741:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15741:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15740:26:7"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15784:0:7"
									},
									"scope": 2484,
									"src": "15713:234:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "16126:53:7",
										"statements": [
											{
												"expression": {
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2366,
														"name": "lotteryReferral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "16137:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
															"typeString": "contract ILotteryReferral"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2367,
														"name": "_lotteryReferral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2361,
														"src": "16155:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
															"typeString": "contract ILotteryReferral"
														}
													},
													"src": "16137:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
														"typeString": "contract ILotteryReferral"
													}
												},
												"id": 2369,
												"nodeType": "ExpressionStatement",
												"src": "16137:34:7"
											}
										]
									},
									"functionSelector": "2f1536b8",
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2363,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "16111:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "16111:9:7"
										}
									],
									"name": "setPositionReferral",
									"nameLocation": "16031:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "_lotteryReferral",
												"nameLocation": "16068:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "16051:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
													"typeString": "contract ILotteryReferral"
												},
												"typeName": {
													"id": 2360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2359,
														"name": "ILotteryReferral",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2511,
														"src": "16051:16:7"
													},
													"referencedDeclaration": 2511,
													"src": "16051:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
														"typeString": "contract ILotteryReferral"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16050:35:7"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16126:0:7"
									},
									"scope": 2484,
									"src": "16022:157:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "16347:259:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2379,
																"name": "_referralCommissionRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "16380:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2380,
																"name": "MAXIMUM_REFERRAL_COMMISSION_RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "16407:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "16380:59:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574526566657272616c436f6d6d697373696f6e526174653a20696e76616c696420726566657272616c20636f6d6d697373696f6e207261746520626173697320706f696e7473",
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16454:74:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10056cb1bd3d8ee5530a7851844bdbf3666d1f6a5ce16135570259449183c8ef",
																"typeString": "literal_string \"setReferralCommissionRate: invalid referral commission rate basis points\""
															},
															"value": "setReferralCommissionRate: invalid referral commission rate basis points"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10056cb1bd3d8ee5530a7851844bdbf3666d1f6a5ce16135570259449183c8ef",
																"typeString": "literal_string \"setReferralCommissionRate: invalid referral commission rate basis points\""
															}
														],
														"id": 2378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16358:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16358:181:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2384,
												"nodeType": "ExpressionStatement",
												"src": "16358:181:7"
											},
											{
												"expression": {
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2385,
														"name": "referralCommissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "16550:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2386,
														"name": "_referralCommissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "16575:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16550:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2388,
												"nodeType": "ExpressionStatement",
												"src": "16550:48:7"
											}
										]
									},
									"functionSelector": "55dbc826",
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2375,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "16332:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "16332:9:7"
										}
									],
									"name": "setReferralCommissionRate",
									"nameLocation": "16249:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "_referralCommissionRate",
												"nameLocation": "16282:23:7",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "16275:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2372,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16275:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16274:32:7"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16347:0:7"
									},
									"scope": 2484,
									"src": "16240:366:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2482,
										"nodeType": "Block",
										"src": "16759:859:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2399,
																	"name": "lotteryReferral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "16796:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
																		"typeString": "contract ILotteryReferral"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
																		"typeString": "contract ILotteryReferral"
																	}
																],
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16788:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2397,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16788:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16788:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16824:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16816:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2401,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16816:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16816:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16788:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 2408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2406,
															"name": "referralCommissionRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "16830:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16855:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16830:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16788:68:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2481,
												"nodeType": "IfStatement",
												"src": "16770:841:7",
												"trueBody": {
													"id": 2480,
													"nodeType": "Block",
													"src": "16868:743:7",
													"statements": [
														{
															"assignments": [
																2411
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2411,
																	"mutability": "mutable",
																	"name": "referrer",
																	"nameLocation": "16891:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2480,
																	"src": "16883:16:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2410,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16883:7:7",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2416,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2414,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "16930:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2412,
																		"name": "lotteryReferral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "16902:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
																			"typeString": "contract ILotteryReferral"
																		}
																	},
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getReferrer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2510,
																	"src": "16902:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
																		"typeString": "function (address) view external returns (address)"
																	}
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16902:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16883:53:7"
														},
														{
															"assignments": [
																2418
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2418,
																	"mutability": "mutable",
																	"name": "commissionAmount",
																	"nameLocation": "16959:16:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2480,
																	"src": "16951:24:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2417,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16951:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2426,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "3130303030",
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17037:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2421,
																				"name": "referralCommissionRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1181,
																				"src": "16991:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			],
																			"expression": {
																				"id": 2419,
																				"name": "_pending",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "16978:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 969,
																			"src": "16978:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16978:36:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 984,
																	"src": "16978:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16978:79:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16951:106:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2427,
																		"name": "referrer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2411,
																		"src": "17078:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17098:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17090:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2428,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17090:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17090:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "17078:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2433,
																		"name": "commissionAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2418,
																		"src": "17104:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17123:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "17104:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17078:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2479,
															"nodeType": "IfStatement",
															"src": "17074:526:7",
															"trueBody": {
																"id": 2478,
																"nodeType": "Block",
																"src": "17126:474:7",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 2441,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "17174:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																									"typeString": "contract LoteStakingManager"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																									"typeString": "contract LoteStakingManager"
																								}
																							],
																							"id": 2440,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "17166:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 2439,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "17166:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2442,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "17166:13:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 2437,
																						"name": "lottery",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1129,
																						"src": "17148:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ILotteryToken_$2575",
																							"typeString": "contract ILotteryToken"
																						}
																					},
																					"id": 2438,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balanceOf",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2558,
																					"src": "17148:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17148:32:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2444,
																				"name": "commissionAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2418,
																				"src": "17183:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17148:51:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2457,
																		"nodeType": "IfStatement",
																		"src": "17145:148:7",
																		"trueBody": {
																			"id": 2456,
																			"nodeType": "Block",
																			"src": "17200:93:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 2451,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "17249:4:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																											"typeString": "contract LoteStakingManager"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_LoteStakingManager_$2484",
																											"typeString": "contract LoteStakingManager"
																										}
																									],
																									"id": 2450,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "17241:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 2449,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "17241:7:7",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2452,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17241:13:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2453,
																								"name": "commissionAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2418,
																								"src": "17256:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 2446,
																								"name": "loteTreasury",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1132,
																								"src": "17223:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ILoteTreasury_$1092",
																									"typeString": "contract ILoteTreasury"
																								}
																							},
																							"id": 2448,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1091,
																							"src": "17223:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256) external"
																							}
																						},
																						"id": 2454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "17223:50:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2455,
																					"nodeType": "ExpressionStatement",
																					"src": "17223:50:7"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2461,
																					"name": "referrer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2411,
																					"src": "17328:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2462,
																					"name": "commissionAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2418,
																					"src": "17338:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2458,
																					"name": "lottery",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1129,
																					"src": "17311:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ILotteryToken_$2575",
																						"typeString": "contract ILotteryToken"
																					}
																				},
																				"id": 2460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2567,
																				"src": "17311:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17311:44:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2464,
																		"nodeType": "ExpressionStatement",
																		"src": "17311:44:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2468,
																					"name": "referrer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2411,
																					"src": "17437:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2469,
																					"name": "commissionAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2418,
																					"src": "17468:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2465,
																					"name": "lotteryReferral",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1178,
																					"src": "17374:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ILotteryReferral_$2511",
																						"typeString": "contract ILotteryReferral"
																					}
																				},
																				"id": 2467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "recordReferralCommission",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2502,
																				"src": "17374:40:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) external"
																				}
																			},
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17374:129:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2471,
																		"nodeType": "ExpressionStatement",
																		"src": "17374:129:7"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2473,
																					"name": "_user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2392,
																					"src": "17550:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2474,
																					"name": "referrer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2411,
																					"src": "17557:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2475,
																					"name": "commissionAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2418,
																					"src": "17567:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2472,
																				"name": "ReferralCommissionPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1224,
																				"src": "17527:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17527:57:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2477,
																		"nodeType": "EmitStatement",
																		"src": "17522:62:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payReferralCommission",
									"nameLocation": "16695:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "16725:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "16717:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16717:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "_pending",
												"nameLocation": "16740:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "16732:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16732:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16716:33:7"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16759:0:7"
									},
									"scope": 2484,
									"src": "16686:932:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2485,
							"src": "949:16672:7",
							"usedErrors": []
						}
					],
					"src": "39:17582:7"
				},
				"id": 7
			},
			"contracts/interfaces/ILotteryReferral.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ILotteryReferral.sol",
					"exportedSymbols": {
						"ILotteryReferral": [
							2511
						]
					},
					"id": 2512,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2486,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2511,
							"linearizedBaseContracts": [
								2511
							],
							"name": "ILotteryReferral",
							"nameLocation": "82:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "111:42:8",
										"text": " @dev Record referral."
									},
									"functionSelector": "0c7f7b6b",
									"id": 2494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recordReferral",
									"nameLocation": "168:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "191:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "183:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "183:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "205:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "197:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "182:32:8"
									},
									"returnParameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:0:8"
									},
									"scope": 2511,
									"src": "159:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "232:53:8",
										"text": " @dev Record referral commission."
									},
									"functionSelector": "dc1694b8",
									"id": 2502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recordReferralCommission",
									"nameLocation": "300:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "333:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "325:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "commission",
												"nameLocation": "351:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "343:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:38:8"
									},
									"returnParameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:8"
									},
									"scope": 2511,
									"src": "291:81:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "380:74:8",
										"text": " @dev Get the referrer address that referred the user."
									},
									"functionSelector": "4a9fefc7",
									"id": 2510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReferrer",
									"nameLocation": "469:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "489:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "481:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:14:8"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "518:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:9:8"
									},
									"scope": 2511,
									"src": "460:67:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2512,
							"src": "72:458:8",
							"usedErrors": []
						}
					],
					"src": "37:493:8"
				},
				"id": 8
			},
			"contracts/interfaces/ILotteryToken.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ILotteryToken.sol",
					"exportedSymbols": {
						"ILotteryToken": [
							2575
						]
					},
					"id": 2576,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2513,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2575,
							"linearizedBaseContracts": [
								2575
							],
							"name": "ILotteryToken",
							"nameLocation": "82:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "400d6844",
									"id": 2518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BASE_MINT",
									"nameLocation": "112:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "121:2:9"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "147:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "146:9:9"
									},
									"scope": 2575,
									"src": "103:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 2525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "171:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "184:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "176:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "202:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "194:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:34:9"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:9"
									},
									"scope": 2575,
									"src": "162:57:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 2530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "234:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "244:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "239:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "239:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:13:9"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "260:0:9"
									},
									"scope": 2575,
									"src": "225:36:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30d8ce9e",
									"id": 2539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "treasuryTransfer",
									"nameLocation": "276:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "310:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "293:27:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2531,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "293:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2532,
													"nodeType": "ArrayTypeName",
													"src": "293:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "339:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "322:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2534,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2535,
													"nodeType": "ArrayTypeName",
													"src": "322:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:55:9"
									},
									"returnParameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:0:9"
									},
									"scope": 2575,
									"src": "267:90:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f0c3443d",
									"id": 2546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "treasuryTransfer",
									"nameLocation": "372:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "397:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "389:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "416:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "408:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:35:9"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:9"
									},
									"scope": 2575,
									"src": "363:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b65d08b0",
									"id": 2551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTaxRate",
									"nameLocation": "448:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:2:9"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2551,
												"src": "489:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2548,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "489:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:8:9"
									},
									"scope": 2575,
									"src": "439:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 2558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "513:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "531:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "523:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:17:9"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "563:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:9:9"
									},
									"scope": 2575,
									"src": "504:69:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "588:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "605:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "597:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "614:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "609:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "609:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:24:9"
									},
									"returnParameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "639:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "639:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:6:9"
									},
									"scope": 2575,
									"src": "579:66:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "324884a9",
									"id": 2574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isGenesisAddress",
									"nameLocation": "660:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "685:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "677:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:17:9"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "717:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "717:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:6:9"
									},
									"scope": 2575,
									"src": "651:72:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2576,
							"src": "72:654:9",
							"usedErrors": []
						}
					],
					"src": "37:689:9"
				},
				"id": 9
			}
		}
	}
}