{
	"id": "9a72a42382c277780e01a68309c1cdc5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEP20Token.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./IBEP20.sol\";\nimport \"./Context.sol\";\nimport \"./Ownable.sol\";\n\n\ncontract BEP20Token is Context, IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 private _decimals;\n  string private _symbol;\n  string private _name;\n\n  constructor() {\n    _name = \"Lottery\";\n    _symbol = \"LOTE\";\n    _decimals = 18;\n    _totalSupply = 1000000000 *(10 ** uint256(_decimals)); // 1 billion\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() override external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() override external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() override external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() override external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() override external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) override external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) override external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) override external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) override external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) override external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () { }\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BEP20Token.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20Token.sol\":201:7875  contract BEP20Token is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP20Token.sol\":519:775  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":848:865  address msgSender */\n  0x00\n    /* \"contracts/Ownable.sol\":868:880  _msgSender() */\n  tag_7\n    /* \"contracts/Ownable.sol\":868:878  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/Ownable.sol\":868:880  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Ownable.sol\":848:880  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/Ownable.sol\":895:904  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":886:892  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":886:904  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":948:957  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":915:958  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":944:945  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":915:958  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":842:963  {... */\n  pop\n    /* \"contracts/BEP20Token.sol\":539:556  _name = \"Lottery\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4c6f747465727900000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/BEP20Token.sol\":539:544  _name */\n  0x06\n    /* \"contracts/BEP20Token.sol\":539:556  _name = \"Lottery\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/BEP20Token.sol\":562:578  _symbol = \"LOTE\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4c4f544500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/BEP20Token.sol\":562:569  _symbol */\n  0x05\n    /* \"contracts/BEP20Token.sol\":562:578  _symbol = \"LOTE\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/BEP20Token.sol\":596:598  18 */\n  0x12\n    /* \"contracts/BEP20Token.sol\":584:593  _decimals */\n  0x04\n  0x00\n    /* \"contracts/BEP20Token.sol\":584:598  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20Token.sol\":646:655  _decimals */\n  0x04\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/BEP20Token.sol\":638:656  uint256(_decimals) */\n  0xff\n  and\n    /* \"contracts/BEP20Token.sol\":632:634  10 */\n  0x0a\n    /* \"contracts/BEP20Token.sol\":632:656  10 ** uint256(_decimals) */\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"contracts/BEP20Token.sol\":619:629  1000000000 */\n  0x3b9aca00\n    /* \"contracts/BEP20Token.sol\":619:657  1000000000 *(10 ** uint256(_decimals)) */\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"contracts/BEP20Token.sol\":604:616  _totalSupply */\n  0x03\n    /* \"contracts/BEP20Token.sol\":604:657  _totalSupply = 1000000000 *(10 ** uint256(_decimals)) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20Token.sol\":700:712  _totalSupply */\n  sload(0x03)\n    /* \"contracts/BEP20Token.sol\":676:685  _balances */\n  0x01\n    /* \"contracts/BEP20Token.sol\":676:697  _balances[msg.sender] */\n  0x00\n    /* \"contracts/BEP20Token.sol\":686:696  msg.sender */\n  caller\n    /* \"contracts/BEP20Token.sol\":676:697  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/BEP20Token.sol\":676:712  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP20Token.sol\":745:755  msg.sender */\n  caller\n    /* \"contracts/BEP20Token.sol\":724:770  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP20Token.sol\":741:742  0 */\n  0x00\n    /* \"contracts/BEP20Token.sol\":724:770  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/BEP20Token.sol\":757:769  _totalSupply */\n  sload(0x03)\n    /* \"contracts/BEP20Token.sol\":724:770  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP20Token.sol\":201:7875  contract BEP20Token is Context, IBEP20, Ownable {... */\n  jump(tag_19)\n    /* \"contracts/Context.sol\":763:862  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contracts/Context.sol\":808:823  address payable */\n  0x00\n    /* \"contracts/Context.sol\":846:856  msg.sender */\n  caller\n    /* \"contracts/Context.sol\":831:857  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"contracts/Context.sol\":763:862  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/BEP20Token.sol\":201:7875  contract BEP20Token is Context, IBEP20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_24\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  0x1f\n  lt\n  tag_25\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_25:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_26:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_26)\ntag_27:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  pop\n  swap1\n  jump\t// out\ntag_29:\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:125   */\ntag_33:\n    /* \"#utility.yul\":94:118   */\n  tag_35\n    /* \"#utility.yul\":112:117   */\n  dup2\n    /* \"#utility.yul\":94:118   */\n  tag_36\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":89:92   */\n  dup3\n    /* \"#utility.yul\":82:119   */\n  mstore\n    /* \"#utility.yul\":7:125   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":131:353   */\ntag_18:\n    /* \"#utility.yul\":224:228   */\n  0x00\n    /* \"#utility.yul\":262:264   */\n  0x20\n    /* \"#utility.yul\":251:260   */\n  dup3\n    /* \"#utility.yul\":247:265   */\n  add\n    /* \"#utility.yul\":239:265   */\n  swap1\n  pop\n    /* \"#utility.yul\":275:346   */\n  tag_38\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":332:341   */\n  dup4\n    /* \"#utility.yul\":328:345   */\n  add\n    /* \"#utility.yul\":319:325   */\n  dup5\n    /* \"#utility.yul\":275:346   */\n  tag_33\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":131:353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":359:1207   */\ntag_39:\n    /* \"#utility.yul\":420:425   */\n  0x00\n    /* \"#utility.yul\":427:431   */\n  dup1\n    /* \"#utility.yul\":451:457   */\n  dup3\n    /* \"#utility.yul\":442:457   */\n  swap2\n  pop\n    /* \"#utility.yul\":475:480   */\n  dup4\n    /* \"#utility.yul\":466:480   */\n  swap1\n  pop\n    /* \"#utility.yul\":489:1201   */\ntag_41:\n    /* \"#utility.yul\":510:511   */\n  0x01\n    /* \"#utility.yul\":500:508   */\n  dup6\n    /* \"#utility.yul\":497:512   */\n  gt\n    /* \"#utility.yul\":489:1201   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":605:609   */\n  dup1\n    /* \"#utility.yul\":600:603   */\n  dup7\n    /* \"#utility.yul\":596:610   */\n  div\n    /* \"#utility.yul\":590:594   */\n  dup2\n    /* \"#utility.yul\":587:611   */\n  gt\n    /* \"#utility.yul\":584:634   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":614:632   */\n  tag_45\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":584:634   */\ntag_44:\n    /* \"#utility.yul\":664:665   */\n  0x01\n    /* \"#utility.yul\":654:662   */\n  dup6\n    /* \"#utility.yul\":650:666   */\n  and\n    /* \"#utility.yul\":647:1098   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1079:1083   */\n  dup1\n    /* \"#utility.yul\":1072:1077   */\n  dup3\n    /* \"#utility.yul\":1068:1084   */\n  mul\n    /* \"#utility.yul\":1059:1084   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:1098   */\ntag_47:\n    /* \"#utility.yul\":1129:1133   */\n  dup1\n    /* \"#utility.yul\":1123:1127   */\n  dup2\n    /* \"#utility.yul\":1119:1134   */\n  mul\n    /* \"#utility.yul\":1111:1134   */\n  swap1\n  pop\n    /* \"#utility.yul\":1159:1191   */\n  tag_48\n    /* \"#utility.yul\":1182:1190   */\n  dup6\n    /* \"#utility.yul\":1159:1191   */\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1147:1191   */\n  swap5\n  pop\n    /* \"#utility.yul\":489:1201   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":359:1207   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1213:1498   */\ntag_14:\n    /* \"#utility.yul\":1273:1278   */\n  0x00\n    /* \"#utility.yul\":1297:1320   */\n  tag_51\n    /* \"#utility.yul\":1315:1319   */\n  dup3\n    /* \"#utility.yul\":1297:1320   */\n  tag_36\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1289:1320   */\n  swap2\n  pop\n    /* \"#utility.yul\":1341:1368   */\n  tag_52\n    /* \"#utility.yul\":1359:1367   */\n  dup4\n    /* \"#utility.yul\":1341:1368   */\n  tag_36\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1329:1368   */\n  swap3\n  pop\n    /* \"#utility.yul\":1387:1491   */\n  tag_53\n    /* \"#utility.yul\":1424:1490   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1414:1422   */\n  dup5\n    /* \"#utility.yul\":1408:1412   */\n  dup5\n    /* \"#utility.yul\":1387:1491   */\n  tag_54\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1378:1491   */\n  swap1\n  pop\n    /* \"#utility.yul\":1213:1498   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1504:2577   */\ntag_54:\n    /* \"#utility.yul\":1558:1563   */\n  0x00\n    /* \"#utility.yul\":1749:1757   */\n  dup3\n    /* \"#utility.yul\":1739:1779   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1770:1771   */\n  0x01\n    /* \"#utility.yul\":1761:1771   */\n  swap1\n  pop\n    /* \"#utility.yul\":1772:1777   */\n  jump(tag_55)\n    /* \"#utility.yul\":1739:1779   */\ntag_56:\n    /* \"#utility.yul\":1798:1802   */\n  dup2\n    /* \"#utility.yul\":1788:1824   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1806:1816   */\n  swap1\n  pop\n    /* \"#utility.yul\":1817:1822   */\n  jump(tag_55)\n    /* \"#utility.yul\":1788:1824   */\ntag_57:\n    /* \"#utility.yul\":1884:1888   */\n  dup2\n    /* \"#utility.yul\":1932:1933   */\n  0x01\n    /* \"#utility.yul\":1927:1954   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1968:1969   */\n  0x02\n    /* \"#utility.yul\":1963:2154   */\n  dup2\n  eq\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1877:2154   */\n  jump(tag_58)\n    /* \"#utility.yul\":1927:1954   */\ntag_59:\n    /* \"#utility.yul\":1945:1946   */\n  0x01\n    /* \"#utility.yul\":1936:1946   */\n  swap2\n  pop\n    /* \"#utility.yul\":1947:1952   */\n  pop\n  jump(tag_55)\n    /* \"#utility.yul\":1963:2154   */\ntag_60:\n    /* \"#utility.yul\":2008:2011   */\n  0xff\n    /* \"#utility.yul\":1998:2006   */\n  dup5\n    /* \"#utility.yul\":1995:2012   */\n  gt\n    /* \"#utility.yul\":1992:2035   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2015:2033   */\n  tag_62\n  tag_46\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1992:2035   */\ntag_61:\n    /* \"#utility.yul\":2064:2072   */\n  dup4\n    /* \"#utility.yul\":2061:2062   */\n  0x02\n    /* \"#utility.yul\":2057:2073   */\n  exp\n    /* \"#utility.yul\":2048:2073   */\n  swap2\n  pop\n    /* \"#utility.yul\":2099:2102   */\n  dup5\n    /* \"#utility.yul\":2092:2097   */\n  dup3\n    /* \"#utility.yul\":2089:2103   */\n  gt\n    /* \"#utility.yul\":2086:2126   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2106:2124   */\n  tag_64\n  tag_46\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2086:2126   */\ntag_63:\n    /* \"#utility.yul\":2139:2144   */\n  pop\n  jump(tag_55)\n    /* \"#utility.yul\":1877:2154   */\ntag_58:\n  pop\n    /* \"#utility.yul\":2263:2265   */\n  0x20\n    /* \"#utility.yul\":2253:2261   */\n  dup4\n    /* \"#utility.yul\":2250:2266   */\n  lt\n    /* \"#utility.yul\":2244:2247   */\n  0x0133\n    /* \"#utility.yul\":2238:2242   */\n  dup4\n    /* \"#utility.yul\":2235:2248   */\n  lt\n    /* \"#utility.yul\":2231:2267   */\n  and\n    /* \"#utility.yul\":2213:2215   */\n  0x4e\n    /* \"#utility.yul\":2203:2211   */\n  dup5\n    /* \"#utility.yul\":2200:2216   */\n  lt\n    /* \"#utility.yul\":2195:2197   */\n  0x0b\n    /* \"#utility.yul\":2189:2193   */\n  dup5\n    /* \"#utility.yul\":2186:2198   */\n  lt\n    /* \"#utility.yul\":2182:2217   */\n  and\n    /* \"#utility.yul\":2166:2277   */\n  or\n    /* \"#utility.yul\":2163:2409   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2319:2327   */\n  dup3\n    /* \"#utility.yul\":2313:2317   */\n  dup3\n    /* \"#utility.yul\":2309:2328   */\n  exp\n    /* \"#utility.yul\":2300:2328   */\n  swap1\n  pop\n    /* \"#utility.yul\":2354:2357   */\n  dup4\n    /* \"#utility.yul\":2347:2352   */\n  dup2\n    /* \"#utility.yul\":2344:2358   */\n  gt\n    /* \"#utility.yul\":2341:2381   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2361:2379   */\n  tag_67\n  tag_46\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2341:2381   */\ntag_66:\n    /* \"#utility.yul\":2394:2399   */\n  jump(tag_55)\n    /* \"#utility.yul\":2163:2409   */\ntag_65:\n    /* \"#utility.yul\":2434:2476   */\n  tag_68\n    /* \"#utility.yul\":2472:2475   */\n  dup5\n    /* \"#utility.yul\":2462:2470   */\n  dup5\n    /* \"#utility.yul\":2456:2460   */\n  dup5\n    /* \"#utility.yul\":2453:2454   */\n  0x01\n    /* \"#utility.yul\":2434:2476   */\n  tag_39\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2419:2476   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2508:2512   */\n  dup2\n    /* \"#utility.yul\":2503:2506   */\n  dup5\n    /* \"#utility.yul\":2499:2513   */\n  div\n    /* \"#utility.yul\":2492:2497   */\n  dup2\n    /* \"#utility.yul\":2489:2514   */\n  gt\n    /* \"#utility.yul\":2486:2537   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2517:2535   */\n  tag_70\n  tag_46\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2486:2537   */\ntag_69:\n    /* \"#utility.yul\":2566:2570   */\n  dup2\n    /* \"#utility.yul\":2559:2564   */\n  dup2\n    /* \"#utility.yul\":2555:2571   */\n  mul\n    /* \"#utility.yul\":2546:2571   */\n  swap1\n  pop\n    /* \"#utility.yul\":1504:2577   */\ntag_55:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2583:2931   */\ntag_16:\n    /* \"#utility.yul\":2623:2630   */\n  0x00\n    /* \"#utility.yul\":2646:2666   */\n  tag_72\n    /* \"#utility.yul\":2664:2665   */\n  dup3\n    /* \"#utility.yul\":2646:2666   */\n  tag_36\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2641:2666   */\n  swap2\n  pop\n    /* \"#utility.yul\":2680:2700   */\n  tag_73\n    /* \"#utility.yul\":2698:2699   */\n  dup4\n    /* \"#utility.yul\":2680:2700   */\n  tag_36\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2675:2700   */\n  swap3\n  pop\n    /* \"#utility.yul\":2868:2869   */\n  dup2\n    /* \"#utility.yul\":2800:2866   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2796:2870   */\n  div\n    /* \"#utility.yul\":2793:2794   */\n  dup4\n    /* \"#utility.yul\":2790:2871   */\n  gt\n    /* \"#utility.yul\":2785:2786   */\n  dup3\n    /* \"#utility.yul\":2778:2787   */\n  iszero\n    /* \"#utility.yul\":2771:2788   */\n  iszero\n    /* \"#utility.yul\":2767:2872   */\n  and\n    /* \"#utility.yul\":2764:2895   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2875:2893   */\n  tag_75\n  tag_46\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2764:2895   */\ntag_74:\n    /* \"#utility.yul\":2923:2924   */\n  dup3\n    /* \"#utility.yul\":2920:2921   */\n  dup3\n    /* \"#utility.yul\":2916:2925   */\n  mul\n    /* \"#utility.yul\":2905:2925   */\n  swap1\n  pop\n    /* \"#utility.yul\":2583:2931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2937:3014   */\ntag_36:\n    /* \"#utility.yul\":2974:2981   */\n  0x00\n    /* \"#utility.yul\":3003:3008   */\n  dup2\n    /* \"#utility.yul\":2992:3008   */\n  swap1\n  pop\n    /* \"#utility.yul\":2937:3014   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3020:3340   */\ntag_22:\n    /* \"#utility.yul\":3064:3070   */\n  0x00\n    /* \"#utility.yul\":3101:3102   */\n  0x02\n    /* \"#utility.yul\":3095:3099   */\n  dup3\n    /* \"#utility.yul\":3091:3103   */\n  div\n    /* \"#utility.yul\":3081:3103   */\n  swap1\n  pop\n    /* \"#utility.yul\":3148:3149   */\n  0x01\n    /* \"#utility.yul\":3142:3146   */\n  dup3\n    /* \"#utility.yul\":3138:3150   */\n  and\n    /* \"#utility.yul\":3169:3187   */\n  dup1\n    /* \"#utility.yul\":3159:3240   */\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3225:3229   */\n  0x7f\n    /* \"#utility.yul\":3217:3223   */\n  dup3\n    /* \"#utility.yul\":3213:3230   */\n  and\n    /* \"#utility.yul\":3203:3230   */\n  swap2\n  pop\n    /* \"#utility.yul\":3159:3240   */\ntag_78:\n    /* \"#utility.yul\":3287:3289   */\n  0x20\n    /* \"#utility.yul\":3279:3285   */\n  dup3\n    /* \"#utility.yul\":3276:3290   */\n  lt\n    /* \"#utility.yul\":3256:3274   */\n  dup2\n    /* \"#utility.yul\":3253:3291   */\n  eq\n    /* \"#utility.yul\":3250:3334   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3306:3324   */\n  tag_80\n  tag_81\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3250:3334   */\ntag_79:\n    /* \"#utility.yul\":3071:3340   */\n  pop\n    /* \"#utility.yul\":3020:3340   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3346:3526   */\ntag_46:\n    /* \"#utility.yul\":3394:3471   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3391:3392   */\n  0x00\n    /* \"#utility.yul\":3384:3472   */\n  mstore\n    /* \"#utility.yul\":3491:3495   */\n  0x11\n    /* \"#utility.yul\":3488:3489   */\n  0x04\n    /* \"#utility.yul\":3481:3496   */\n  mstore\n    /* \"#utility.yul\":3515:3519   */\n  0x24\n    /* \"#utility.yul\":3512:3513   */\n  0x00\n    /* \"#utility.yul\":3505:3520   */\n  revert\n    /* \"#utility.yul\":3532:3712   */\ntag_81:\n    /* \"#utility.yul\":3580:3657   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3577:3578   */\n  0x00\n    /* \"#utility.yul\":3570:3658   */\n  mstore\n    /* \"#utility.yul\":3677:3681   */\n  0x22\n    /* \"#utility.yul\":3674:3675   */\n  0x04\n    /* \"#utility.yul\":3667:3682   */\n  mstore\n    /* \"#utility.yul\":3701:3705   */\n  0x24\n    /* \"#utility.yul\":3698:3699   */\n  0x00\n    /* \"#utility.yul\":3691:3706   */\n  revert\n    /* \"#utility.yul\":3718:3820   */\ntag_49:\n    /* \"#utility.yul\":3760:3768   */\n  0x00\n    /* \"#utility.yul\":3807:3812   */\n  dup2\n    /* \"#utility.yul\":3804:3805   */\n  0x01\n    /* \"#utility.yul\":3800:3813   */\n  shr\n    /* \"#utility.yul\":3779:3813   */\n  swap1\n  pop\n    /* \"#utility.yul\":3718:3820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/BEP20Token.sol\":201:7875  contract BEP20Token is Context, IBEP20, Ownable {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20Token.sol\":201:7875  contract BEP20Token is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BEP20Token.sol\":1246:1332  function name() override external view returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":2286:2436  function approve(address spender, uint256 amount) override external returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":1383:1477  function totalSupply() override external view returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":2867:3164  function transferFrom(address sender, address recipient, uint256 amount) override external returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":970:1056  function decimals() override external view returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":3532:3729  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":1526:1639  function balanceOf(address account) override external view returns (uint256) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1614:1741  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/BEP20Token.sol\":830:916  function getOwner() override external view returns (address) {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1031:1102  function owner() public view returns (address) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":1108:1198  function symbol() override external view returns (string memory) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":4623:4740  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":4185:4433  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":1823:1979  function transfer(address recipient, uint256 amount) override external returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":2028:2165  function allowance(address owner, address spender) override external view returns (uint256) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1880:1981  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/BEP20Token.sol\":1246:1332  function name() override external view returns (string memory) {... */\n    tag_23:\n        /* \"contracts/BEP20Token.sol\":1294:1307  string memory */\n      0x60\n        /* \"contracts/BEP20Token.sol\":1322:1327  _name */\n      0x06\n        /* \"contracts/BEP20Token.sol\":1315:1327  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":1246:1332  function name() override external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":2286:2436  function approve(address spender, uint256 amount) override external returns (bool) {... */\n    tag_29:\n        /* \"contracts/BEP20Token.sol\":2363:2367  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":2375:2414  _approve(_msgSender(), spender, amount) */\n      tag_95\n        /* \"contracts/BEP20Token.sol\":2384:2396  _msgSender() */\n      tag_96\n        /* \"contracts/BEP20Token.sol\":2384:2394  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":2384:2396  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/BEP20Token.sol\":2398:2405  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":2407:2413  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":2375:2383  _approve */\n      tag_98\n        /* \"contracts/BEP20Token.sol\":2375:2414  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/BEP20Token.sol\":2427:2431  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":2420:2431  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":2286:2436  function approve(address spender, uint256 amount) override external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":1383:1477  function totalSupply() override external view returns (uint256) {... */\n    tag_33:\n        /* \"contracts/BEP20Token.sol\":1438:1445  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":1460:1472  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20Token.sol\":1453:1472  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":1383:1477  function totalSupply() override external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":2867:3164  function transferFrom(address sender, address recipient, uint256 amount) override external returns (bool) {... */\n    tag_39:\n        /* \"contracts/BEP20Token.sol\":2967:2971  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":2979:3015  _transfer(sender, recipient, amount) */\n      tag_101\n        /* \"contracts/BEP20Token.sol\":2989:2995  sender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":2997:3006  recipient */\n      dup5\n        /* \"contracts/BEP20Token.sol\":3008:3014  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":2979:2988  _transfer */\n      tag_102\n        /* \"contracts/BEP20Token.sol\":2979:3015  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/BEP20Token.sol\":3021:3142  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_103\n        /* \"contracts/BEP20Token.sol\":3030:3036  sender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":3038:3050  _msgSender() */\n      tag_104\n        /* \"contracts/BEP20Token.sol\":3038:3048  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":3038:3050  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/BEP20Token.sol\":3052:3141  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_105\n        /* \"contracts/BEP20Token.sol\":3090:3096  amount */\n      dup6\n        /* \"contracts/BEP20Token.sol\":3052:3141  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/BEP20Token.sol\":3052:3063  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":3052:3071  _allowances[sender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":3064:3070  sender */\n      dup12\n        /* \"contracts/BEP20Token.sol\":3052:3071  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":3052:3085  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":3072:3084  _msgSender() */\n      tag_106\n        /* \"contracts/BEP20Token.sol\":3072:3082  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":3072:3084  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/BEP20Token.sol\":3052:3085  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":3052:3089  _allowances[sender][_msgSender()].sub */\n      tag_107\n      swap1\n        /* \"contracts/BEP20Token.sol\":3052:3141  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/BEP20Token.sol\":3021:3029  _approve */\n      tag_98\n        /* \"contracts/BEP20Token.sol\":3021:3142  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/BEP20Token.sol\":3155:3159  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":3148:3159  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":2867:3164  function transferFrom(address sender, address recipient, uint256 amount) override external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":970:1056  function decimals() override external view returns (uint8) {... */\n    tag_42:\n        /* \"contracts/BEP20Token.sol\":1022:1027  uint8 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":1042:1051  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP20Token.sol\":1035:1051  return _decimals */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":970:1056  function decimals() override external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":3532:3729  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_47:\n        /* \"contracts/BEP20Token.sol\":3612:3616  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":3624:3707  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_110\n        /* \"contracts/BEP20Token.sol\":3633:3645  _msgSender() */\n      tag_111\n        /* \"contracts/BEP20Token.sol\":3633:3643  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":3633:3645  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/BEP20Token.sol\":3647:3654  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":3656:3706  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_112\n        /* \"contracts/BEP20Token.sol\":3695:3705  addedValue */\n      dup6\n        /* \"contracts/BEP20Token.sol\":3656:3667  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":3656:3681  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":3668:3680  _msgSender() */\n      tag_113\n        /* \"contracts/BEP20Token.sol\":3668:3678  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":3668:3680  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BEP20Token.sol\":3656:3681  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":3656:3690  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":3682:3689  spender */\n      dup10\n        /* \"contracts/BEP20Token.sol\":3656:3690  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":3656:3694  _allowances[_msgSender()][spender].add */\n      tag_114\n      swap1\n        /* \"contracts/BEP20Token.sol\":3656:3706  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/BEP20Token.sol\":3624:3632  _approve */\n      tag_98\n        /* \"contracts/BEP20Token.sol\":3624:3707  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/BEP20Token.sol\":3720:3724  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":3713:3724  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":3532:3729  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":1526:1639  function balanceOf(address account) override external view returns (uint256) {... */\n    tag_52:\n        /* \"contracts/BEP20Token.sol\":1594:1601  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":1616:1625  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":1616:1634  _balances[account] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":1626:1633  account */\n      dup4\n        /* \"contracts/BEP20Token.sol\":1616:1634  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":1609:1634  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":1526:1639  function balanceOf(address account) override external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1614:1741  function renounceOwnership() public onlyOwner {... */\n    tag_55:\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      tag_117\n        /* \"contracts/Ownable.sol\":1227:1237  _msgSender */\n      tag_97\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1223  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1209:1276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/Ownable.sol\":1708:1709  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1671:1711  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1692:1698  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1671:1711  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1734:1735  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1717:1723  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":1717:1736  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1614:1741  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":830:916  function getOwner() override external view returns (address) {... */\n    tag_57:\n        /* \"contracts/BEP20Token.sol\":882:889  address */\n      0x00\n        /* \"contracts/BEP20Token.sol\":904:911  owner() */\n      tag_123\n        /* \"contracts/BEP20Token.sol\":904:909  owner */\n      tag_61\n        /* \"contracts/BEP20Token.sol\":904:911  owner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/BEP20Token.sol\":897:911  return owner() */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":830:916  function getOwner() override external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1031:1102  function owner() public view returns (address) {... */\n    tag_61:\n        /* \"contracts/Ownable.sol\":1069:1076  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1091:1097  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1084:1097  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1031:1102  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":1108:1198  function symbol() override external view returns (string memory) {... */\n    tag_64:\n        /* \"contracts/BEP20Token.sol\":1158:1171  string memory */\n      0x60\n        /* \"contracts/BEP20Token.sol\":1186:1193  _symbol */\n      0x05\n        /* \"contracts/BEP20Token.sol\":1179:1193  return _symbol */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_89\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_89\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":1108:1198  function symbol() override external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":4623:4740  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_69:\n        /* \"contracts/BEP20Token.sol\":4679:4683  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      tag_132\n        /* \"contracts/Ownable.sol\":1227:1237  _msgSender */\n      tag_97\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1223  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1209:1276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_120\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/BEP20Token.sol\":4691:4718  _mint(_msgSender(), amount) */\n      tag_136\n        /* \"contracts/BEP20Token.sol\":4697:4709  _msgSender() */\n      tag_137\n        /* \"contracts/BEP20Token.sol\":4697:4707  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":4697:4709  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/BEP20Token.sol\":4711:4717  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":4691:4696  _mint */\n      tag_138\n        /* \"contracts/BEP20Token.sol\":4691:4718  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/BEP20Token.sol\":4731:4735  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":4724:4735  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":4623:4740  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":4185:4433  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_73:\n        /* \"contracts/BEP20Token.sol\":4270:4274  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":4282:4411  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_140\n        /* \"contracts/BEP20Token.sol\":4291:4303  _msgSender() */\n      tag_141\n        /* \"contracts/BEP20Token.sol\":4291:4301  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":4291:4303  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/BEP20Token.sol\":4305:4312  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":4314:4410  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_142\n        /* \"contracts/BEP20Token.sol\":4353:4368  subtractedValue */\n      dup6\n        /* \"contracts/BEP20Token.sol\":4314:4410  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/BEP20Token.sol\":4314:4325  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":4314:4339  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":4326:4338  _msgSender() */\n      tag_143\n        /* \"contracts/BEP20Token.sol\":4326:4336  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":4326:4338  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/BEP20Token.sol\":4314:4339  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":4314:4348  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":4340:4347  spender */\n      dup11\n        /* \"contracts/BEP20Token.sol\":4314:4348  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":4314:4352  _allowances[_msgSender()][spender].sub */\n      tag_107\n      swap1\n        /* \"contracts/BEP20Token.sol\":4314:4410  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/BEP20Token.sol\":4282:4290  _approve */\n      tag_98\n        /* \"contracts/BEP20Token.sol\":4282:4411  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/BEP20Token.sol\":4424:4428  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":4417:4428  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":4185:4433  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":1823:1979  function transfer(address recipient, uint256 amount) override external returns (bool) {... */\n    tag_77:\n        /* \"contracts/BEP20Token.sol\":1903:1907  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":1915:1957  _transfer(_msgSender(), recipient, amount) */\n      tag_145\n        /* \"contracts/BEP20Token.sol\":1925:1937  _msgSender() */\n      tag_146\n        /* \"contracts/BEP20Token.sol\":1925:1935  _msgSender */\n      tag_97\n        /* \"contracts/BEP20Token.sol\":1925:1937  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/BEP20Token.sol\":1939:1948  recipient */\n      dup5\n        /* \"contracts/BEP20Token.sol\":1950:1956  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":1915:1924  _transfer */\n      tag_102\n        /* \"contracts/BEP20Token.sol\":1915:1957  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/BEP20Token.sol\":1970:1974  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":1963:1974  return true */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":1823:1979  function transfer(address recipient, uint256 amount) override external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":2028:2165  function allowance(address owner, address spender) override external view returns (uint256) {... */\n    tag_82:\n        /* \"contracts/BEP20Token.sol\":2111:2118  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":2133:2144  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":2133:2151  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":2145:2150  owner */\n      dup5\n        /* \"contracts/BEP20Token.sol\":2133:2151  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":2133:2160  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":2152:2159  spender */\n      dup4\n        /* \"contracts/BEP20Token.sol\":2133:2160  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":2126:2160  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":2028:2165  function allowance(address owner, address spender) override external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1880:1981  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_86:\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      tag_149\n        /* \"contracts/Ownable.sol\":1227:1237  _msgSender */\n      tag_97\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1223  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1209:1276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_120\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/Ownable.sol\":1948:1976  _transferOwnership(newOwner) */\n      tag_153\n        /* \"contracts/Ownable.sol\":1967:1975  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1948:1966  _transferOwnership */\n      tag_154\n        /* \"contracts/Ownable.sol\":1948:1976  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/Ownable.sol\":1880:1981  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":763:862  function _msgSender() internal view returns (address payable) {... */\n    tag_97:\n        /* \"contracts/Context.sol\":808:823  address payable */\n      0x00\n        /* \"contracts/Context.sol\":846:856  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":831:857  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":763:862  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":7176:7490  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_98:\n        /* \"contracts/BEP20Token.sol\":7282:7283  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":7265:7284  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":7265:7270  owner */\n      dup4\n        /* \"contracts/BEP20Token.sol\":7265:7284  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":7257:7325  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/BEP20Token.sol\":7358:7359  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":7339:7360  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":7339:7346  spender */\n      dup3\n        /* \"contracts/BEP20Token.sol\":7339:7360  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":7331:7399  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/BEP20Token.sol\":7436:7442  amount */\n      dup1\n        /* \"contracts/BEP20Token.sol\":7406:7417  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":7406:7424  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":7418:7423  owner */\n      dup6\n        /* \"contracts/BEP20Token.sol\":7406:7424  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":7406:7433  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":7425:7432  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":7406:7433  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":7406:7442  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":7469:7476  spender */\n      dup2\n        /* \"contracts/BEP20Token.sol\":7453:7485  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":7462:7467  owner */\n      dup4\n        /* \"contracts/BEP20Token.sol\":7453:7485  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BEP20Token.sol\":7478:7484  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":7453:7485  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":7176:7490  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":5184:5626  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_102:\n        /* \"contracts/BEP20Token.sol\":5295:5296  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5277:5297  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":5277:5283  sender */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5277:5297  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":5269:5339  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/BEP20Token.sol\":5374:5375  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5353:5376  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":5353:5362  recipient */\n      dup3\n        /* \"contracts/BEP20Token.sol\":5353:5376  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":5345:5416  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/BEP20Token.sol\":5443:5514  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_171\n        /* \"contracts/BEP20Token.sol\":5465:5471  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":5443:5514  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/BEP20Token.sol\":5443:5452  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":5443:5460  _balances[sender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5453:5459  sender */\n      dup8\n        /* \"contracts/BEP20Token.sol\":5443:5460  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":5443:5464  _balances[sender].sub */\n      tag_107\n      swap1\n        /* \"contracts/BEP20Token.sol\":5443:5514  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/BEP20Token.sol\":5423:5432  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":5423:5440  _balances[sender] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5433:5439  sender */\n      dup6\n        /* \"contracts/BEP20Token.sol\":5423:5440  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":5423:5514  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":5543:5575  _balances[recipient].add(amount) */\n      tag_172\n        /* \"contracts/BEP20Token.sol\":5568:5574  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":5543:5552  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":5543:5563  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5553:5562  recipient */\n      dup6\n        /* \"contracts/BEP20Token.sol\":5543:5563  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":5543:5567  _balances[recipient].add */\n      tag_114\n      swap1\n        /* \"contracts/BEP20Token.sol\":5543:5575  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/BEP20Token.sol\":5520:5529  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":5520:5540  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5530:5539  recipient */\n      dup5\n        /* \"contracts/BEP20Token.sol\":5520:5540  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":5520:5575  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":5603:5612  recipient */\n      dup2\n        /* \"contracts/BEP20Token.sol\":5586:5621  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":5595:5601  sender */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5586:5621  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20Token.sol\":5614:5620  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":5586:5621  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":5184:5626  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4959:5190  function sub(... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5075:5082  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5131:5132  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5126:5127  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5126:5132  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5134:5146  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5118:5147  require(b <= a, errorMessage) */\n      swap1\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5172:5173  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5168:5169  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5168:5173  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5161:5173  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4959:5190  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":5876:6160  function _mint(address account, uint256 amount) internal {... */\n    tag_138:\n        /* \"contracts/BEP20Token.sol\":5966:5967  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5947:5968  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":5947:5954  account */\n      dup3\n        /* \"contracts/BEP20Token.sol\":5947:5968  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP20Token.sol\":5939:6004  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/BEP20Token.sol\":6026:6050  _totalSupply.add(amount) */\n      tag_184\n        /* \"contracts/BEP20Token.sol\":6043:6049  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":6026:6038  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20Token.sol\":6026:6042  _totalSupply.add */\n      tag_114\n      swap1\n        /* \"contracts/BEP20Token.sol\":6026:6050  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"contracts/BEP20Token.sol\":6011:6023  _totalSupply */\n      0x03\n        /* \"contracts/BEP20Token.sol\":6011:6050  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":6077:6107  _balances[account].add(amount) */\n      tag_185\n        /* \"contracts/BEP20Token.sol\":6100:6106  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":6077:6086  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":6077:6095  _balances[account] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":6087:6094  account */\n      dup6\n        /* \"contracts/BEP20Token.sol\":6077:6095  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":6077:6099  _balances[account].add */\n      tag_114\n      swap1\n        /* \"contracts/BEP20Token.sol\":6077:6107  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/BEP20Token.sol\":6056:6065  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":6056:6074  _balances[account] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":6066:6073  account */\n      dup5\n        /* \"contracts/BEP20Token.sol\":6056:6074  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP20Token.sol\":6056:6107  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP20Token.sol\":6139:6146  account */\n      dup2\n        /* \"contracts/BEP20Token.sol\":6118:6155  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP20Token.sol\":6135:6136  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":6118:6155  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP20Token.sol\":6148:6154  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":6118:6155  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":5876:6160  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2074:2285  function _transferOwnership(address newOwner) internal {... */\n    tag_154:\n        /* \"contracts/Ownable.sol\":2163:2164  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2143:2165  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2143:2151  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2143:2165  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":2135:2208  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/Ownable.sol\":2248:2256  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2219:2257  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2240:2246  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2219:2257  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2272:2280  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2263:2269  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":2263:2280  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2074:2285  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_192:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_194\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_196:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_198\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_51:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":373:492   */\n    tag_201:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_204\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_192\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_81:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_207\n      tag_203\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":725:844   */\n    tag_206:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_208\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_192\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_209\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_192\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_38:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_212\n      tag_203\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1222:1341   */\n    tag_211:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_213\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_192\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_214\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_192\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_215\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_196\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_28:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_218\n      tag_203\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1830:1949   */\n    tag_217:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_219\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_192\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_220\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_196\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2546   */\n    tag_68:\n        /* \"#utility.yul\":2276:2282   */\n      0x00\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2313:2322   */\n      dup3\n        /* \"#utility.yul\":2304:2311   */\n      dup5\n        /* \"#utility.yul\":2300:2323   */\n      sub\n        /* \"#utility.yul\":2296:2328   */\n      slt\n        /* \"#utility.yul\":2293:2412   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2331:2410   */\n      tag_223\n      tag_203\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2293:2412   */\n    tag_222:\n        /* \"#utility.yul\":2451:2452   */\n      0x00\n        /* \"#utility.yul\":2476:2529   */\n      tag_224\n        /* \"#utility.yul\":2521:2528   */\n      dup5\n        /* \"#utility.yul\":2512:2518   */\n      dup3\n        /* \"#utility.yul\":2501:2510   */\n      dup6\n        /* \"#utility.yul\":2497:2519   */\n      add\n        /* \"#utility.yul\":2476:2529   */\n      tag_196\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2466:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2422:2539   */\n      pop\n        /* \"#utility.yul\":2217:2546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2552:2670   */\n    tag_225:\n        /* \"#utility.yul\":2639:2663   */\n      tag_227\n        /* \"#utility.yul\":2657:2662   */\n      dup2\n        /* \"#utility.yul\":2639:2663   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2634:2637   */\n      dup3\n        /* \"#utility.yul\":2627:2664   */\n      mstore\n        /* \"#utility.yul\":2552:2670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2676:2785   */\n    tag_229:\n        /* \"#utility.yul\":2757:2778   */\n      tag_231\n        /* \"#utility.yul\":2772:2777   */\n      dup2\n        /* \"#utility.yul\":2757:2778   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2752:2755   */\n      dup3\n        /* \"#utility.yul\":2745:2779   */\n      mstore\n        /* \"#utility.yul\":2676:2785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3155   */\n    tag_233:\n        /* \"#utility.yul\":2879:2882   */\n      0x00\n        /* \"#utility.yul\":2907:2946   */\n      tag_235\n        /* \"#utility.yul\":2940:2945   */\n      dup3\n        /* \"#utility.yul\":2907:2946   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2962:3033   */\n      tag_237\n        /* \"#utility.yul\":3026:3032   */\n      dup2\n        /* \"#utility.yul\":3021:3024   */\n      dup6\n        /* \"#utility.yul\":2962:3033   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2955:3033   */\n      swap4\n      pop\n        /* \"#utility.yul\":3042:3094   */\n      tag_239\n        /* \"#utility.yul\":3087:3093   */\n      dup2\n        /* \"#utility.yul\":3082:3085   */\n      dup6\n        /* \"#utility.yul\":3075:3079   */\n      0x20\n        /* \"#utility.yul\":3068:3073   */\n      dup7\n        /* \"#utility.yul\":3064:3080   */\n      add\n        /* \"#utility.yul\":3042:3094   */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3119:3148   */\n      tag_241\n        /* \"#utility.yul\":3141:3147   */\n      dup2\n        /* \"#utility.yul\":3119:3148   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3114:3117   */\n      dup5\n        /* \"#utility.yul\":3110:3149   */\n      add\n        /* \"#utility.yul\":3103:3149   */\n      swap2\n      pop\n        /* \"#utility.yul\":2883:3155   */\n      pop\n        /* \"#utility.yul\":2791:3155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3161:3527   */\n    tag_243:\n        /* \"#utility.yul\":3303:3306   */\n      0x00\n        /* \"#utility.yul\":3324:3391   */\n      tag_245\n        /* \"#utility.yul\":3388:3390   */\n      0x25\n        /* \"#utility.yul\":3383:3386   */\n      dup4\n        /* \"#utility.yul\":3324:3391   */\n      tag_238\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3317:3391   */\n      swap2\n      pop\n        /* \"#utility.yul\":3400:3493   */\n      tag_246\n        /* \"#utility.yul\":3489:3492   */\n      dup3\n        /* \"#utility.yul\":3400:3493   */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3518:3520   */\n      0x40\n        /* \"#utility.yul\":3513:3516   */\n      dup3\n        /* \"#utility.yul\":3509:3521   */\n      add\n        /* \"#utility.yul\":3502:3521   */\n      swap1\n      pop\n        /* \"#utility.yul\":3161:3527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3533:3899   */\n    tag_248:\n        /* \"#utility.yul\":3675:3678   */\n      0x00\n        /* \"#utility.yul\":3696:3763   */\n      tag_250\n        /* \"#utility.yul\":3760:3762   */\n      0x24\n        /* \"#utility.yul\":3755:3758   */\n      dup4\n        /* \"#utility.yul\":3696:3763   */\n      tag_238\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3689:3763   */\n      swap2\n      pop\n        /* \"#utility.yul\":3772:3865   */\n      tag_251\n        /* \"#utility.yul\":3861:3864   */\n      dup3\n        /* \"#utility.yul\":3772:3865   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3890:3892   */\n      0x40\n        /* \"#utility.yul\":3885:3888   */\n      dup3\n        /* \"#utility.yul\":3881:3893   */\n      add\n        /* \"#utility.yul\":3874:3893   */\n      swap1\n      pop\n        /* \"#utility.yul\":3533:3899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4271   */\n    tag_253:\n        /* \"#utility.yul\":4047:4050   */\n      0x00\n        /* \"#utility.yul\":4068:4135   */\n      tag_255\n        /* \"#utility.yul\":4132:4134   */\n      0x26\n        /* \"#utility.yul\":4127:4130   */\n      dup4\n        /* \"#utility.yul\":4068:4135   */\n      tag_238\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4061:4135   */\n      swap2\n      pop\n        /* \"#utility.yul\":4144:4237   */\n      tag_256\n        /* \"#utility.yul\":4233:4236   */\n      dup3\n        /* \"#utility.yul\":4144:4237   */\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4262:4264   */\n      0x40\n        /* \"#utility.yul\":4257:4260   */\n      dup3\n        /* \"#utility.yul\":4253:4265   */\n      add\n        /* \"#utility.yul\":4246:4265   */\n      swap1\n      pop\n        /* \"#utility.yul\":3905:4271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4277:4643   */\n    tag_258:\n        /* \"#utility.yul\":4419:4422   */\n      0x00\n        /* \"#utility.yul\":4440:4507   */\n      tag_260\n        /* \"#utility.yul\":4504:4506   */\n      0x1f\n        /* \"#utility.yul\":4499:4502   */\n      dup4\n        /* \"#utility.yul\":4440:4507   */\n      tag_238\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4433:4507   */\n      swap2\n      pop\n        /* \"#utility.yul\":4516:4609   */\n      tag_261\n        /* \"#utility.yul\":4605:4608   */\n      dup3\n        /* \"#utility.yul\":4516:4609   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4634:4636   */\n      0x20\n        /* \"#utility.yul\":4629:4632   */\n      dup3\n        /* \"#utility.yul\":4625:4637   */\n      add\n        /* \"#utility.yul\":4618:4637   */\n      swap1\n      pop\n        /* \"#utility.yul\":4277:4643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4649:5015   */\n    tag_263:\n        /* \"#utility.yul\":4791:4794   */\n      0x00\n        /* \"#utility.yul\":4812:4879   */\n      tag_265\n        /* \"#utility.yul\":4876:4878   */\n      0x20\n        /* \"#utility.yul\":4871:4874   */\n      dup4\n        /* \"#utility.yul\":4812:4879   */\n      tag_238\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4805:4879   */\n      swap2\n      pop\n        /* \"#utility.yul\":4888:4981   */\n      tag_266\n        /* \"#utility.yul\":4977:4980   */\n      dup3\n        /* \"#utility.yul\":4888:4981   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5006:5008   */\n      0x20\n        /* \"#utility.yul\":5001:5004   */\n      dup3\n        /* \"#utility.yul\":4997:5009   */\n      add\n        /* \"#utility.yul\":4990:5009   */\n      swap1\n      pop\n        /* \"#utility.yul\":4649:5015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5021:5387   */\n    tag_268:\n        /* \"#utility.yul\":5163:5166   */\n      0x00\n        /* \"#utility.yul\":5184:5251   */\n      tag_270\n        /* \"#utility.yul\":5248:5250   */\n      0x23\n        /* \"#utility.yul\":5243:5246   */\n      dup4\n        /* \"#utility.yul\":5184:5251   */\n      tag_238\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5177:5251   */\n      swap2\n      pop\n        /* \"#utility.yul\":5260:5353   */\n      tag_271\n        /* \"#utility.yul\":5349:5352   */\n      dup3\n        /* \"#utility.yul\":5260:5353   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5378:5380   */\n      0x40\n        /* \"#utility.yul\":5373:5376   */\n      dup3\n        /* \"#utility.yul\":5369:5381   */\n      add\n        /* \"#utility.yul\":5362:5381   */\n      swap1\n      pop\n        /* \"#utility.yul\":5021:5387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5393:5759   */\n    tag_273:\n        /* \"#utility.yul\":5535:5538   */\n      0x00\n        /* \"#utility.yul\":5556:5623   */\n      tag_275\n        /* \"#utility.yul\":5620:5622   */\n      0x22\n        /* \"#utility.yul\":5615:5618   */\n      dup4\n        /* \"#utility.yul\":5556:5623   */\n      tag_238\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5549:5623   */\n      swap2\n      pop\n        /* \"#utility.yul\":5632:5725   */\n      tag_276\n        /* \"#utility.yul\":5721:5724   */\n      dup3\n        /* \"#utility.yul\":5632:5725   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5750:5752   */\n      0x40\n        /* \"#utility.yul\":5745:5748   */\n      dup3\n        /* \"#utility.yul\":5741:5753   */\n      add\n        /* \"#utility.yul\":5734:5753   */\n      swap1\n      pop\n        /* \"#utility.yul\":5393:5759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5765:5883   */\n    tag_278:\n        /* \"#utility.yul\":5852:5876   */\n      tag_280\n        /* \"#utility.yul\":5870:5875   */\n      dup2\n        /* \"#utility.yul\":5852:5876   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5847:5850   */\n      dup3\n        /* \"#utility.yul\":5840:5877   */\n      mstore\n        /* \"#utility.yul\":5765:5883   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5889:6001   */\n    tag_282:\n        /* \"#utility.yul\":5972:5994   */\n      tag_284\n        /* \"#utility.yul\":5988:5993   */\n      dup2\n        /* \"#utility.yul\":5972:5994   */\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5967:5970   */\n      dup3\n        /* \"#utility.yul\":5960:5995   */\n      mstore\n        /* \"#utility.yul\":5889:6001   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6007:6229   */\n    tag_59:\n        /* \"#utility.yul\":6100:6104   */\n      0x00\n        /* \"#utility.yul\":6138:6140   */\n      0x20\n        /* \"#utility.yul\":6127:6136   */\n      dup3\n        /* \"#utility.yul\":6123:6141   */\n      add\n        /* \"#utility.yul\":6115:6141   */\n      swap1\n      pop\n        /* \"#utility.yul\":6151:6222   */\n      tag_287\n        /* \"#utility.yul\":6219:6220   */\n      0x00\n        /* \"#utility.yul\":6208:6217   */\n      dup4\n        /* \"#utility.yul\":6204:6221   */\n      add\n        /* \"#utility.yul\":6195:6201   */\n      dup5\n        /* \"#utility.yul\":6151:6222   */\n      tag_225\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6007:6229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6235:6445   */\n    tag_31:\n        /* \"#utility.yul\":6322:6326   */\n      0x00\n        /* \"#utility.yul\":6360:6362   */\n      0x20\n        /* \"#utility.yul\":6349:6358   */\n      dup3\n        /* \"#utility.yul\":6345:6363   */\n      add\n        /* \"#utility.yul\":6337:6363   */\n      swap1\n      pop\n        /* \"#utility.yul\":6373:6438   */\n      tag_289\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6411:6417   */\n      dup5\n        /* \"#utility.yul\":6373:6438   */\n      tag_229\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6235:6445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6764   */\n    tag_25:\n        /* \"#utility.yul\":6564:6568   */\n      0x00\n        /* \"#utility.yul\":6602:6604   */\n      0x20\n        /* \"#utility.yul\":6591:6600   */\n      dup3\n        /* \"#utility.yul\":6587:6605   */\n      add\n        /* \"#utility.yul\":6579:6605   */\n      swap1\n      pop\n        /* \"#utility.yul\":6651:6660   */\n      dup2\n        /* \"#utility.yul\":6645:6649   */\n      dup2\n        /* \"#utility.yul\":6641:6661   */\n      sub\n        /* \"#utility.yul\":6637:6638   */\n      0x00\n        /* \"#utility.yul\":6626:6635   */\n      dup4\n        /* \"#utility.yul\":6622:6639   */\n      add\n        /* \"#utility.yul\":6615:6662   */\n      mstore\n        /* \"#utility.yul\":6679:6757   */\n      tag_291\n        /* \"#utility.yul\":6752:6756   */\n      dup2\n        /* \"#utility.yul\":6743:6749   */\n      dup5\n        /* \"#utility.yul\":6679:6757   */\n      tag_233\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6671:6757   */\n      swap1\n      pop\n        /* \"#utility.yul\":6451:6764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:7189   */\n    tag_167:\n        /* \"#utility.yul\":6936:6940   */\n      0x00\n        /* \"#utility.yul\":6974:6976   */\n      0x20\n        /* \"#utility.yul\":6963:6972   */\n      dup3\n        /* \"#utility.yul\":6959:6977   */\n      add\n        /* \"#utility.yul\":6951:6977   */\n      swap1\n      pop\n        /* \"#utility.yul\":7023:7032   */\n      dup2\n        /* \"#utility.yul\":7017:7021   */\n      dup2\n        /* \"#utility.yul\":7013:7033   */\n      sub\n        /* \"#utility.yul\":7009:7010   */\n      0x00\n        /* \"#utility.yul\":6998:7007   */\n      dup4\n        /* \"#utility.yul\":6994:7011   */\n      add\n        /* \"#utility.yul\":6987:7034   */\n      mstore\n        /* \"#utility.yul\":7051:7182   */\n      tag_293\n        /* \"#utility.yul\":7177:7181   */\n      dup2\n        /* \"#utility.yul\":7051:7182   */\n      tag_243\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7043:7182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:7189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7195:7614   */\n    tag_159:\n        /* \"#utility.yul\":7361:7365   */\n      0x00\n        /* \"#utility.yul\":7399:7401   */\n      0x20\n        /* \"#utility.yul\":7388:7397   */\n      dup3\n        /* \"#utility.yul\":7384:7402   */\n      add\n        /* \"#utility.yul\":7376:7402   */\n      swap1\n      pop\n        /* \"#utility.yul\":7448:7457   */\n      dup2\n        /* \"#utility.yul\":7442:7446   */\n      dup2\n        /* \"#utility.yul\":7438:7458   */\n      sub\n        /* \"#utility.yul\":7434:7435   */\n      0x00\n        /* \"#utility.yul\":7423:7432   */\n      dup4\n        /* \"#utility.yul\":7419:7436   */\n      add\n        /* \"#utility.yul\":7412:7459   */\n      mstore\n        /* \"#utility.yul\":7476:7607   */\n      tag_295\n        /* \"#utility.yul\":7602:7606   */\n      dup2\n        /* \"#utility.yul\":7476:7607   */\n      tag_248\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7468:7607   */\n      swap1\n      pop\n        /* \"#utility.yul\":7195:7614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7620:8039   */\n    tag_190:\n        /* \"#utility.yul\":7786:7790   */\n      0x00\n        /* \"#utility.yul\":7824:7826   */\n      0x20\n        /* \"#utility.yul\":7813:7822   */\n      dup3\n        /* \"#utility.yul\":7809:7827   */\n      add\n        /* \"#utility.yul\":7801:7827   */\n      swap1\n      pop\n        /* \"#utility.yul\":7873:7882   */\n      dup2\n        /* \"#utility.yul\":7867:7871   */\n      dup2\n        /* \"#utility.yul\":7863:7883   */\n      sub\n        /* \"#utility.yul\":7859:7860   */\n      0x00\n        /* \"#utility.yul\":7848:7857   */\n      dup4\n        /* \"#utility.yul\":7844:7861   */\n      add\n        /* \"#utility.yul\":7837:7884   */\n      mstore\n        /* \"#utility.yul\":7901:8032   */\n      tag_297\n        /* \"#utility.yul\":8027:8031   */\n      dup2\n        /* \"#utility.yul\":7901:8032   */\n      tag_253\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7893:8032   */\n      swap1\n      pop\n        /* \"#utility.yul\":7620:8039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8045:8464   */\n    tag_183:\n        /* \"#utility.yul\":8211:8215   */\n      0x00\n        /* \"#utility.yul\":8249:8251   */\n      0x20\n        /* \"#utility.yul\":8238:8247   */\n      dup3\n        /* \"#utility.yul\":8234:8252   */\n      add\n        /* \"#utility.yul\":8226:8252   */\n      swap1\n      pop\n        /* \"#utility.yul\":8298:8307   */\n      dup2\n        /* \"#utility.yul\":8292:8296   */\n      dup2\n        /* \"#utility.yul\":8288:8308   */\n      sub\n        /* \"#utility.yul\":8284:8285   */\n      0x00\n        /* \"#utility.yul\":8273:8282   */\n      dup4\n        /* \"#utility.yul\":8269:8286   */\n      add\n        /* \"#utility.yul\":8262:8309   */\n      mstore\n        /* \"#utility.yul\":8326:8457   */\n      tag_299\n        /* \"#utility.yul\":8452:8456   */\n      dup2\n        /* \"#utility.yul\":8326:8457   */\n      tag_258\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8318:8457   */\n      swap1\n      pop\n        /* \"#utility.yul\":8045:8464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8470:8889   */\n    tag_120:\n        /* \"#utility.yul\":8636:8640   */\n      0x00\n        /* \"#utility.yul\":8674:8676   */\n      0x20\n        /* \"#utility.yul\":8663:8672   */\n      dup3\n        /* \"#utility.yul\":8659:8677   */\n      add\n        /* \"#utility.yul\":8651:8677   */\n      swap1\n      pop\n        /* \"#utility.yul\":8723:8732   */\n      dup2\n        /* \"#utility.yul\":8717:8721   */\n      dup2\n        /* \"#utility.yul\":8713:8733   */\n      sub\n        /* \"#utility.yul\":8709:8710   */\n      0x00\n        /* \"#utility.yul\":8698:8707   */\n      dup4\n        /* \"#utility.yul\":8694:8711   */\n      add\n        /* \"#utility.yul\":8687:8734   */\n      mstore\n        /* \"#utility.yul\":8751:8882   */\n      tag_301\n        /* \"#utility.yul\":8877:8881   */\n      dup2\n        /* \"#utility.yul\":8751:8882   */\n      tag_263\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8743:8882   */\n      swap1\n      pop\n        /* \"#utility.yul\":8470:8889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8895:9314   */\n    tag_170:\n        /* \"#utility.yul\":9061:9065   */\n      0x00\n        /* \"#utility.yul\":9099:9101   */\n      0x20\n        /* \"#utility.yul\":9088:9097   */\n      dup3\n        /* \"#utility.yul\":9084:9102   */\n      add\n        /* \"#utility.yul\":9076:9102   */\n      swap1\n      pop\n        /* \"#utility.yul\":9148:9157   */\n      dup2\n        /* \"#utility.yul\":9142:9146   */\n      dup2\n        /* \"#utility.yul\":9138:9158   */\n      sub\n        /* \"#utility.yul\":9134:9135   */\n      0x00\n        /* \"#utility.yul\":9123:9132   */\n      dup4\n        /* \"#utility.yul\":9119:9136   */\n      add\n        /* \"#utility.yul\":9112:9159   */\n      mstore\n        /* \"#utility.yul\":9176:9307   */\n      tag_303\n        /* \"#utility.yul\":9302:9306   */\n      dup2\n        /* \"#utility.yul\":9176:9307   */\n      tag_268\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9168:9307   */\n      swap1\n      pop\n        /* \"#utility.yul\":8895:9314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9320:9739   */\n    tag_162:\n        /* \"#utility.yul\":9486:9490   */\n      0x00\n        /* \"#utility.yul\":9524:9526   */\n      0x20\n        /* \"#utility.yul\":9513:9522   */\n      dup3\n        /* \"#utility.yul\":9509:9527   */\n      add\n        /* \"#utility.yul\":9501:9527   */\n      swap1\n      pop\n        /* \"#utility.yul\":9573:9582   */\n      dup2\n        /* \"#utility.yul\":9567:9571   */\n      dup2\n        /* \"#utility.yul\":9563:9583   */\n      sub\n        /* \"#utility.yul\":9559:9560   */\n      0x00\n        /* \"#utility.yul\":9548:9557   */\n      dup4\n        /* \"#utility.yul\":9544:9561   */\n      add\n        /* \"#utility.yul\":9537:9584   */\n      mstore\n        /* \"#utility.yul\":9601:9732   */\n      tag_305\n        /* \"#utility.yul\":9727:9731   */\n      dup2\n        /* \"#utility.yul\":9601:9732   */\n      tag_273\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9593:9732   */\n      swap1\n      pop\n        /* \"#utility.yul\":9320:9739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9745:9967   */\n    tag_35:\n        /* \"#utility.yul\":9838:9842   */\n      0x00\n        /* \"#utility.yul\":9876:9878   */\n      0x20\n        /* \"#utility.yul\":9865:9874   */\n      dup3\n        /* \"#utility.yul\":9861:9879   */\n      add\n        /* \"#utility.yul\":9853:9879   */\n      swap1\n      pop\n        /* \"#utility.yul\":9889:9960   */\n      tag_307\n        /* \"#utility.yul\":9957:9958   */\n      0x00\n        /* \"#utility.yul\":9946:9955   */\n      dup4\n        /* \"#utility.yul\":9942:9959   */\n      add\n        /* \"#utility.yul\":9933:9939   */\n      dup5\n        /* \"#utility.yul\":9889:9960   */\n      tag_278\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9745:9967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9973:10187   */\n    tag_44:\n        /* \"#utility.yul\":10062:10066   */\n      0x00\n        /* \"#utility.yul\":10100:10102   */\n      0x20\n        /* \"#utility.yul\":10089:10098   */\n      dup3\n        /* \"#utility.yul\":10085:10103   */\n      add\n        /* \"#utility.yul\":10077:10103   */\n      swap1\n      pop\n        /* \"#utility.yul\":10113:10180   */\n      tag_309\n        /* \"#utility.yul\":10177:10178   */\n      0x00\n        /* \"#utility.yul\":10166:10175   */\n      dup4\n        /* \"#utility.yul\":10162:10179   */\n      add\n        /* \"#utility.yul\":10153:10159   */\n      dup5\n        /* \"#utility.yul\":10113:10180   */\n      tag_282\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9973:10187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10274:10373   */\n    tag_236:\n        /* \"#utility.yul\":10326:10332   */\n      0x00\n        /* \"#utility.yul\":10360:10365   */\n      dup2\n        /* \"#utility.yul\":10354:10366   */\n      mload\n        /* \"#utility.yul\":10344:10366   */\n      swap1\n      pop\n        /* \"#utility.yul\":10274:10373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10379:10548   */\n    tag_238:\n        /* \"#utility.yul\":10463:10474   */\n      0x00\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10492:10495   */\n      dup3\n        /* \"#utility.yul\":10485:10504   */\n      mstore\n        /* \"#utility.yul\":10537:10541   */\n      0x20\n        /* \"#utility.yul\":10532:10535   */\n      dup3\n        /* \"#utility.yul\":10528:10542   */\n      add\n        /* \"#utility.yul\":10513:10542   */\n      swap1\n      pop\n        /* \"#utility.yul\":10379:10548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10554:10859   */\n    tag_179:\n        /* \"#utility.yul\":10594:10597   */\n      0x00\n        /* \"#utility.yul\":10613:10633   */\n      tag_315\n        /* \"#utility.yul\":10631:10632   */\n      dup3\n        /* \"#utility.yul\":10613:10633   */\n      tag_281\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10608:10633   */\n      swap2\n      pop\n        /* \"#utility.yul\":10647:10667   */\n      tag_316\n        /* \"#utility.yul\":10665:10666   */\n      dup4\n        /* \"#utility.yul\":10647:10667   */\n      tag_281\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10642:10667   */\n      swap3\n      pop\n        /* \"#utility.yul\":10801:10802   */\n      dup3\n        /* \"#utility.yul\":10733:10799   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10729:10803   */\n      sub\n        /* \"#utility.yul\":10726:10727   */\n      dup3\n        /* \"#utility.yul\":10723:10804   */\n      gt\n        /* \"#utility.yul\":10720:10827   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":10807:10825   */\n      tag_318\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":10720:10827   */\n    tag_317:\n        /* \"#utility.yul\":10851:10852   */\n      dup3\n        /* \"#utility.yul\":10848:10849   */\n      dup3\n        /* \"#utility.yul\":10844:10853   */\n      add\n        /* \"#utility.yul\":10837:10853   */\n      swap1\n      pop\n        /* \"#utility.yul\":10554:10859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10865:10961   */\n    tag_228:\n        /* \"#utility.yul\":10902:10909   */\n      0x00\n        /* \"#utility.yul\":10931:10955   */\n      tag_321\n        /* \"#utility.yul\":10949:10954   */\n      dup3\n        /* \"#utility.yul\":10931:10955   */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10920:10955   */\n      swap1\n      pop\n        /* \"#utility.yul\":10865:10961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10967:11057   */\n    tag_232:\n        /* \"#utility.yul\":11001:11008   */\n      0x00\n        /* \"#utility.yul\":11044:11049   */\n      dup2\n        /* \"#utility.yul\":11037:11050   */\n      iszero\n        /* \"#utility.yul\":11030:11051   */\n      iszero\n        /* \"#utility.yul\":11019:11051   */\n      swap1\n      pop\n        /* \"#utility.yul\":10967:11057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11063:11189   */\n    tag_322:\n        /* \"#utility.yul\":11100:11107   */\n      0x00\n        /* \"#utility.yul\":11140:11182   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11133:11138   */\n      dup3\n        /* \"#utility.yul\":11129:11183   */\n      and\n        /* \"#utility.yul\":11118:11183   */\n      swap1\n      pop\n        /* \"#utility.yul\":11063:11189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11195:11272   */\n    tag_281:\n        /* \"#utility.yul\":11232:11239   */\n      0x00\n        /* \"#utility.yul\":11261:11266   */\n      dup2\n        /* \"#utility.yul\":11250:11266   */\n      swap1\n      pop\n        /* \"#utility.yul\":11195:11272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11278:11364   */\n    tag_285:\n        /* \"#utility.yul\":11313:11320   */\n      0x00\n        /* \"#utility.yul\":11353:11357   */\n      0xff\n        /* \"#utility.yul\":11346:11351   */\n      dup3\n        /* \"#utility.yul\":11342:11358   */\n      and\n        /* \"#utility.yul\":11331:11358   */\n      swap1\n      pop\n        /* \"#utility.yul\":11278:11364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11370:11677   */\n    tag_240:\n        /* \"#utility.yul\":11438:11439   */\n      0x00\n        /* \"#utility.yul\":11448:11561   */\n    tag_328:\n        /* \"#utility.yul\":11462:11468   */\n      dup4\n        /* \"#utility.yul\":11459:11460   */\n      dup2\n        /* \"#utility.yul\":11456:11469   */\n      lt\n        /* \"#utility.yul\":11448:11561   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":11547:11548   */\n      dup1\n        /* \"#utility.yul\":11542:11545   */\n      dup3\n        /* \"#utility.yul\":11538:11549   */\n      add\n        /* \"#utility.yul\":11532:11550   */\n      mload\n        /* \"#utility.yul\":11528:11529   */\n      dup2\n        /* \"#utility.yul\":11523:11526   */\n      dup5\n        /* \"#utility.yul\":11519:11530   */\n      add\n        /* \"#utility.yul\":11512:11551   */\n      mstore\n        /* \"#utility.yul\":11484:11486   */\n      0x20\n        /* \"#utility.yul\":11481:11482   */\n      dup2\n        /* \"#utility.yul\":11477:11487   */\n      add\n        /* \"#utility.yul\":11472:11487   */\n      swap1\n      pop\n        /* \"#utility.yul\":11448:11561   */\n      jump(tag_328)\n    tag_330:\n        /* \"#utility.yul\":11579:11585   */\n      dup4\n        /* \"#utility.yul\":11576:11577   */\n      dup2\n        /* \"#utility.yul\":11573:11586   */\n      gt\n        /* \"#utility.yul\":11570:11671   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":11659:11660   */\n      0x00\n        /* \"#utility.yul\":11650:11656   */\n      dup5\n        /* \"#utility.yul\":11645:11648   */\n      dup5\n        /* \"#utility.yul\":11641:11657   */\n      add\n        /* \"#utility.yul\":11634:11661   */\n      mstore\n        /* \"#utility.yul\":11570:11671   */\n    tag_331:\n        /* \"#utility.yul\":11419:11677   */\n      pop\n        /* \"#utility.yul\":11370:11677   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11683:12003   */\n    tag_89:\n        /* \"#utility.yul\":11727:11733   */\n      0x00\n        /* \"#utility.yul\":11764:11765   */\n      0x02\n        /* \"#utility.yul\":11758:11762   */\n      dup3\n        /* \"#utility.yul\":11754:11766   */\n      div\n        /* \"#utility.yul\":11744:11766   */\n      swap1\n      pop\n        /* \"#utility.yul\":11811:11812   */\n      0x01\n        /* \"#utility.yul\":11805:11809   */\n      dup3\n        /* \"#utility.yul\":11801:11813   */\n      and\n        /* \"#utility.yul\":11832:11850   */\n      dup1\n        /* \"#utility.yul\":11822:11903   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":11888:11892   */\n      0x7f\n        /* \"#utility.yul\":11880:11886   */\n      dup3\n        /* \"#utility.yul\":11876:11893   */\n      and\n        /* \"#utility.yul\":11866:11893   */\n      swap2\n      pop\n        /* \"#utility.yul\":11822:11903   */\n    tag_333:\n        /* \"#utility.yul\":11950:11952   */\n      0x20\n        /* \"#utility.yul\":11942:11948   */\n      dup3\n        /* \"#utility.yul\":11939:11953   */\n      lt\n        /* \"#utility.yul\":11919:11937   */\n      dup2\n        /* \"#utility.yul\":11916:11954   */\n      eq\n        /* \"#utility.yul\":11913:11997   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":11969:11987   */\n      tag_335\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":11913:11997   */\n    tag_334:\n        /* \"#utility.yul\":11734:12003   */\n      pop\n        /* \"#utility.yul\":11683:12003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12009:12189   */\n    tag_319:\n        /* \"#utility.yul\":12057:12134   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12054:12055   */\n      0x00\n        /* \"#utility.yul\":12047:12135   */\n      mstore\n        /* \"#utility.yul\":12154:12158   */\n      0x11\n        /* \"#utility.yul\":12151:12152   */\n      0x04\n        /* \"#utility.yul\":12144:12159   */\n      mstore\n        /* \"#utility.yul\":12178:12182   */\n      0x24\n        /* \"#utility.yul\":12175:12176   */\n      0x00\n        /* \"#utility.yul\":12168:12183   */\n      revert\n        /* \"#utility.yul\":12195:12375   */\n    tag_336:\n        /* \"#utility.yul\":12243:12320   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12240:12241   */\n      0x00\n        /* \"#utility.yul\":12233:12321   */\n      mstore\n        /* \"#utility.yul\":12340:12344   */\n      0x22\n        /* \"#utility.yul\":12337:12338   */\n      0x04\n        /* \"#utility.yul\":12330:12345   */\n      mstore\n        /* \"#utility.yul\":12364:12368   */\n      0x24\n        /* \"#utility.yul\":12361:12362   */\n      0x00\n        /* \"#utility.yul\":12354:12369   */\n      revert\n        /* \"#utility.yul\":12504:12621   */\n    tag_203:\n        /* \"#utility.yul\":12613:12614   */\n      0x00\n        /* \"#utility.yul\":12610:12611   */\n      dup1\n        /* \"#utility.yul\":12603:12615   */\n      revert\n        /* \"#utility.yul\":12627:12729   */\n    tag_242:\n        /* \"#utility.yul\":12668:12674   */\n      0x00\n        /* \"#utility.yul\":12719:12721   */\n      0x1f\n        /* \"#utility.yul\":12715:12722   */\n      not\n        /* \"#utility.yul\":12710:12712   */\n      0x1f\n        /* \"#utility.yul\":12703:12708   */\n      dup4\n        /* \"#utility.yul\":12699:12713   */\n      add\n        /* \"#utility.yul\":12695:12723   */\n      and\n        /* \"#utility.yul\":12685:12723   */\n      swap1\n      pop\n        /* \"#utility.yul\":12627:12729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12735:12959   */\n    tag_247:\n        /* \"#utility.yul\":12875:12909   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12863:12869   */\n      dup3\n        /* \"#utility.yul\":12859:12873   */\n      add\n        /* \"#utility.yul\":12852:12910   */\n      mstore\n        /* \"#utility.yul\":12944:12951   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12939:12941   */\n      0x20\n        /* \"#utility.yul\":12931:12937   */\n      dup3\n        /* \"#utility.yul\":12927:12942   */\n      add\n        /* \"#utility.yul\":12920:12952   */\n      mstore\n        /* \"#utility.yul\":12735:12959   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12965:13188   */\n    tag_252:\n        /* \"#utility.yul\":13105:13139   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":13101:13102   */\n      0x00\n        /* \"#utility.yul\":13093:13099   */\n      dup3\n        /* \"#utility.yul\":13089:13103   */\n      add\n        /* \"#utility.yul\":13082:13140   */\n      mstore\n        /* \"#utility.yul\":13174:13180   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13169:13171   */\n      0x20\n        /* \"#utility.yul\":13161:13167   */\n      dup3\n        /* \"#utility.yul\":13157:13172   */\n      add\n        /* \"#utility.yul\":13150:13181   */\n      mstore\n        /* \"#utility.yul\":12965:13188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13194:13419   */\n    tag_257:\n        /* \"#utility.yul\":13334:13368   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13330:13331   */\n      0x00\n        /* \"#utility.yul\":13322:13328   */\n      dup3\n        /* \"#utility.yul\":13318:13332   */\n      add\n        /* \"#utility.yul\":13311:13369   */\n      mstore\n        /* \"#utility.yul\":13403:13411   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13398:13400   */\n      0x20\n        /* \"#utility.yul\":13390:13396   */\n      dup3\n        /* \"#utility.yul\":13386:13401   */\n      add\n        /* \"#utility.yul\":13379:13412   */\n      mstore\n        /* \"#utility.yul\":13194:13419   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13425:13606   */\n    tag_262:\n        /* \"#utility.yul\":13565:13598   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":13561:13562   */\n      0x00\n        /* \"#utility.yul\":13553:13559   */\n      dup3\n        /* \"#utility.yul\":13549:13563   */\n      add\n        /* \"#utility.yul\":13542:13599   */\n      mstore\n        /* \"#utility.yul\":13425:13606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13612:13794   */\n    tag_267:\n        /* \"#utility.yul\":13752:13786   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13748:13749   */\n      0x00\n        /* \"#utility.yul\":13740:13746   */\n      dup3\n        /* \"#utility.yul\":13736:13750   */\n      add\n        /* \"#utility.yul\":13729:13787   */\n      mstore\n        /* \"#utility.yul\":13612:13794   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13800:14022   */\n    tag_272:\n        /* \"#utility.yul\":13940:13974   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13936:13937   */\n      0x00\n        /* \"#utility.yul\":13928:13934   */\n      dup3\n        /* \"#utility.yul\":13924:13938   */\n      add\n        /* \"#utility.yul\":13917:13975   */\n      mstore\n        /* \"#utility.yul\":14009:14014   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14004:14006   */\n      0x20\n        /* \"#utility.yul\":13996:14002   */\n      dup3\n        /* \"#utility.yul\":13992:14007   */\n      add\n        /* \"#utility.yul\":13985:14015   */\n      mstore\n        /* \"#utility.yul\":13800:14022   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14028:14249   */\n    tag_277:\n        /* \"#utility.yul\":14168:14202   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":14164:14165   */\n      0x00\n        /* \"#utility.yul\":14156:14162   */\n      dup3\n        /* \"#utility.yul\":14152:14166   */\n      add\n        /* \"#utility.yul\":14145:14203   */\n      mstore\n        /* \"#utility.yul\":14237:14241   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14232:14234   */\n      0x20\n        /* \"#utility.yul\":14224:14230   */\n      dup3\n        /* \"#utility.yul\":14220:14235   */\n      add\n        /* \"#utility.yul\":14213:14242   */\n      mstore\n        /* \"#utility.yul\":14028:14249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14255:14377   */\n    tag_195:\n        /* \"#utility.yul\":14328:14352   */\n      tag_351\n        /* \"#utility.yul\":14346:14351   */\n      dup2\n        /* \"#utility.yul\":14328:14352   */\n      tag_228\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":14321:14326   */\n      dup2\n        /* \"#utility.yul\":14318:14353   */\n      eq\n        /* \"#utility.yul\":14308:14371   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":14367:14368   */\n      0x00\n        /* \"#utility.yul\":14364:14365   */\n      dup1\n        /* \"#utility.yul\":14357:14369   */\n      revert\n        /* \"#utility.yul\":14308:14371   */\n    tag_352:\n        /* \"#utility.yul\":14255:14377   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14383:14505   */\n    tag_199:\n        /* \"#utility.yul\":14456:14480   */\n      tag_354\n        /* \"#utility.yul\":14474:14479   */\n      dup2\n        /* \"#utility.yul\":14456:14480   */\n      tag_281\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":14449:14454   */\n      dup2\n        /* \"#utility.yul\":14446:14481   */\n      eq\n        /* \"#utility.yul\":14436:14499   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":14495:14496   */\n      0x00\n        /* \"#utility.yul\":14492:14493   */\n      dup1\n        /* \"#utility.yul\":14485:14497   */\n      revert\n        /* \"#utility.yul\":14436:14499   */\n    tag_355:\n        /* \"#utility.yul\":14383:14505   */\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122044b4f0634d1542fd864f55d3ffa58ab488e0c89e1600caa5020da54b03ec150964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1024": {
									"entryPoint": null,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_389": {
									"entryPoint": null,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_863": {
									"entryPoint": null,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_875": {
									"entryPoint": 616,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3823:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:5",
														"type": ""
													}
												],
												"src": "7:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:5",
														"type": ""
													}
												],
												"src": "131:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "432:775:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "442:15:5",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "451:6:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "442:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "466:14:5",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "475:5:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "466:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:677:5",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "612:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "614:16:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "614:18:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "614:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "590:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "600:3:5"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "605:4:5"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "596:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "596:14:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "587:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "587:24:5"
																		},
																		"nodeType": "YulIf",
																		"src": "584:50:5"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "679:419:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1059:25:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "1072:5:5"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "1079:4:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "1068:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1068:16:5"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "1059:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "654:8:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "664:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "650:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:16:5"
																		},
																		"nodeType": "YulIf",
																		"src": "647:451:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1111:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1123:4:5"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1129:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "1119:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1119:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "1111:4:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1147:44:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1182:8:5"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "1159:22:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1159:32:5"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1147:8:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "500:8:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "510:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "497:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:15:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "513:2:5",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "493:3:5",
																"statements": []
															},
															"src": "489:712:5"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "387:6:5",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "395:5:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "402:8:5",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "412:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "420:5:5",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "427:4:5",
														"type": ""
													}
												],
												"src": "359:848:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1279:219:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1289:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1315:4:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1297:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1297:23:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "1289:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1329:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1359:8:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1341:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:27:5"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "1329:8:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1378:113:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1408:4:5"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1414:8:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1424:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1387:20:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1387:104:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1378:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1254:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1260:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1273:5:5",
														"type": ""
													}
												],
												"src": "1213:285:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1564:1013:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1759:20:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1761:10:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1770:1:5",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1761:5:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1772:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1749:8:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:16:5"
															},
															"nodeType": "YulIf",
															"src": "1739:40:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1804:20:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1806:10:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1815:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1806:5:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1817:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1798:4:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1791:12:5"
															},
															"nodeType": "YulIf",
															"src": "1788:36:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1934:20:5",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1936:10:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1945:1:5",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1936:5:5"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1947:5:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1927:27:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1978:176:5",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2013:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "2015:16:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2015:18:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2015:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1998:8:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2008:3:5",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1995:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1995:17:5"
																				},
																				"nodeType": "YulIf",
																				"src": "1992:43:5"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "2048:25:5",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2061:1:5",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "2064:8:5"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "2057:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2057:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "2048:5:5"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2104:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "2106:16:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2106:18:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2106:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "2092:5:5"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "2099:3:5"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "2089:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2089:14:5"
																				},
																				"nodeType": "YulIf",
																				"src": "2086:40:5"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "2139:5:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1963:191:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1968:1:5",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "1884:4:5"
															},
															"nodeType": "YulSwitch",
															"src": "1877:277:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2286:123:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:28:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2313:4:5"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2319:8:5"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "2309:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2309:19:5"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2300:5:5"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2359:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "2361:16:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2361:18:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2361:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "2347:5:5"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "2354:3:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "2344:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2344:14:5"
																		},
																		"nodeType": "YulIf",
																		"src": "2341:40:5"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2394:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "2189:4:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2195:2:5",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2186:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2186:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "2203:8:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2213:2:5",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2200:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2200:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2182:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2182:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "2238:4:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2244:3:5",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2235:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2235:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "2253:8:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2263:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2250:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2250:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2231:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2231:36:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2166:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:111:5"
															},
															"nodeType": "YulIf",
															"src": "2163:246:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2419:57:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2456:4:5"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2462:8:5"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "2472:3:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "2434:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2434:42:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2419:5:5"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2426:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2515:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2517:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2517:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2517:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "2492:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:5"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "2508:4:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "2499:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:14:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2489:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:25:5"
															},
															"nodeType": "YulIf",
															"src": "2486:51:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2546:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "2559:5:5"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2566:4:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2555:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:16:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2546:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1534:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1540:8:5",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "1550:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1558:5:5",
														"type": ""
													}
												],
												"src": "1504:1073:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:300:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2641:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2664:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2646:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2641:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2675:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2698:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2680:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2675:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2875:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2875:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2785:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2778:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2778:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2771:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2771:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2793:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2800:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2868:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2796:74:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2790:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2790:81:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2767:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:105:5"
															},
															"nodeType": "YulIf",
															"src": "2764:131:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2905:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2920:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2923:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2916:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2905:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2614:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2617:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2623:7:5",
														"type": ""
													}
												],
												"src": "2583:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2982:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2992:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3003:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2992:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2964:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2974:7:5",
														"type": ""
													}
												],
												"src": "2937:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3071:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3081:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3095:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3101:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3081:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3112:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3142:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3148:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3138:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3116:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3189:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3203:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3217:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3225:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3213:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3213:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3203:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3169:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:26:5"
															},
															"nodeType": "YulIf",
															"src": "3159:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3292:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3306:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3306:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3306:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3256:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3279:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3276:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3276:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3253:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3253:38:5"
															},
															"nodeType": "YulIf",
															"src": "3250:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3055:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3064:6:5",
														"type": ""
													}
												],
												"src": "3020:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3374:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3391:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3394:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3384:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3384:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3488:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3481:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3515:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3505:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3505:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3505:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3346:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3560:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3577:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3570:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3674:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3677:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3667:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3667:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3691:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3691:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3691:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3532:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3769:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3779:34:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3807:5:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3800:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:13:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3779:8:5"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3750:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3760:8:5",
														"type": ""
													}
												],
												"src": "3718:102:5"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200026860201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600781526020017f4c6f747465727900000000000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000270565b506040518060400160405280600481526020017f4c4f544500000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000270565b506012600460006101000a81548160ff021916908360ff160217905550600460009054906101000a900460ff1660ff16600a6200019b9190620003a9565b633b9aca00620001ac9190620004e6565b600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040516200025a919062000331565b60405180910390a3620005f2565b600033905090565b8280546200027e9062000551565b90600052602060002090601f016020900481019282620002a25760008555620002ee565b82601f10620002bd57805160ff1916838001178555620002ee565b82800160010185558215620002ee579182015b82811115620002ed578251825591602001919060010190620002d0565b5b509050620002fd919062000301565b5090565b5b808211156200031c57600081600090555060010162000302565b5090565b6200032b8162000547565b82525050565b600060208201905062000348600083018462000320565b92915050565b6000808291508390505b6001851115620003a05780860481111562000378576200037762000587565b5b6001851615620003885780820291505b80810290506200039885620005e5565b945062000358565b94509492505050565b6000620003b68262000547565b9150620003c38362000547565b9250620003f27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620003fa565b905092915050565b6000826200040c5760019050620004df565b816200041c5760009050620004df565b8160018114620004355760028114620004405762000476565b6001915050620004df565b60ff84111562000455576200045462000587565b5b8360020a9150848211156200046f576200046e62000587565b5b50620004df565b5060208310610133831016604e8410600b8410161715620004b05782820a905083811115620004aa57620004a962000587565b5b620004df565b620004bf84848460016200034e565b92509050818404811115620004d957620004d862000587565b5b81810290505b9392505050565b6000620004f38262000547565b9150620005008362000547565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200053c576200053b62000587565b5b828202905092915050565b6000819050919050565b600060028204905060018216806200056a57607f821691505b60208210811415620005815762000580620005b6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60008160011c9050919050565b611aec80620006026000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a9190611560565b60405180910390f35b61013d60048036038101906101389190611353565b6103f1565b60405161014a9190611545565b60405180910390f35b61015b61040f565b6040516101689190611662565b60405180910390f35b61018b60048036038101906101869190611300565b610419565b6040516101989190611545565b60405180910390f35b6101a96104f2565b6040516101b6919061167d565b60405180910390f35b6101d960048036038101906101d49190611353565b610509565b6040516101e69190611545565b60405180910390f35b61020960048036038101906102049190611293565b6105bc565b6040516102169190611662565b60405180910390f35b610227610605565b005b610231610758565b60405161023e919061152a565b60405180910390f35b61024f610767565b60405161025c919061152a565b60405180910390f35b61026d610790565b60405161027a9190611560565b60405180910390f35b61029d60048036038101906102989190611393565b610822565b6040516102aa9190611545565b60405180910390f35b6102cd60048036038101906102c89190611353565b6108d3565b6040516102da9190611545565b60405180910390f35b6102fd60048036038101906102f89190611353565b6109a0565b60405161030a9190611545565b60405180910390f35b61032d600480360381019061032891906112c0565b6109be565b60405161033a9190611662565b60405180910390f35b61035d60048036038101906103589190611293565b610a45565b005b60606006805461036e90611792565b80601f016020809104026020016040519081016040528092919081815260200182805461039a90611792565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb9565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611a4460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f9c90919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190611602565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f90611792565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90611792565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611602565b60405180910390fd5b6108ca6108c4610ae6565b83610fb2565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611a92602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb9565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad190611602565b60405180910390fd5b610ae38161113c565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b55906115a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc590611642565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610cac9190611662565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2090611582565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9090611622565b60405180910390fd5b610e0581604051806060016040528060268152602001611a6c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f9c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3a9190611662565b60405180910390a3505050565b6000838311158290610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f869190611560565b60405180910390fd5b5082840390509392505050565b60008183610faa91906116b4565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611022576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611019906115e2565b60405180910390fd5b61103781600354610f9c90919063ffffffff16565b60038190555061108f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f9c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111309190611662565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a3906115c2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061127881611a15565b92915050565b60008135905061128d81611a2c565b92915050565b6000602082840312156112a9576112a8611822565b5b60006112b784828501611269565b91505092915050565b600080604083850312156112d7576112d6611822565b5b60006112e585828601611269565b92505060206112f685828601611269565b9150509250929050565b60008060006060848603121561131957611318611822565b5b600061132786828701611269565b935050602061133886828701611269565b92505060406113498682870161127e565b9150509250925092565b6000806040838503121561136a57611369611822565b5b600061137885828601611269565b92505060206113898582860161127e565b9150509250929050565b6000602082840312156113a9576113a8611822565b5b60006113b78482850161127e565b91505092915050565b6113c98161170a565b82525050565b6113d88161171c565b82525050565b60006113e982611698565b6113f381856116a3565b935061140381856020860161175f565b61140c81611827565b840191505092915050565b60006114246025836116a3565b915061142f82611838565b604082019050919050565b60006114476024836116a3565b915061145282611887565b604082019050919050565b600061146a6026836116a3565b9150611475826118d6565b604082019050919050565b600061148d601f836116a3565b915061149882611925565b602082019050919050565b60006114b06020836116a3565b91506114bb8261194e565b602082019050919050565b60006114d36023836116a3565b91506114de82611977565b604082019050919050565b60006114f66022836116a3565b9150611501826119c6565b604082019050919050565b61151581611748565b82525050565b61152481611752565b82525050565b600060208201905061153f60008301846113c0565b92915050565b600060208201905061155a60008301846113cf565b92915050565b6000602082019050818103600083015261157a81846113de565b905092915050565b6000602082019050818103600083015261159b81611417565b9050919050565b600060208201905081810360008301526115bb8161143a565b9050919050565b600060208201905081810360008301526115db8161145d565b9050919050565b600060208201905081810360008301526115fb81611480565b9050919050565b6000602082019050818103600083015261161b816114a3565b9050919050565b6000602082019050818103600083015261163b816114c6565b9050919050565b6000602082019050818103600083015261165b816114e9565b9050919050565b6000602082019050611677600083018461150c565b92915050565b6000602082019050611692600083018461151b565b92915050565b600081519050919050565b600082825260208201905092915050565b60006116bf82611748565b91506116ca83611748565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116ff576116fe6117c4565b5b828201905092915050565b600061171582611728565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561177d578082015181840152602081019050611762565b8381111561178c576000848401525b50505050565b600060028204905060018216806117aa57607f821691505b602082108114156117be576117bd6117f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b611a1e8161170a565b8114611a2957600080fd5b50565b611a3581611748565b8114611a4057600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122044b4f0634d1542fd864f55d3ffa58ab488e0c89e1600caa5020da54b03ec150964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x268 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6F747465727900000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x270 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C4F544500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x270 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA PUSH3 0x19B SWAP2 SWAP1 PUSH3 0x3A9 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH3 0x1AC SWAP2 SWAP1 PUSH3 0x4E6 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH3 0x25A SWAP2 SWAP1 PUSH3 0x331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x5F2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x27E SWAP1 PUSH3 0x551 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2A2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2EE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2BD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2EE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2EE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2ED JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2D0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2FD SWAP2 SWAP1 PUSH3 0x301 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x31C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x302 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x32B DUP2 PUSH3 0x547 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x348 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x320 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x3A0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x378 JUMPI PUSH3 0x377 PUSH3 0x587 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x388 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x398 DUP6 PUSH3 0x5E5 JUMP JUMPDEST SWAP5 POP PUSH3 0x358 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B6 DUP3 PUSH3 0x547 JUMP JUMPDEST SWAP2 POP PUSH3 0x3C3 DUP4 PUSH3 0x547 JUMP JUMPDEST SWAP3 POP PUSH3 0x3F2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x3FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x40C JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x4DF JUMP JUMPDEST DUP2 PUSH3 0x41C JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x4DF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x435 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x440 JUMPI PUSH3 0x476 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x4DF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x455 JUMPI PUSH3 0x454 PUSH3 0x587 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x46F JUMPI PUSH3 0x46E PUSH3 0x587 JUMP JUMPDEST JUMPDEST POP PUSH3 0x4DF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x4B0 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x4AA JUMPI PUSH3 0x4A9 PUSH3 0x587 JUMP JUMPDEST JUMPDEST PUSH3 0x4DF JUMP JUMPDEST PUSH3 0x4BF DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x34E JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x4D9 JUMPI PUSH3 0x4D8 PUSH3 0x587 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4F3 DUP3 PUSH3 0x547 JUMP JUMPDEST SWAP2 POP PUSH3 0x500 DUP4 PUSH3 0x547 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x53C JUMPI PUSH3 0x53B PUSH3 0x587 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x56A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x581 JUMPI PUSH3 0x580 PUSH3 0x5B6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEC DUP1 PUSH3 0x602 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x1792 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x1792 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A44 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x1792 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1792 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x8C4 PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 PUSH2 0x8E0 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x991 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A92 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x90A PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AD PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0x113C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB55 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD90 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE05 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE9A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1022 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1019 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1037 DUP2 PUSH1 0x3 SLOAD PUSH2 0xF9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x108F DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A3 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1278 DUP2 PUSH2 0x1A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x128D DUP2 PUSH2 0x1A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A9 JUMPI PUSH2 0x12A8 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D7 JUMPI PUSH2 0x12D6 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E5 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F6 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1319 JUMPI PUSH2 0x1318 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1327 DUP7 DUP3 DUP8 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1338 DUP7 DUP3 DUP8 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1349 DUP7 DUP3 DUP8 ADD PUSH2 0x127E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136A JUMPI PUSH2 0x1369 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1378 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1389 DUP6 DUP3 DUP7 ADD PUSH2 0x127E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A9 JUMPI PUSH2 0x13A8 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B7 DUP5 DUP3 DUP6 ADD PUSH2 0x127E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C9 DUP2 PUSH2 0x170A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x171C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x13F3 DUP2 DUP6 PUSH2 0x16A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1403 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x175F JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x1827 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1424 PUSH1 0x25 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x142F DUP3 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1447 PUSH1 0x24 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1452 DUP3 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146A PUSH1 0x26 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1475 DUP3 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148D PUSH1 0x1F DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1498 DUP3 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B0 PUSH1 0x20 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BB DUP3 PUSH2 0x194E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D3 PUSH1 0x23 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DE DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F6 PUSH1 0x22 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1501 DUP3 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1515 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1524 DUP2 PUSH2 0x1752 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x153F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157A DUP2 DUP5 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159B DUP2 PUSH2 0x1417 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15BB DUP2 PUSH2 0x143A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15DB DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15FB DUP2 PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161B DUP2 PUSH2 0x14A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x163B DUP2 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x165B DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1677 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1692 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x151B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0x1748 JUMP JUMPDEST SWAP2 POP PUSH2 0x16CA DUP4 PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16FF JUMPI PUSH2 0x16FE PUSH2 0x17C4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1715 DUP3 PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x177D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1762 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x178C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17BE JUMPI PUSH2 0x17BD PUSH2 0x17F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1A1E DUP2 PUSH2 0x170A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 DIFFICULTY 0xB4 CREATE PUSH4 0x4D1542FD DUP7 0x4F SSTORE 0xD3 SELFDESTRUCT 0xA5 DUP11 0xB4 DUP9 0xE0 0xC8 SWAP15 AND STOP 0xCA 0xA5 MUL 0xD 0xA5 0x4B SUB 0xEC ISZERO MULMOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "201:7674:1:-:0;;;519:256;;;;;;;;;;848:17:4;868:12;:10;;;:12;;:::i;:::-;848:32;;895:9;886:6;;:18;;;;;;;;;;;;;;;;;;948:9;915:43;;944:1;915:43;;;;;;;;;;;;842:121;539:17:1;;;;;;;;;;;;;;;;;:5;:17;;;;;;;;;;;;:::i;:::-;;562:16;;;;;;;;;;;;;;;;;:7;:16;;;;;;;;;;;;:::i;:::-;;596:2;584:9;;:14;;;;;;;;;;;;;;;;;;646:9;;;;;;;;;;;638:18;;632:2;:24;;;;:::i;:::-;619:10;:38;;;;:::i;:::-;604:12;:53;;;;700:12;;676:9;:21;686:10;676:21;;;;;;;;;;;;;;;:36;;;;745:10;724:46;;741:1;724:46;;;757:12;;724:46;;;;;;:::i;:::-;;;;;;;;201:7674;;763:99:2;808:15;846:10;831:26;;763:99;:::o;201:7674:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:118:5:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:848::-;420:5;427:4;451:6;442:15;;475:5;466:14;;489:712;510:1;500:8;497:15;489:712;;;605:4;600:3;596:14;590:4;587:24;584:50;;;614:18;;:::i;:::-;584:50;664:1;654:8;650:16;647:451;;;1079:4;1072:5;1068:16;1059:25;;647:451;1129:4;1123;1119:15;1111:23;;1159:32;1182:8;1159:32;:::i;:::-;1147:44;;489:712;;;359:848;;;;;;;:::o;1213:285::-;1273:5;1297:23;1315:4;1297:23;:::i;:::-;1289:31;;1341:27;1359:8;1341:27;:::i;:::-;1329:39;;1387:104;1424:66;1414:8;1408:4;1387:104;:::i;:::-;1378:113;;1213:285;;;;:::o;1504:1073::-;1558:5;1749:8;1739:40;;1770:1;1761:10;;1772:5;;1739:40;1798:4;1788:36;;1815:1;1806:10;;1817:5;;1788:36;1884:4;1932:1;1927:27;;;;1968:1;1963:191;;;;1877:277;;1927:27;1945:1;1936:10;;1947:5;;;1963:191;2008:3;1998:8;1995:17;1992:43;;;2015:18;;:::i;:::-;1992:43;2064:8;2061:1;2057:16;2048:25;;2099:3;2092:5;2089:14;2086:40;;;2106:18;;:::i;:::-;2086:40;2139:5;;;1877:277;;2263:2;2253:8;2250:16;2244:3;2238:4;2235:13;2231:36;2213:2;2203:8;2200:16;2195:2;2189:4;2186:12;2182:35;2166:111;2163:246;;;2319:8;2313:4;2309:19;2300:28;;2354:3;2347:5;2344:14;2341:40;;;2361:18;;:::i;:::-;2341:40;2394:5;;2163:246;2434:42;2472:3;2462:8;2456:4;2453:1;2434:42;:::i;:::-;2419:57;;;;2508:4;2503:3;2499:14;2492:5;2489:25;2486:51;;;2517:18;;:::i;:::-;2486:51;2566:4;2559:5;2555:16;2546:25;;1504:1073;;;;;;:::o;2583:348::-;2623:7;2646:20;2664:1;2646:20;:::i;:::-;2641:25;;2680:20;2698:1;2680:20;:::i;:::-;2675:25;;2868:1;2800:66;2796:74;2793:1;2790:81;2785:1;2778:9;2771:17;2767:105;2764:131;;;2875:18;;:::i;:::-;2764:131;2923:1;2920;2916:9;2905:20;;2583:348;;;;:::o;2937:77::-;2974:7;3003:5;2992:16;;2937:77;;;:::o;3020:320::-;3064:6;3101:1;3095:4;3091:12;3081:22;;3148:1;3142:4;3138:12;3169:18;3159:81;;3225:4;3217:6;3213:17;3203:27;;3159:81;3287:2;3279:6;3276:14;3256:18;3253:38;3250:84;;;3306:18;;:::i;:::-;3250:84;3071:269;3020:320;;;:::o;3346:180::-;3394:77;3391:1;3384:88;3491:4;3488:1;3481:15;3515:4;3512:1;3505:15;3532:180;3580:77;3577:1;3570:88;3677:4;3674:1;3667:15;3701:4;3698:1;3691:15;3718:102;3760:8;3807:5;3804:1;3800:13;3779:34;;3718:102;;;:::o;201:7674:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_826": {
									"entryPoint": 2798,
									"id": 826,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_734": {
									"entryPoint": 4018,
									"id": 734,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_875": {
									"entryPoint": 2790,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1107": {
									"entryPoint": 4412,
									"id": 1107,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_688": {
									"entryPoint": 3257,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 3996,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_493": {
									"entryPoint": 2494,
									"id": 493,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_514": {
									"entryPoint": 1009,
									"id": 514,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_454": {
									"entryPoint": 1468,
									"id": 454,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_410": {
									"entryPoint": 1266,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_609": {
									"entryPoint": 2259,
									"id": 609,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_400": {
									"entryPoint": 1880,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_580": {
									"entryPoint": 1289,
									"id": 580,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_628": {
									"entryPoint": 2082,
									"id": 628,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_430": {
									"entryPoint": 863,
									"id": 430,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1033": {
									"entryPoint": 1895,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1068": {
									"entryPoint": 1541,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_260": {
									"entryPoint": 3911,
									"id": 260,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_420": {
									"entryPoint": 1936,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_440": {
									"entryPoint": 1039,
									"id": 440,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_552": {
									"entryPoint": 1049,
									"id": 552,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1081": {
									"entryPoint": 2629,
									"id": 1081,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_475": {
									"entryPoint": 2464,
									"id": 475,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6084,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3": {
									"entryPoint": 6437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 6598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14508:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:5",
														"type": ""
													}
												],
												"src": "152:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:5"
															},
															"nodeType": "YulIf",
															"src": "373:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:5",
														"type": ""
													}
												],
												"src": "297:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:5"
															},
															"nodeType": "YulIf",
															"src": "725:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:5",
														"type": ""
													}
												],
												"src": "632:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:5"
															},
															"nodeType": "YulIf",
															"src": "1222:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:5",
														"type": ""
													}
												],
												"src": "1112:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:5"
															},
															"nodeType": "YulIf",
															"src": "1830:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:5",
														"type": ""
													}
												],
												"src": "1737:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2329:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2331:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2331:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2331:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2304:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2300:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:32:5"
															},
															"nodeType": "YulIf",
															"src": "2293:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2422:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2437:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2441:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2466:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2501:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2512:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2497:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2497:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2521:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2476:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2466:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2253:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2264:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:5",
														"type": ""
													}
												],
												"src": "2217:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2617:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2634:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2657:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2639:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2627:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2605:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2612:3:5",
														"type": ""
													}
												],
												"src": "2552:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2735:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2752:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2772:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2757:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2757:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2745:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2745:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2745:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2723:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2730:3:5",
														"type": ""
													}
												],
												"src": "2676:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2893:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2940:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2907:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2897:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2955:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3021:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3026:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2962:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3068:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3075:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3064:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3064:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3087:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3042:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3042:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3103:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3114:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3141:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3119:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3110:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3103:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2871:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:5",
														"type": ""
													}
												],
												"src": "2791:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3307:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3317:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3383:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3388:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3324:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3317:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3489:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "3400:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3400:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3502:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3513:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3518:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3502:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3295:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3303:3:5",
														"type": ""
													}
												],
												"src": "3161:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3689:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3755:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3760:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3696:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3689:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "3772:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3772:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3885:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3881:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3874:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3667:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3675:3:5",
														"type": ""
													}
												],
												"src": "3533:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4051:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4061:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4127:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4132:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4068:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4233:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4144:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4144:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4246:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4257:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4262:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4253:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4039:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4047:3:5",
														"type": ""
													}
												],
												"src": "3905:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4423:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4433:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4499:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4504:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4440:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																	"nodeType": "YulIdentifier",
																	"src": "4516:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4516:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4618:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4629:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4625:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4411:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4419:3:5",
														"type": ""
													}
												],
												"src": "4277:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4795:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4805:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4871:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4876:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4812:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4977:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4888:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4888:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4990:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5001:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5006:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4997:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4997:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4783:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4791:3:5",
														"type": ""
													}
												],
												"src": "4649:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5167:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5177:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5243:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5248:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5184:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5349:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "5260:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5260:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5362:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5373:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5378:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5369:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5155:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5163:3:5",
														"type": ""
													}
												],
												"src": "5021:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5549:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5615:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5620:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5556:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5721:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "5632:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5632:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5734:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5745:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5750:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5741:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5527:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5535:3:5",
														"type": ""
													}
												],
												"src": "5393:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5830:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5847:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5870:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5852:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5852:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5840:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5840:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5818:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5825:3:5",
														"type": ""
													}
												],
												"src": "5765:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5950:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5967:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5988:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5972:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5972:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5960:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5938:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5945:3:5",
														"type": ""
													}
												],
												"src": "5889:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6105:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6115:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6127:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6138:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6123:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6115:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6195:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6208:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6219:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6204:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6204:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6151:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6151:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6151:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6077:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6089:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6100:4:5",
														"type": ""
													}
												],
												"src": "6007:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6327:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6337:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6349:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6360:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6345:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6337:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6411:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6435:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6420:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6373:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6373:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6373:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6299:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6311:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6322:4:5",
														"type": ""
													}
												],
												"src": "6235:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6569:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6579:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6591:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6602:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6587:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6579:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6626:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6637:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6622:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6622:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6645:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6651:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6641:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6641:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6615:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6615:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6671:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6743:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6752:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6679:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6679:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6671:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6541:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6553:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6564:4:5",
														"type": ""
													}
												],
												"src": "6451:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6941:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6951:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6974:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6959:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6951:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7009:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6994:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7017:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7023:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7013:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6987:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7043:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7177:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7051:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7051:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7043:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6921:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6936:4:5",
														"type": ""
													}
												],
												"src": "6770:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7366:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7376:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7388:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7399:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7384:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7376:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7423:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7434:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7419:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7419:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7442:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7448:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7412:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7412:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7412:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7468:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7602:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7476:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7468:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7346:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7361:4:5",
														"type": ""
													}
												],
												"src": "7195:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7791:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7801:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7813:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7824:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7801:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7848:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7859:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7844:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7844:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7867:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7873:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7863:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7863:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7837:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7837:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7837:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7893:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8027:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7901:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7901:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7893:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7771:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7786:4:5",
														"type": ""
													}
												],
												"src": "7620:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8216:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8226:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8238:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8226:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8273:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8284:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8269:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8269:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8292:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8298:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8288:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8288:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8262:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8262:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8318:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8452:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8326:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8326:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8318:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8196:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8211:4:5",
														"type": ""
													}
												],
												"src": "8045:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8641:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8651:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8663:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8674:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8659:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8659:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8651:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8698:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8709:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8694:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8717:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8723:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8713:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8713:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8687:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8687:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8687:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8743:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8877:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8751:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8751:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8743:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8621:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8636:4:5",
														"type": ""
													}
												],
												"src": "8470:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9066:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9076:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9088:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9099:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9084:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9076:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9123:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9134:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9119:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9142:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9148:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9138:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9138:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9112:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9112:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9168:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9302:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9176:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9176:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9168:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9046:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9061:4:5",
														"type": ""
													}
												],
												"src": "8895:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9491:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9501:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9513:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9524:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9509:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9501:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9548:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9559:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9544:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9544:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9567:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9573:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9563:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9563:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9537:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9537:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9537:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9593:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9727:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9601:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9601:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9593:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9471:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9486:4:5",
														"type": ""
													}
												],
												"src": "9320:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9843:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9853:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9865:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9876:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9861:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9861:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9853:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9933:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9946:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9957:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9942:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9942:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9889:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9889:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9889:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9815:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9827:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9838:4:5",
														"type": ""
													}
												],
												"src": "9745:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10067:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10077:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10089:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10100:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10085:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10077:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10153:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10166:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10177:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10162:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10162:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10113:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10113:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10113:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10039:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10051:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10062:4:5",
														"type": ""
													}
												],
												"src": "9973:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10233:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10243:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10259:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10253:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10253:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10243:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10226:6:5",
														"type": ""
													}
												],
												"src": "10193:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10333:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10344:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10360:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10354:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10354:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10344:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10316:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10326:6:5",
														"type": ""
													}
												],
												"src": "10274:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10475:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10492:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10485:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10485:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10513:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10532:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10537:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10528:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10528:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10513:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10447:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10452:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10463:11:5",
														"type": ""
													}
												],
												"src": "10379:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10598:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10608:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10631:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10613:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10613:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10608:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10642:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10665:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10647:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10647:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10642:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10805:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10807:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10807:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10807:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10726:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10733:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10801:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10729:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10729:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10723:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10723:81:5"
															},
															"nodeType": "YulIf",
															"src": "10720:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10837:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10848:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10851:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10844:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10844:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10837:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10585:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10588:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10594:3:5",
														"type": ""
													}
												],
												"src": "10554:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10910:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10920:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10949:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10931:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10931:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10920:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10892:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10902:7:5",
														"type": ""
													}
												],
												"src": "10865:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11009:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11019:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11044:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11037:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11037:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11019:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10991:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11001:7:5",
														"type": ""
													}
												],
												"src": "10967:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11108:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11118:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11133:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11140:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11118:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11090:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11100:7:5",
														"type": ""
													}
												],
												"src": "11063:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11240:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11250:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11261:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11250:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11222:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11232:7:5",
														"type": ""
													}
												],
												"src": "11195:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11321:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11331:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11346:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11353:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11342:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11331:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11303:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11313:7:5",
														"type": ""
													}
												],
												"src": "11278:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11419:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11429:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11438:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11433:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11498:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11523:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11528:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11519:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11519:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11542:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11547:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11538:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11538:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11532:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11532:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11512:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11512:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11512:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11459:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11462:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11456:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11470:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11472:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11481:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11484:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11477:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11477:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11472:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11452:3:5",
																"statements": []
															},
															"src": "11448:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11595:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11645:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11650:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11641:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11641:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11659:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11634:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11634:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11634:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11576:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11579:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11573:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11573:13:5"
															},
															"nodeType": "YulIf",
															"src": "11570:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11401:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11406:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11411:6:5",
														"type": ""
													}
												],
												"src": "11370:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11734:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11744:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11758:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11764:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11754:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11744:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11775:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11805:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11811:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11801:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11801:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11779:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11852:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11866:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11880:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11888:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11876:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11876:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11866:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11832:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11825:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11825:26:5"
															},
															"nodeType": "YulIf",
															"src": "11822:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11955:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11969:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11969:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11969:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11919:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11942:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11950:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11939:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11939:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11916:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:38:5"
															},
															"nodeType": "YulIf",
															"src": "11913:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11718:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11727:6:5",
														"type": ""
													}
												],
												"src": "11683:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12037:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12054:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12057:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12047:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12047:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12047:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12151:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12154:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12144:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12144:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12175:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12178:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12168:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12168:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12168:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12009:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12223:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12243:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12233:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12233:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12233:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12337:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12340:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12330:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12330:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12330:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12361:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12364:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12354:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12354:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12354:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12195:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12470:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12487:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12490:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12480:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12480:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12480:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12381:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12593:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12610:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12613:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12603:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12603:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12603:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12504:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12675:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12685:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12703:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12710:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12699:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12699:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12719:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12715:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12715:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12695:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12695:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12685:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12658:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12668:6:5",
														"type": ""
													}
												],
												"src": "12627:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12841:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12863:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12859:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12859:14:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12875:34:5",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12852:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12852:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12852:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12931:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12939:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12927:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12927:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12944:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12920:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12920:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12920:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12833:6:5",
														"type": ""
													}
												],
												"src": "12735:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13071:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13093:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13101:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13089:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13089:14:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13105:34:5",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13082:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13082:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13082:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13161:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13169:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13157:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13157:15:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13174:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13150:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13150:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13150:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13063:6:5",
														"type": ""
													}
												],
												"src": "12965:223:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13300:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13322:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13330:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13318:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13318:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13334:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13311:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13311:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13311:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13390:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13398:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13386:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13386:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13403:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13379:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13379:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13379:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13292:6:5",
														"type": ""
													}
												],
												"src": "13194:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13531:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13553:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13561:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13549:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13549:14:5"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13565:33:5",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13542:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13542:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13542:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13523:6:5",
														"type": ""
													}
												],
												"src": "13425:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13718:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13740:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13748:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13736:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13736:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13752:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13729:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13729:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13729:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13710:6:5",
														"type": ""
													}
												],
												"src": "13612:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13906:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13928:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13936:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13924:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13924:14:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13940:34:5",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13917:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13917:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13917:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13996:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14004:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13992:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13992:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14009:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13985:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13985:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13985:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13898:6:5",
														"type": ""
													}
												],
												"src": "13800:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14134:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14156:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14164:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14152:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14152:14:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14168:34:5",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14145:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14145:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14224:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14232:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14220:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14220:15:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14237:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14213:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14213:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14213:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14126:6:5",
														"type": ""
													}
												],
												"src": "14028:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14298:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14355:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14364:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14367:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14357:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14357:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14357:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14321:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14346:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14328:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14328:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14318:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14318:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14311:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14311:43:5"
															},
															"nodeType": "YulIf",
															"src": "14308:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14291:5:5",
														"type": ""
													}
												],
												"src": "14255:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14426:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14483:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14492:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14495:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14485:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14485:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14485:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14449:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14474:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14456:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14456:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14446:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14446:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14439:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14439:43:5"
															},
															"nodeType": "YulIf",
															"src": "14436:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14419:5:5",
														"type": ""
													}
												],
												"src": "14383:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a9190611560565b60405180910390f35b61013d60048036038101906101389190611353565b6103f1565b60405161014a9190611545565b60405180910390f35b61015b61040f565b6040516101689190611662565b60405180910390f35b61018b60048036038101906101869190611300565b610419565b6040516101989190611545565b60405180910390f35b6101a96104f2565b6040516101b6919061167d565b60405180910390f35b6101d960048036038101906101d49190611353565b610509565b6040516101e69190611545565b60405180910390f35b61020960048036038101906102049190611293565b6105bc565b6040516102169190611662565b60405180910390f35b610227610605565b005b610231610758565b60405161023e919061152a565b60405180910390f35b61024f610767565b60405161025c919061152a565b60405180910390f35b61026d610790565b60405161027a9190611560565b60405180910390f35b61029d60048036038101906102989190611393565b610822565b6040516102aa9190611545565b60405180910390f35b6102cd60048036038101906102c89190611353565b6108d3565b6040516102da9190611545565b60405180910390f35b6102fd60048036038101906102f89190611353565b6109a0565b60405161030a9190611545565b60405180910390f35b61032d600480360381019061032891906112c0565b6109be565b60405161033a9190611662565b60405180910390f35b61035d60048036038101906103589190611293565b610a45565b005b60606006805461036e90611792565b80601f016020809104026020016040519081016040528092919081815260200182805461039a90611792565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb9565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611a4460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f9c90919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190611602565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f90611792565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90611792565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611602565b60405180910390fd5b6108ca6108c4610ae6565b83610fb2565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611a92602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb9565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad190611602565b60405180910390fd5b610ae38161113c565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b55906115a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc590611642565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610cac9190611662565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2090611582565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9090611622565b60405180910390fd5b610e0581604051806060016040528060268152602001611a6c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f9c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3a9190611662565b60405180910390a3505050565b6000838311158290610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f869190611560565b60405180910390fd5b5082840390509392505050565b60008183610faa91906116b4565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611022576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611019906115e2565b60405180910390fd5b61103781600354610f9c90919063ffffffff16565b60038190555061108f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f9c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111309190611662565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a3906115c2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061127881611a15565b92915050565b60008135905061128d81611a2c565b92915050565b6000602082840312156112a9576112a8611822565b5b60006112b784828501611269565b91505092915050565b600080604083850312156112d7576112d6611822565b5b60006112e585828601611269565b92505060206112f685828601611269565b9150509250929050565b60008060006060848603121561131957611318611822565b5b600061132786828701611269565b935050602061133886828701611269565b92505060406113498682870161127e565b9150509250925092565b6000806040838503121561136a57611369611822565b5b600061137885828601611269565b92505060206113898582860161127e565b9150509250929050565b6000602082840312156113a9576113a8611822565b5b60006113b78482850161127e565b91505092915050565b6113c98161170a565b82525050565b6113d88161171c565b82525050565b60006113e982611698565b6113f381856116a3565b935061140381856020860161175f565b61140c81611827565b840191505092915050565b60006114246025836116a3565b915061142f82611838565b604082019050919050565b60006114476024836116a3565b915061145282611887565b604082019050919050565b600061146a6026836116a3565b9150611475826118d6565b604082019050919050565b600061148d601f836116a3565b915061149882611925565b602082019050919050565b60006114b06020836116a3565b91506114bb8261194e565b602082019050919050565b60006114d36023836116a3565b91506114de82611977565b604082019050919050565b60006114f66022836116a3565b9150611501826119c6565b604082019050919050565b61151581611748565b82525050565b61152481611752565b82525050565b600060208201905061153f60008301846113c0565b92915050565b600060208201905061155a60008301846113cf565b92915050565b6000602082019050818103600083015261157a81846113de565b905092915050565b6000602082019050818103600083015261159b81611417565b9050919050565b600060208201905081810360008301526115bb8161143a565b9050919050565b600060208201905081810360008301526115db8161145d565b9050919050565b600060208201905081810360008301526115fb81611480565b9050919050565b6000602082019050818103600083015261161b816114a3565b9050919050565b6000602082019050818103600083015261163b816114c6565b9050919050565b6000602082019050818103600083015261165b816114e9565b9050919050565b6000602082019050611677600083018461150c565b92915050565b6000602082019050611692600083018461151b565b92915050565b600081519050919050565b600082825260208201905092915050565b60006116bf82611748565b91506116ca83611748565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116ff576116fe6117c4565b5b828201905092915050565b600061171582611728565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561177d578082015181840152602081019050611762565b8381111561178c576000848401525b50505050565b600060028204905060018216806117aa57607f821691505b602082108114156117be576117bd6117f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b611a1e8161170a565b8114611a2957600080fd5b50565b611a3581611748565b8114611a4057600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122044b4f0634d1542fd864f55d3ffa58ab488e0c89e1600caa5020da54b03ec150964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x1792 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x1792 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A44 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x1792 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1792 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x8C4 PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 PUSH2 0x8E0 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x991 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A92 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x90A PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AD PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP1 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0x113C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB55 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD90 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE05 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE9A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1022 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1019 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1037 DUP2 PUSH1 0x3 SLOAD PUSH2 0xF9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x108F DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF9C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A3 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1278 DUP2 PUSH2 0x1A15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x128D DUP2 PUSH2 0x1A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A9 JUMPI PUSH2 0x12A8 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D7 JUMPI PUSH2 0x12D6 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E5 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12F6 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1319 JUMPI PUSH2 0x1318 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1327 DUP7 DUP3 DUP8 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1338 DUP7 DUP3 DUP8 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1349 DUP7 DUP3 DUP8 ADD PUSH2 0x127E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136A JUMPI PUSH2 0x1369 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1378 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1389 DUP6 DUP3 DUP7 ADD PUSH2 0x127E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A9 JUMPI PUSH2 0x13A8 PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B7 DUP5 DUP3 DUP6 ADD PUSH2 0x127E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C9 DUP2 PUSH2 0x170A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x171C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 DUP3 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x13F3 DUP2 DUP6 PUSH2 0x16A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1403 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x175F JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x1827 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1424 PUSH1 0x25 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x142F DUP3 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1447 PUSH1 0x24 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1452 DUP3 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146A PUSH1 0x26 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1475 DUP3 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148D PUSH1 0x1F DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1498 DUP3 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B0 PUSH1 0x20 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BB DUP3 PUSH2 0x194E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D3 PUSH1 0x23 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DE DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F6 PUSH1 0x22 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1501 DUP3 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1515 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1524 DUP2 PUSH2 0x1752 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x153F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157A DUP2 DUP5 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159B DUP2 PUSH2 0x1417 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15BB DUP2 PUSH2 0x143A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15DB DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15FB DUP2 PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161B DUP2 PUSH2 0x14A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x163B DUP2 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x165B DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1677 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x150C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1692 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x151B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0x1748 JUMP JUMPDEST SWAP2 POP PUSH2 0x16CA DUP4 PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16FF JUMPI PUSH2 0x16FE PUSH2 0x17C4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1715 DUP3 PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x177D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1762 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x178C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17BE JUMPI PUSH2 0x17BD PUSH2 0x17F3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1A1E DUP2 PUSH2 0x170A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x1748 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 DIFFICULTY 0xB4 CREATE PUSH4 0x4D1542FD DUP7 0x4F SSTORE 0xD3 SELFDESTRUCT 0xA5 DUP11 0xB4 DUP9 0xE0 0xC8 SWAP15 AND STOP 0xCA 0xA5 MUL 0xD 0xA5 0x4B SUB 0xEC ISZERO MULMOD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "201:7674:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2286:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1383:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2867:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;970:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1526:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:127:4;;;:::i;:::-;;830:86:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1031:71:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1108:90:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4623:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4185:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1823:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2028:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1880:101:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1246:86:1;1294:13;1322:5;1315:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:86;:::o;2286:150::-;2363:4;2375:39;2384:12;:10;:12::i;:::-;2398:7;2407:6;2375:8;:39::i;:::-;2427:4;2420:11;;2286:150;;;;:::o;1383:94::-;1438:7;1460:12;;1453:19;;1383:94;:::o;2867:297::-;2967:4;2979:36;2989:6;2997:9;3008:6;2979:9;:36::i;:::-;3021:121;3030:6;3038:12;:10;:12::i;:::-;3052:89;3090:6;3052:89;;;;;;;;;;;;;;;;;:11;:19;3064:6;3052:19;;;;;;;;;;;;;;;:33;3072:12;:10;:12::i;:::-;3052:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3021:8;:121::i;:::-;3155:4;3148:11;;2867:297;;;;;:::o;970:86::-;1022:5;1042:9;;;;;;;;;;;1035:16;;970:86;:::o;3532:197::-;3612:4;3624:83;3633:12;:10;:12::i;:::-;3647:7;3656:50;3695:10;3656:11;:25;3668:12;:10;:12::i;:::-;3656:25;;;;;;;;;;;;;;;:34;3682:7;3656:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3624:8;:83::i;:::-;3720:4;3713:11;;3532:197;;;;:::o;1526:113::-;1594:7;1616:9;:18;1626:7;1616:18;;;;;;;;;;;;;;;;1609:25;;1526:113;;;:::o;1614:127:4:-;1227:12;:10;:12::i;:::-;1217:22;;:6;;;;;;;;;;:22;;;1209:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1708:1:::1;1671:40;;1692:6;::::0;::::1;;;;;;;;1671:40;;;;;;;;;;;;1734:1;1717:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1614:127::o:0;830:86:1:-;882:7;904;:5;:7::i;:::-;897:14;;830:86;:::o;1031:71:4:-;1069:7;1091:6;;;;;;;;;;;1084:13;;1031:71;:::o;1108:90:1:-;1158:13;1186:7;1179:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:90;:::o;4623:117::-;4679:4;1227:12:4;:10;:12::i;:::-;1217:22;;:6;;;;;;;;;;:22;;;1209:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4691:27:1::1;4697:12;:10;:12::i;:::-;4711:6;4691:5;:27::i;:::-;4731:4;4724:11;;4623:117:::0;;;:::o;4185:248::-;4270:4;4282:129;4291:12;:10;:12::i;:::-;4305:7;4314:96;4353:15;4314:96;;;;;;;;;;;;;;;;;:11;:25;4326:12;:10;:12::i;:::-;4314:25;;;;;;;;;;;;;;;:34;4340:7;4314:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4282:8;:129::i;:::-;4424:4;4417:11;;4185:248;;;;:::o;1823:156::-;1903:4;1915:42;1925:12;:10;:12::i;:::-;1939:9;1950:6;1915:9;:42::i;:::-;1970:4;1963:11;;1823:156;;;;:::o;2028:137::-;2111:7;2133:11;:18;2145:5;2133:18;;;;;;;;;;;;;;;:27;2152:7;2133:27;;;;;;;;;;;;;;;;2126:34;;2028:137;;;;:::o;1880:101:4:-;1227:12;:10;:12::i;:::-;1217:22;;:6;;;;;;;;;;:22;;;1209:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1948:28:::1;1967:8;1948:18;:28::i;:::-;1880:101:::0;:::o;763:99:2:-;808:15;846:10;831:26;;763:99;:::o;7176:314:1:-;7282:1;7265:19;;:5;:19;;;;7257:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7358:1;7339:21;;:7;:21;;;;7331:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7436:6;7406:11;:18;7418:5;7406:18;;;;;;;;;;;;;;;:27;7425:7;7406:27;;;;;;;;;;;;;;;:36;;;;7469:7;7453:32;;7462:5;7453:32;;;7478:6;7453:32;;;;;;:::i;:::-;;;;;;;;7176:314;;;:::o;5184:442::-;5295:1;5277:20;;:6;:20;;;;5269:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5374:1;5353:23;;:9;:23;;;;5345:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5443;5465:6;5443:71;;;;;;;;;;;;;;;;;:9;:17;5453:6;5443:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5423:9;:17;5433:6;5423:17;;;;;;;;;;;;;;;:91;;;;5543:32;5568:6;5543:9;:20;5553:9;5543:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5520:9;:20;5530:9;5520:20;;;;;;;;;;;;;;;:55;;;;5603:9;5586:35;;5595:6;5586:35;;;5614:6;5586:35;;;;;;:::i;:::-;;;;;;;;5184:442;;;:::o;4959:231:0:-;5075:7;5131:1;5126;:6;;5134:12;5118:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5172:1;5168;:5;5161:12;;4959:231;;;;;:::o;2755:96::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;5876:284:1:-;5966:1;5947:21;;:7;:21;;;;5939:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6026:24;6043:6;6026:12;;:16;;:24;;;;:::i;:::-;6011:12;:39;;;;6077:30;6100:6;6077:9;:18;6087:7;6077:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6056:9;:18;6066:7;6056:18;;;;;;;;;;;;;;;:51;;;;6139:7;6118:37;;6135:1;6118:37;;;6148:6;6118:37;;;;;;:::i;:::-;;;;;;;;5876:284;;:::o;2074:211:4:-;2163:1;2143:22;;:8;:22;;;;2135:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2248:8;2219:38;;2240:6;;;;;;;;;;2219:38;;;;;;;;;;;;2272:8;2263:6;;:17;;;;;;;;;;;;;;;;;;2074:211;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:329::-;2276:6;2325:2;2313:9;2304:7;2300:23;2296:32;2293:119;;;2331:79;;:::i;:::-;2293:119;2451:1;2476:53;2521:7;2512:6;2501:9;2497:22;2476:53;:::i;:::-;2466:63;;2422:117;2217:329;;;;:::o;2552:118::-;2639:24;2657:5;2639:24;:::i;:::-;2634:3;2627:37;2552:118;;:::o;2676:109::-;2757:21;2772:5;2757:21;:::i;:::-;2752:3;2745:34;2676:109;;:::o;2791:364::-;2879:3;2907:39;2940:5;2907:39;:::i;:::-;2962:71;3026:6;3021:3;2962:71;:::i;:::-;2955:78;;3042:52;3087:6;3082:3;3075:4;3068:5;3064:16;3042:52;:::i;:::-;3119:29;3141:6;3119:29;:::i;:::-;3114:3;3110:39;3103:46;;2883:272;2791:364;;;;:::o;3161:366::-;3303:3;3324:67;3388:2;3383:3;3324:67;:::i;:::-;3317:74;;3400:93;3489:3;3400:93;:::i;:::-;3518:2;3513:3;3509:12;3502:19;;3161:366;;;:::o;3533:::-;3675:3;3696:67;3760:2;3755:3;3696:67;:::i;:::-;3689:74;;3772:93;3861:3;3772:93;:::i;:::-;3890:2;3885:3;3881:12;3874:19;;3533:366;;;:::o;3905:::-;4047:3;4068:67;4132:2;4127:3;4068:67;:::i;:::-;4061:74;;4144:93;4233:3;4144:93;:::i;:::-;4262:2;4257:3;4253:12;4246:19;;3905:366;;;:::o;4277:::-;4419:3;4440:67;4504:2;4499:3;4440:67;:::i;:::-;4433:74;;4516:93;4605:3;4516:93;:::i;:::-;4634:2;4629:3;4625:12;4618:19;;4277:366;;;:::o;4649:::-;4791:3;4812:67;4876:2;4871:3;4812:67;:::i;:::-;4805:74;;4888:93;4977:3;4888:93;:::i;:::-;5006:2;5001:3;4997:12;4990:19;;4649:366;;;:::o;5021:::-;5163:3;5184:67;5248:2;5243:3;5184:67;:::i;:::-;5177:74;;5260:93;5349:3;5260:93;:::i;:::-;5378:2;5373:3;5369:12;5362:19;;5021:366;;;:::o;5393:::-;5535:3;5556:67;5620:2;5615:3;5556:67;:::i;:::-;5549:74;;5632:93;5721:3;5632:93;:::i;:::-;5750:2;5745:3;5741:12;5734:19;;5393:366;;;:::o;5765:118::-;5852:24;5870:5;5852:24;:::i;:::-;5847:3;5840:37;5765:118;;:::o;5889:112::-;5972:22;5988:5;5972:22;:::i;:::-;5967:3;5960:35;5889:112;;:::o;6007:222::-;6100:4;6138:2;6127:9;6123:18;6115:26;;6151:71;6219:1;6208:9;6204:17;6195:6;6151:71;:::i;:::-;6007:222;;;;:::o;6235:210::-;6322:4;6360:2;6349:9;6345:18;6337:26;;6373:65;6435:1;6424:9;6420:17;6411:6;6373:65;:::i;:::-;6235:210;;;;:::o;6451:313::-;6564:4;6602:2;6591:9;6587:18;6579:26;;6651:9;6645:4;6641:20;6637:1;6626:9;6622:17;6615:47;6679:78;6752:4;6743:6;6679:78;:::i;:::-;6671:86;;6451:313;;;;:::o;6770:419::-;6936:4;6974:2;6963:9;6959:18;6951:26;;7023:9;7017:4;7013:20;7009:1;6998:9;6994:17;6987:47;7051:131;7177:4;7051:131;:::i;:::-;7043:139;;6770:419;;;:::o;7195:::-;7361:4;7399:2;7388:9;7384:18;7376:26;;7448:9;7442:4;7438:20;7434:1;7423:9;7419:17;7412:47;7476:131;7602:4;7476:131;:::i;:::-;7468:139;;7195:419;;;:::o;7620:::-;7786:4;7824:2;7813:9;7809:18;7801:26;;7873:9;7867:4;7863:20;7859:1;7848:9;7844:17;7837:47;7901:131;8027:4;7901:131;:::i;:::-;7893:139;;7620:419;;;:::o;8045:::-;8211:4;8249:2;8238:9;8234:18;8226:26;;8298:9;8292:4;8288:20;8284:1;8273:9;8269:17;8262:47;8326:131;8452:4;8326:131;:::i;:::-;8318:139;;8045:419;;;:::o;8470:::-;8636:4;8674:2;8663:9;8659:18;8651:26;;8723:9;8717:4;8713:20;8709:1;8698:9;8694:17;8687:47;8751:131;8877:4;8751:131;:::i;:::-;8743:139;;8470:419;;;:::o;8895:::-;9061:4;9099:2;9088:9;9084:18;9076:26;;9148:9;9142:4;9138:20;9134:1;9123:9;9119:17;9112:47;9176:131;9302:4;9176:131;:::i;:::-;9168:139;;8895:419;;;:::o;9320:::-;9486:4;9524:2;9513:9;9509:18;9501:26;;9573:9;9567:4;9563:20;9559:1;9548:9;9544:17;9537:47;9601:131;9727:4;9601:131;:::i;:::-;9593:139;;9320:419;;;:::o;9745:222::-;9838:4;9876:2;9865:9;9861:18;9853:26;;9889:71;9957:1;9946:9;9942:17;9933:6;9889:71;:::i;:::-;9745:222;;;;:::o;9973:214::-;10062:4;10100:2;10089:9;10085:18;10077:26;;10113:67;10177:1;10166:9;10162:17;10153:6;10113:67;:::i;:::-;9973:214;;;;:::o;10274:99::-;10326:6;10360:5;10354:12;10344:22;;10274:99;;;:::o;10379:169::-;10463:11;10497:6;10492:3;10485:19;10537:4;10532:3;10528:14;10513:29;;10379:169;;;;:::o;10554:305::-;10594:3;10613:20;10631:1;10613:20;:::i;:::-;10608:25;;10647:20;10665:1;10647:20;:::i;:::-;10642:25;;10801:1;10733:66;10729:74;10726:1;10723:81;10720:107;;;10807:18;;:::i;:::-;10720:107;10851:1;10848;10844:9;10837:16;;10554:305;;;;:::o;10865:96::-;10902:7;10931:24;10949:5;10931:24;:::i;:::-;10920:35;;10865:96;;;:::o;10967:90::-;11001:7;11044:5;11037:13;11030:21;11019:32;;10967:90;;;:::o;11063:126::-;11100:7;11140:42;11133:5;11129:54;11118:65;;11063:126;;;:::o;11195:77::-;11232:7;11261:5;11250:16;;11195:77;;;:::o;11278:86::-;11313:7;11353:4;11346:5;11342:16;11331:27;;11278:86;;;:::o;11370:307::-;11438:1;11448:113;11462:6;11459:1;11456:13;11448:113;;;11547:1;11542:3;11538:11;11532:18;11528:1;11523:3;11519:11;11512:39;11484:2;11481:1;11477:10;11472:15;;11448:113;;;11579:6;11576:1;11573:13;11570:101;;;11659:1;11650:6;11645:3;11641:16;11634:27;11570:101;11419:258;11370:307;;;:::o;11683:320::-;11727:6;11764:1;11758:4;11754:12;11744:22;;11811:1;11805:4;11801:12;11832:18;11822:81;;11888:4;11880:6;11876:17;11866:27;;11822:81;11950:2;11942:6;11939:14;11919:18;11916:38;11913:84;;;11969:18;;:::i;:::-;11913:84;11734:269;11683:320;;;:::o;12009:180::-;12057:77;12054:1;12047:88;12154:4;12151:1;12144:15;12178:4;12175:1;12168:15;12195:180;12243:77;12240:1;12233:88;12340:4;12337:1;12330:15;12364:4;12361:1;12354:15;12504:117;12613:1;12610;12603:12;12627:102;12668:6;12719:2;12715:7;12710:2;12703:5;12699:14;12695:28;12685:38;;12627:102;;;:::o;12735:224::-;12875:34;12871:1;12863:6;12859:14;12852:58;12944:7;12939:2;12931:6;12927:15;12920:32;12735:224;:::o;12965:223::-;13105:34;13101:1;13093:6;13089:14;13082:58;13174:6;13169:2;13161:6;13157:15;13150:31;12965:223;:::o;13194:225::-;13334:34;13330:1;13322:6;13318:14;13311:58;13403:8;13398:2;13390:6;13386:15;13379:33;13194:225;:::o;13425:181::-;13565:33;13561:1;13553:6;13549:14;13542:57;13425:181;:::o;13612:182::-;13752:34;13748:1;13740:6;13736:14;13729:58;13612:182;:::o;13800:222::-;13940:34;13936:1;13928:6;13924:14;13917:58;14009:5;14004:2;13996:6;13992:15;13985:30;13800:222;:::o;14028:221::-;14168:34;14164:1;14156:6;14152:14;14145:58;14237:4;14232:2;14224:6;14220:15;14213:29;14028:221;:::o;14255:122::-;14328:24;14346:5;14328:24;:::i;:::-;14321:5;14318:35;14308:63;;14367:1;14364;14357:12;14308:63;14255:122;:::o;14383:::-;14456:24;14474:5;14456:24;:::i;:::-;14449:5;14446:35;14436:63;;14495:1;14492;14485:12;14436:63;14383:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1378400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2908",
								"decimals()": "2502",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2580",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30380",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30757"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 775,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 519,
									"end": 775,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 775,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 519,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 775,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 519,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 775,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 775,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 519,
									"end": 775,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 519,
									"end": 775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 848,
									"end": 865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 868,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 868,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 868,
									"end": 878,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 878,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 868,
									"end": 880,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 880,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 868,
									"end": 880,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 868,
									"end": 880,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 868,
									"end": 880,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 848,
									"end": 880,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 848,
									"end": 880,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 895,
									"end": 904,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 892,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 892,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 948,
									"end": 957,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 944,
									"end": 945,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 842,
									"end": 963,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH",
									"source": 1,
									"value": "4C6F747465727900000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 539,
									"end": 544,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 539,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 539,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "4C4F544500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 562,
									"end": 569,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 562,
									"end": 578,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 562,
									"end": 578,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 596,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 584,
									"end": 593,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 584,
									"end": 593,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 584,
									"end": 598,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 584,
									"end": 598,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 584,
									"end": 598,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 584,
									"end": 598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 646,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 646,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 646,
									"end": 655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 646,
									"end": 655,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 646,
									"end": 655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 646,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 646,
									"end": 655,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 646,
									"end": 655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 646,
									"end": 655,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 646,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 646,
									"end": 655,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 632,
									"end": 634,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 632,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 632,
									"end": 656,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 632,
									"end": 656,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 632,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 632,
									"end": 656,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 632,
									"end": 656,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 632,
									"end": 656,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 619,
									"end": 629,
									"name": "PUSH",
									"source": 1,
									"value": "3B9ACA00"
								},
								{
									"begin": 619,
									"end": 657,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 619,
									"end": 657,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 619,
									"end": 657,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 619,
									"end": 657,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 619,
									"end": 657,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 619,
									"end": 657,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 619,
									"end": 657,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 604,
									"end": 657,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 604,
									"end": 657,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 604,
									"end": 657,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 604,
									"end": 657,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 700,
									"end": 712,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 700,
									"end": 712,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 685,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 697,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 686,
									"end": 696,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 676,
									"end": 697,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 676,
									"end": 697,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 697,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 697,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 697,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 697,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 676,
									"end": 712,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 712,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 712,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 676,
									"end": 712,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 745,
									"end": 755,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 741,
									"end": 742,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 757,
									"end": 769,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 757,
									"end": 769,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 724,
									"end": 770,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 724,
									"end": 770,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 763,
									"end": 862,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 763,
									"end": 862,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 808,
									"end": 823,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 846,
									"end": 856,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 831,
									"end": 857,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 831,
									"end": 857,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 763,
									"end": 862,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 763,
									"end": 862,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 112,
									"end": 117,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 89,
									"end": 92,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 82,
									"end": 119,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7,
									"end": 125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 228,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 247,
									"end": 265,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 239,
									"end": 265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 341,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 328,
									"end": 345,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 319,
									"end": 325,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 420,
									"end": 425,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 431,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 451,
									"end": 457,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 442,
									"end": 457,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 442,
									"end": 457,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 475,
									"end": 480,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 466,
									"end": 480,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 480,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 510,
									"end": 511,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 500,
									"end": 508,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 497,
									"end": 512,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 605,
									"end": 609,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 600,
									"end": 603,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 596,
									"end": 610,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 590,
									"end": 594,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 587,
									"end": 611,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 584,
									"end": 634,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 584,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 584,
									"end": 634,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 614,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 614,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 614,
									"end": 632,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 614,
									"end": 632,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 614,
									"end": 632,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 584,
									"end": 634,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 584,
									"end": 634,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 664,
									"end": 665,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 654,
									"end": 662,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 650,
									"end": 666,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 647,
									"end": 1098,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 1098,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 647,
									"end": 1098,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1079,
									"end": 1083,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1072,
									"end": 1077,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1084,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1059,
									"end": 1084,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1059,
									"end": 1084,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 1098,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 647,
									"end": 1098,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1133,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1127,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1134,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1111,
									"end": 1134,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1111,
									"end": 1134,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1182,
									"end": 1190,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1159,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1159,
									"end": 1191,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1159,
									"end": 1191,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1159,
									"end": 1191,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1191,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1191,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 489,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 359,
									"end": 1207,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1213,
									"end": 1498,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1213,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1273,
									"end": 1278,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1320,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1315,
									"end": 1319,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1320,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1297,
									"end": 1320,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1297,
									"end": 1320,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1297,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1320,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1341,
									"end": 1368,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1359,
									"end": 1367,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1341,
									"end": 1368,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1341,
									"end": 1368,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1341,
									"end": 1368,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1341,
									"end": 1368,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1368,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1368,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1424,
									"end": 1490,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1414,
									"end": 1422,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1408,
									"end": 1412,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1387,
									"end": 1491,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1387,
									"end": 1491,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1387,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1378,
									"end": 1491,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1378,
									"end": 1491,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1498,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1498,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1498,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1498,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1498,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1563,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1749,
									"end": 1757,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1739,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1739,
									"end": 1779,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1771,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1761,
									"end": 1771,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1761,
									"end": 1771,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1772,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1772,
									"end": 1777,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1739,
									"end": 1779,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1739,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1798,
									"end": 1802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1788,
									"end": 1824,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1806,
									"end": 1816,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1817,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1817,
									"end": 1822,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1824,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1788,
									"end": 1824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1932,
									"end": 1933,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1968,
									"end": 1969,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1963,
									"end": 2154,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 2154,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1963,
									"end": 2154,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1877,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1877,
									"end": 2154,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1927,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1936,
									"end": 1946,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1946,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 1952,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1947,
									"end": 1952,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1963,
									"end": 2154,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1963,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2008,
									"end": 2011,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1998,
									"end": 2006,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1995,
									"end": 2012,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1992,
									"end": 2035,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1992,
									"end": 2035,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1992,
									"end": 2035,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2033,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2015,
									"end": 2033,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2015,
									"end": 2033,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2015,
									"end": 2033,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2015,
									"end": 2033,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1992,
									"end": 2035,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1992,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2064,
									"end": 2072,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2061,
									"end": 2062,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2057,
									"end": 2073,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2048,
									"end": 2073,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2048,
									"end": 2073,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2099,
									"end": 2102,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2092,
									"end": 2097,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2089,
									"end": 2103,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2126,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2086,
									"end": 2126,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2126,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2086,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2139,
									"end": 2144,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2139,
									"end": 2144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2139,
									"end": 2144,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1877,
									"end": 2154,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1877,
									"end": 2154,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1877,
									"end": 2154,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2265,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2253,
									"end": 2261,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2250,
									"end": 2266,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2244,
									"end": 2247,
									"name": "PUSH",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 2238,
									"end": 2242,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2235,
									"end": 2248,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2231,
									"end": 2267,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2213,
									"end": 2215,
									"name": "PUSH",
									"source": 5,
									"value": "4E"
								},
								{
									"begin": 2203,
									"end": 2211,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2200,
									"end": 2216,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2195,
									"end": 2197,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 2189,
									"end": 2193,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2186,
									"end": 2198,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2182,
									"end": 2217,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2166,
									"end": 2277,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2163,
									"end": 2409,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2163,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2163,
									"end": 2409,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2319,
									"end": 2327,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2313,
									"end": 2317,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2309,
									"end": 2328,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2328,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2328,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2354,
									"end": 2357,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2347,
									"end": 2352,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2344,
									"end": 2358,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2341,
									"end": 2381,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2341,
									"end": 2381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2341,
									"end": 2381,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2341,
									"end": 2381,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2341,
									"end": 2381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2394,
									"end": 2399,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2394,
									"end": 2399,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2163,
									"end": 2409,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2163,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2434,
									"end": 2476,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2472,
									"end": 2475,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2462,
									"end": 2470,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2456,
									"end": 2460,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2453,
									"end": 2454,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2434,
									"end": 2476,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2434,
									"end": 2476,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2434,
									"end": 2476,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2434,
									"end": 2476,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2476,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2476,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2476,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2476,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2508,
									"end": 2512,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2503,
									"end": 2506,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2499,
									"end": 2513,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2492,
									"end": 2497,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2489,
									"end": 2514,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2486,
									"end": 2537,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2486,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2486,
									"end": 2537,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2486,
									"end": 2537,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2486,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2566,
									"end": 2570,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2559,
									"end": 2564,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2571,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2546,
									"end": 2571,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2546,
									"end": 2571,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1504,
									"end": 2577,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2583,
									"end": 2931,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2583,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2630,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2666,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 2664,
									"end": 2665,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2646,
									"end": 2666,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2646,
									"end": 2666,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2646,
									"end": 2666,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 2646,
									"end": 2666,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2641,
									"end": 2666,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2641,
									"end": 2666,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2680,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2698,
									"end": 2699,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2680,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2680,
									"end": 2700,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2680,
									"end": 2700,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2680,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2675,
									"end": 2700,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2675,
									"end": 2700,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2868,
									"end": 2869,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2800,
									"end": 2866,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2796,
									"end": 2870,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2793,
									"end": 2794,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2790,
									"end": 2871,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2785,
									"end": 2786,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2778,
									"end": 2787,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2771,
									"end": 2788,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 2872,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2764,
									"end": 2895,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2764,
									"end": 2895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2764,
									"end": 2895,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2875,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2764,
									"end": 2895,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2764,
									"end": 2895,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2923,
									"end": 2924,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2920,
									"end": 2921,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2916,
									"end": 2925,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2905,
									"end": 2925,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2905,
									"end": 2925,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2583,
									"end": 2931,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2583,
									"end": 2931,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2583,
									"end": 2931,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2583,
									"end": 2931,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2583,
									"end": 2931,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2937,
									"end": 3014,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2937,
									"end": 3014,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2974,
									"end": 2981,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3008,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2992,
									"end": 3008,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2992,
									"end": 3008,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2937,
									"end": 3014,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2937,
									"end": 3014,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2937,
									"end": 3014,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2937,
									"end": 3014,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3020,
									"end": 3340,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3020,
									"end": 3340,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3064,
									"end": 3070,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3101,
									"end": 3102,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3095,
									"end": 3099,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3091,
									"end": 3103,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 3081,
									"end": 3103,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3081,
									"end": 3103,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3148,
									"end": 3149,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3142,
									"end": 3146,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3138,
									"end": 3150,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3169,
									"end": 3187,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3159,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 3159,
									"end": 3240,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3225,
									"end": 3229,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 3217,
									"end": 3223,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3213,
									"end": 3230,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3203,
									"end": 3230,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3203,
									"end": 3230,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3159,
									"end": 3240,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 3159,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3289,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3279,
									"end": 3285,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3276,
									"end": 3290,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3256,
									"end": 3274,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3253,
									"end": 3291,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3250,
									"end": 3334,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3250,
									"end": 3334,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 3250,
									"end": 3334,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3306,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3306,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 3306,
									"end": 3324,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3306,
									"end": 3324,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3306,
									"end": 3324,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3250,
									"end": 3334,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 3250,
									"end": 3334,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3071,
									"end": 3340,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3340,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3340,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3340,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3340,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3346,
									"end": 3526,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 3346,
									"end": 3526,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3394,
									"end": 3471,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3391,
									"end": 3392,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3384,
									"end": 3472,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3491,
									"end": 3495,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 3488,
									"end": 3489,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3481,
									"end": 3496,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3515,
									"end": 3519,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3512,
									"end": 3513,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3505,
									"end": 3520,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3532,
									"end": 3712,
									"name": "tag",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 3532,
									"end": 3712,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3580,
									"end": 3657,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3577,
									"end": 3578,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3570,
									"end": 3658,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3677,
									"end": 3681,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3674,
									"end": 3675,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3701,
									"end": 3705,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3698,
									"end": 3699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3691,
									"end": 3706,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3718,
									"end": 3820,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3718,
									"end": 3820,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3760,
									"end": 3768,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3807,
									"end": 3812,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3804,
									"end": 3805,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3800,
									"end": 3813,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3779,
									"end": 3813,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3779,
									"end": 3813,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3718,
									"end": 3820,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3718,
									"end": 3820,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3718,
									"end": 3820,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3718,
									"end": 3820,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 7875,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044b4f0634d1542fd864f55d3ffa58ab488e0c89e1600caa5020da54b03ec150964736f6c63430008070033",
									".code": [
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "893D20E8"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "893D20E8"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "A0712D68"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 201,
											"end": 7875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 830,
											"end": 916,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1307,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1322,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2384,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2375,
											"end": 2414,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2414,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2375,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2420,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1477,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3006,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2979,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2979,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3038,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3038,
											"end": 3050,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3038,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3038,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH data",
											"source": 1,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3070,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3071,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3072,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3072,
											"end": 3084,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3072,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3052,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3052,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3021,
											"end": 3142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3021,
											"end": 3142,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3021,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3148,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3633,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3654,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3695,
											"end": 3705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3668,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3681,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3690,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3656,
											"end": 3694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3656,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3624,
											"end": 3707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3624,
											"end": 3707,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3624,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3713,
											"end": 3724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3729,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1639,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1227,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 830,
											"end": 916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 904,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 904,
											"end": 911,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 904,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 830,
											"end": 916,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1069,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1171,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1198,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1227,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4697,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4691,
											"end": 4718,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4691,
											"end": 4718,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4691,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4740,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4291,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4291,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4291,
											"end": 4303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4291,
											"end": 4303,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4291,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4353,
											"end": 4368,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH data",
											"source": 1,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4325,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4326,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4347,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4348,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4314,
											"end": 4352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4314,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4282,
											"end": 4411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4411,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4282,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4417,
											"end": 4428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4433,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1925,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1925,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1925,
											"end": 1937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 1937,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1925,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1915,
											"end": 1957,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1915,
											"end": 1957,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1915,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1963,
											"end": 1974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1979,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2159,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2160,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1227,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1948,
											"end": 1976,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1948,
											"end": 1976,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1948,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 862,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 763,
											"end": 862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 856,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 831,
											"end": 857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 831,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 763,
											"end": 862,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7176,
											"end": 7490,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7176,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7257,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7331,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7417,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7423,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7425,
											"end": 7432,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7433,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7442,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7478,
											"end": 7484,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7485,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7490,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5184,
											"end": 5626,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5184,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5277,
											"end": 5297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5283,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5277,
											"end": 5297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5297,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5269,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5465,
											"end": 5471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH data",
											"source": 1,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5459,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5443,
											"end": 5464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5443,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5514,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5568,
											"end": 5574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5563,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5543,
											"end": 5567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5543,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5529,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5575,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5626,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5075,
											"end": 5082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5168,
											"end": 5169,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5168,
											"end": 5173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5876,
											"end": 6160,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5876,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5947,
											"end": 5968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5947,
											"end": 5968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5968,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5968,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5939,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6038,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6026,
											"end": 6038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6026,
											"end": 6042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6026,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6011,
											"end": 6050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6050,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6100,
											"end": 6106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6086,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6094,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6065,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6073,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6107,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6148,
											"end": 6154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6155,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 6160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 6160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 6160,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2074,
											"end": 2285,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2074,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2256,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2285,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2311,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2323,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2328,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2521,
											"end": 2528,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2657,
											"end": 2662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2634,
											"end": 2637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2752,
											"end": 2755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3026,
											"end": 3032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3024,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3085,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3079,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3117,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3149,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3388,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3383,
											"end": 3386,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3489,
											"end": 3492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3755,
											"end": 3758,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3763,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3874,
											"end": 3893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3874,
											"end": 3893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4047,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4132,
											"end": 4134,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4127,
											"end": 4130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4233,
											"end": 4236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4504,
											"end": 4506,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4499,
											"end": 4502,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 4874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4879,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5008,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5001,
											"end": 5004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 5009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 5248,
											"end": 5250,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5243,
											"end": 5246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 5349,
											"end": 5352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 5620,
											"end": 5622,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5615,
											"end": 5618,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 5721,
											"end": 5724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5870,
											"end": 5875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5840,
											"end": 5877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5889,
											"end": 6001,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 5889,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5988,
											"end": 5993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5970,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 5995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 6001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 6001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 6001,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6007,
											"end": 6229,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 6007,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6138,
											"end": 6140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6127,
											"end": 6136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6123,
											"end": 6141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 6219,
											"end": 6220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6195,
											"end": 6201,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6151,
											"end": 6222,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6151,
											"end": 6222,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 6151,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6229,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6229,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6235,
											"end": 6445,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 6235,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6362,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6349,
											"end": 6358,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6345,
											"end": 6363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 6373,
											"end": 6438,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6373,
											"end": 6438,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 6373,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6445,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6445,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6451,
											"end": 6764,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6451,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6579,
											"end": 6605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6579,
											"end": 6605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6637,
											"end": 6638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6622,
											"end": 6639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6679,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6752,
											"end": 6756,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6679,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 6679,
											"end": 6757,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6679,
											"end": 6757,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6679,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6764,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6764,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7023,
											"end": 7032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7033,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 7177,
											"end": 7181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7043,
											"end": 7182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7043,
											"end": 7182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7195,
											"end": 7614,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 7195,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7361,
											"end": 7365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7397,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7442,
											"end": 7446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7434,
											"end": 7435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7423,
											"end": 7432,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7476,
											"end": 7607,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7476,
											"end": 7607,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7476,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7614,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7620,
											"end": 8039,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7620,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7824,
											"end": 7826,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7813,
											"end": 7822,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7801,
											"end": 7827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7801,
											"end": 7827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7873,
											"end": 7882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 7883,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7859,
											"end": 7860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 7857,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7844,
											"end": 7861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7837,
											"end": 7884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7901,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 8027,
											"end": 8031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7901,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7901,
											"end": 8032,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7901,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7901,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7893,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7893,
											"end": 8032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7620,
											"end": 8039,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7620,
											"end": 8039,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7620,
											"end": 8039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7620,
											"end": 8039,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8045,
											"end": 8464,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8045,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8234,
											"end": 8252,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8252,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8298,
											"end": 8307,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8292,
											"end": 8296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8308,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8282,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8269,
											"end": 8286,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8262,
											"end": 8309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8452,
											"end": 8456,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 8326,
											"end": 8457,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8326,
											"end": 8457,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8326,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8318,
											"end": 8457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8318,
											"end": 8457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8464,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8470,
											"end": 8889,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 8470,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8636,
											"end": 8640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8674,
											"end": 8676,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8663,
											"end": 8672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8659,
											"end": 8677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8651,
											"end": 8677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8651,
											"end": 8677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8723,
											"end": 8732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8713,
											"end": 8733,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8698,
											"end": 8707,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8694,
											"end": 8711,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8687,
											"end": 8734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8751,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 8877,
											"end": 8881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8751,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8751,
											"end": 8882,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8751,
											"end": 8882,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 8751,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8743,
											"end": 8882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8743,
											"end": 8882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8470,
											"end": 8889,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8470,
											"end": 8889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8470,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8470,
											"end": 8889,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8895,
											"end": 9314,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 8895,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9061,
											"end": 9065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9101,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9084,
											"end": 9102,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9076,
											"end": 9102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9076,
											"end": 9102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9142,
											"end": 9146,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9138,
											"end": 9158,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9134,
											"end": 9135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9123,
											"end": 9132,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9112,
											"end": 9159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9176,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 9302,
											"end": 9306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9176,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 9176,
											"end": 9307,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9176,
											"end": 9307,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 9176,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9168,
											"end": 9307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9168,
											"end": 9307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 9314,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 9314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 9314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 9314,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9526,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9513,
											"end": 9522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9501,
											"end": 9527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9501,
											"end": 9527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9573,
											"end": 9582,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9567,
											"end": 9571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9557,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9544,
											"end": 9561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9537,
											"end": 9584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9593,
											"end": 9732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9593,
											"end": 9732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9745,
											"end": 9967,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 9745,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9838,
											"end": 9842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9865,
											"end": 9874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9879,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9889,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9957,
											"end": 9958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9946,
											"end": 9955,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9942,
											"end": 9959,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9889,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 9889,
											"end": 9960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9889,
											"end": 9960,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9889,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9745,
											"end": 9967,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9745,
											"end": 9967,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9745,
											"end": 9967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9745,
											"end": 9967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9745,
											"end": 9967,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9973,
											"end": 10187,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9973,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10062,
											"end": 10066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10100,
											"end": 10102,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10089,
											"end": 10098,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10077,
											"end": 10103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10077,
											"end": 10103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10166,
											"end": 10175,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10162,
											"end": 10179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10153,
											"end": 10159,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 10113,
											"end": 10180,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10113,
											"end": 10180,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 10113,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10187,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10274,
											"end": 10373,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 10274,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10360,
											"end": 10365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10354,
											"end": 10366,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10344,
											"end": 10366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10344,
											"end": 10366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10373,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10379,
											"end": 10548,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 10379,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10463,
											"end": 10474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10492,
											"end": 10495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10504,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10532,
											"end": 10535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10528,
											"end": 10542,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10513,
											"end": 10542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10513,
											"end": 10542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10548,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10379,
											"end": 10548,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10554,
											"end": 10859,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 10554,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10594,
											"end": 10597,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 10631,
											"end": 10632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10608,
											"end": 10633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10608,
											"end": 10633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 10665,
											"end": 10666,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10801,
											"end": 10802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 10799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10729,
											"end": 10803,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10726,
											"end": 10727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10723,
											"end": 10804,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10720,
											"end": 10827,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10720,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 10720,
											"end": 10827,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10720,
											"end": 10827,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 10720,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10851,
											"end": 10852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10844,
											"end": 10853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10837,
											"end": 10853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10837,
											"end": 10853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10859,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10859,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10865,
											"end": 10961,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10865,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10902,
											"end": 10909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10931,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 10949,
											"end": 10954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 10931,
											"end": 10955,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10931,
											"end": 10955,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 10931,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10920,
											"end": 10955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10920,
											"end": 10955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10865,
											"end": 10961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10865,
											"end": 10961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10865,
											"end": 10961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10865,
											"end": 10961,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10967,
											"end": 11057,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 10967,
											"end": 11057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11050,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11051,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10967,
											"end": 11057,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10967,
											"end": 11057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10967,
											"end": 11057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10967,
											"end": 11057,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11063,
											"end": 11189,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 11063,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11100,
											"end": 11107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11182,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11133,
											"end": 11138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11129,
											"end": 11183,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11118,
											"end": 11183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11118,
											"end": 11183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11063,
											"end": 11189,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11063,
											"end": 11189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11063,
											"end": 11189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11063,
											"end": 11189,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11195,
											"end": 11272,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 11195,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11232,
											"end": 11239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11261,
											"end": 11266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11250,
											"end": 11266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11250,
											"end": 11266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11195,
											"end": 11272,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11195,
											"end": 11272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11195,
											"end": 11272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11195,
											"end": 11272,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11278,
											"end": 11364,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11278,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11313,
											"end": 11320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11353,
											"end": 11357,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 11346,
											"end": 11351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11342,
											"end": 11358,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11331,
											"end": 11358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11331,
											"end": 11358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11278,
											"end": 11364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11278,
											"end": 11364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11278,
											"end": 11364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11278,
											"end": 11364,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11370,
											"end": 11677,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 11370,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11438,
											"end": 11439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11462,
											"end": 11468,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11459,
											"end": 11460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11456,
											"end": 11469,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11547,
											"end": 11548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11542,
											"end": 11545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 11526,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11519,
											"end": 11530,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11512,
											"end": 11551,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11484,
											"end": 11486,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11481,
											"end": 11482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11477,
											"end": 11487,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11472,
											"end": 11487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11472,
											"end": 11487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 11448,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11576,
											"end": 11577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11573,
											"end": 11586,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11570,
											"end": 11671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11570,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 11570,
											"end": 11671,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11659,
											"end": 11660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11650,
											"end": 11656,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11645,
											"end": 11648,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11634,
											"end": 11661,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11570,
											"end": 11671,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 11570,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11419,
											"end": 11677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11677,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11683,
											"end": 12003,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 11683,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11727,
											"end": 11733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11765,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11754,
											"end": 11766,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 11744,
											"end": 11766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11744,
											"end": 11766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11811,
											"end": 11812,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 11805,
											"end": 11809,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11801,
											"end": 11813,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11832,
											"end": 11850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11822,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 11822,
											"end": 11903,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11888,
											"end": 11892,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 11880,
											"end": 11886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11876,
											"end": 11893,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11866,
											"end": 11893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11866,
											"end": 11893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11822,
											"end": 11903,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 11822,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11950,
											"end": 11952,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11942,
											"end": 11948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11919,
											"end": 11937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11916,
											"end": 11954,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11913,
											"end": 11997,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11913,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 11913,
											"end": 11997,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11913,
											"end": 11997,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 11913,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11734,
											"end": 12003,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11683,
											"end": 12003,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11683,
											"end": 12003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11683,
											"end": 12003,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11683,
											"end": 12003,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12009,
											"end": 12189,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 12009,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12057,
											"end": 12134,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12054,
											"end": 12055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12154,
											"end": 12158,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12144,
											"end": 12159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12175,
											"end": 12176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12183,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12195,
											"end": 12375,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 12195,
											"end": 12375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12243,
											"end": 12320,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12240,
											"end": 12241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12233,
											"end": 12321,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12340,
											"end": 12344,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 12337,
											"end": 12338,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12330,
											"end": 12345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12368,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12361,
											"end": 12362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12354,
											"end": 12369,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12504,
											"end": 12621,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 12504,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12613,
											"end": 12614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12610,
											"end": 12611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12603,
											"end": 12615,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12729,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 12627,
											"end": 12729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12668,
											"end": 12674,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12719,
											"end": 12721,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 12715,
											"end": 12722,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 12710,
											"end": 12712,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 12703,
											"end": 12708,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12699,
											"end": 12713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12695,
											"end": 12723,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12685,
											"end": 12723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12685,
											"end": 12723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12729,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12735,
											"end": 12959,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 12735,
											"end": 12959,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12875,
											"end": 12909,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12863,
											"end": 12869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12859,
											"end": 12873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12852,
											"end": 12910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12944,
											"end": 12951,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12939,
											"end": 12941,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12931,
											"end": 12937,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12927,
											"end": 12942,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12920,
											"end": 12952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12735,
											"end": 12959,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12735,
											"end": 12959,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12965,
											"end": 13188,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 12965,
											"end": 13188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13105,
											"end": 13139,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 13101,
											"end": 13102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13093,
											"end": 13099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13089,
											"end": 13103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13082,
											"end": 13140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13174,
											"end": 13180,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13169,
											"end": 13171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13161,
											"end": 13167,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13157,
											"end": 13172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13150,
											"end": 13181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12965,
											"end": 13188,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12965,
											"end": 13188,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13194,
											"end": 13419,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 13194,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13334,
											"end": 13368,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13330,
											"end": 13331,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13322,
											"end": 13328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13311,
											"end": 13369,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13403,
											"end": 13411,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13398,
											"end": 13400,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13390,
											"end": 13396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13386,
											"end": 13401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13379,
											"end": 13412,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13194,
											"end": 13419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13194,
											"end": 13419,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13425,
											"end": 13606,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 13425,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13565,
											"end": 13598,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 13561,
											"end": 13562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13559,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13549,
											"end": 13563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13542,
											"end": 13599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13425,
											"end": 13606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13425,
											"end": 13606,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13612,
											"end": 13794,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 13612,
											"end": 13794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13752,
											"end": 13786,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13748,
											"end": 13749,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13740,
											"end": 13746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13736,
											"end": 13750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13729,
											"end": 13787,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13612,
											"end": 13794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13612,
											"end": 13794,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13800,
											"end": 14022,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 13800,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13940,
											"end": 13974,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13936,
											"end": 13937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13928,
											"end": 13934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13924,
											"end": 13938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13917,
											"end": 13975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14009,
											"end": 14014,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14004,
											"end": 14006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13992,
											"end": 14007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13985,
											"end": 14015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13800,
											"end": 14022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13800,
											"end": 14022,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14028,
											"end": 14249,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 14028,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14168,
											"end": 14202,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 14164,
											"end": 14165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14156,
											"end": 14162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14152,
											"end": 14166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14145,
											"end": 14203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14237,
											"end": 14241,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14232,
											"end": 14234,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14224,
											"end": 14230,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14220,
											"end": 14235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14213,
											"end": 14242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14028,
											"end": 14249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14028,
											"end": 14249,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14255,
											"end": 14377,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 14255,
											"end": 14377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14328,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 14346,
											"end": 14351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14328,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 14328,
											"end": 14352,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14328,
											"end": 14352,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 14328,
											"end": 14352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14321,
											"end": 14326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14318,
											"end": 14353,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14308,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 14308,
											"end": 14371,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14367,
											"end": 14368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14364,
											"end": 14365,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14357,
											"end": 14369,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14308,
											"end": 14371,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 14308,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14255,
											"end": 14377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14255,
											"end": 14377,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14383,
											"end": 14505,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 14383,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14456,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 14474,
											"end": 14479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14456,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 14456,
											"end": 14480,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14456,
											"end": 14480,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 14456,
											"end": 14480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14449,
											"end": 14454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14446,
											"end": 14481,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14436,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 14436,
											"end": 14499,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14495,
											"end": 14496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14492,
											"end": 14493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14485,
											"end": 14497,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14436,
											"end": 14499,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 14436,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14383,
											"end": 14505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14383,
											"end": 14505,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"BEP20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/BEP20Token.sol\":{\"keccak256\":\"0xc10ac2eea7decdc363cdc988fe12f4bf41fc0633c42f7a1e053e7f329ac96e31\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5a6fe9f4b0579a01c778c9230e1e6754c4cfdd2f3a49c9eb2b94350674542890\",\"dweb:/ipfs/QmTmTDXTzfBjDpf2sFeo9GHaB54pyTZ7MwWqsNKxS5aeNC\"]},\"contracts/Context.sol\":{\"keccak256\":\"0xe4a9f83f9bb52f0a8b5a234cac9d04e0f15b1b05456358c05969800bc984af9e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c7ee9980a96990c3c35552050a27adc84bec8578904551dd4ed49fd3636e158b\",\"dweb:/ipfs/QmSys1xGNgrSWSaFc18u8FtsX1tn7hRkvgVAy5ZNKPt7Bk\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0x458a2d208d0d5b10d274a5883b5dfb12267523398599acbb433c3abfef27e968\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://33888a908f4e39715e7c73f48d8a6627aa715ddcacd66a5986beb39802f0983d\",\"dweb:/ipfs/QmaiR36zMr3geWkcGXnw4JxHNEtkuPQYjHSjsNemNXBTte\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x9e90d7223c9f931f18a446535c4560aef9ed7a9039c72274ac2155dcf425cbec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1c689b0a9494b0bda163916a45e89b72c5a30c8b0710b6eb6188b2784e9342a3\",\"dweb:/ipfs/QmYm3FZnbr2P9eEBwTQqTymAc7ptVVEguhYV5ShCD2DWfW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 996,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 330,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 336,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 338,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 340,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 342,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 344,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Context.sol\":570:1080  contract Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Context.sol\":741:759  constructor () { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Context.sol\":570:1080  contract Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Context.sol\":570:1080  contract Context {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f3d1ab6aca817e6fbef265e068519ebd659fef3b99d5f751c3a56e38683949b764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_863": {
									"entryPoint": null,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f3d1ab6aca817e6fbef265e068519ebd659fef3b99d5f751c3a56e38683949b764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xD1 0xAB PUSH11 0xCA817E6FBEF265E068519E 0xBD PUSH6 0x9FEF3B99D5F7 MLOAD 0xC3 0xA5 PUSH15 0x38683949B764736F6C634300080700 CALLER ",
							"sourceMap": "570:510:2:-:0;;;741:18;;;;;;;;;;570:510;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220f3d1ab6aca817e6fbef265e068519ebd659fef3b99d5f751c3a56e38683949b764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xD1 0xAB PUSH11 0xCA817E6FBEF265E068519E 0xBD PUSH6 0x9FEF3B99D5F7 MLOAD 0xC3 0xA5 PUSH15 0x38683949B764736F6C634300080700 CALLER ",
							"sourceMap": "570:510:2:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 1080,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 741,
									"end": 759,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 741,
									"end": 759,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 741,
									"end": 759,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 741,
									"end": 759,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 1080,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3d1ab6aca817e6fbef265e068519ebd659fef3b99d5f751c3a56e38683949b764736f6c63430008070033",
									".code": [
										{
											"begin": 570,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 1080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 1080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 1080,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xe4a9f83f9bb52f0a8b5a234cac9d04e0f15b1b05456358c05969800bc984af9e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c7ee9980a96990c3c35552050a27adc84bec8578904551dd4ed49fd3636e158b\",\"dweb:/ipfs/QmSys1xGNgrSWSaFc18u8FtsX1tn7hRkvgVAy5ZNKPt7Bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0x458a2d208d0d5b10d274a5883b5dfb12267523398599acbb433c3abfef27e968\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://33888a908f4e39715e7c73f48d8a6627aa715ddcacd66a5986beb39802f0983d\",\"dweb:/ipfs/QmaiR36zMr3geWkcGXnw4JxHNEtkuPQYjHSjsNemNXBTte\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":590:2287  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":827:963  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":848:865  address msgSender */\n  0x00\n    /* \"contracts/Ownable.sol\":868:880  _msgSender() */\n  tag_6\n    /* \"contracts/Ownable.sol\":868:878  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/Ownable.sol\":868:880  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/Ownable.sol\":848:880  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/Ownable.sol\":895:904  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":886:892  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":886:904  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":948:957  msgSender */\n  dup1\n    /* \"contracts/Ownable.sol\":915:958  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":944:945  0 */\n  0x00\n    /* \"contracts/Ownable.sol\":915:958  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":842:963  {... */\n  pop\n    /* \"contracts/Ownable.sol\":590:2287  contract Ownable is Context {... */\n  jump(tag_8)\n    /* \"contracts/Context.sol\":763:862  function _msgSender() internal view returns (address payable) {... */\ntag_7:\n    /* \"contracts/Context.sol\":808:823  address payable */\n  0x00\n    /* \"contracts/Context.sol\":846:856  msg.sender */\n  caller\n    /* \"contracts/Context.sol\":831:857  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"contracts/Context.sol\":763:862  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Ownable.sol\":590:2287  contract Ownable is Context {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":590:2287  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":1614:1741  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Ownable.sol\":1031:1102  function owner() public view returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1880:1981  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Ownable.sol\":1614:1741  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      tag_17\n        /* \"contracts/Ownable.sol\":1227:1237  _msgSender */\n      tag_18\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1223  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1209:1276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/Ownable.sol\":1708:1709  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1671:1711  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1692:1698  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1671:1711  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":1734:1735  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1717:1723  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":1717:1736  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1614:1741  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1031:1102  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":1069:1076  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1091:1097  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1084:1097  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1031:1102  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1880:1981  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_15:\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      tag_25\n        /* \"contracts/Ownable.sol\":1227:1237  _msgSender */\n      tag_18\n        /* \"contracts/Ownable.sol\":1227:1239  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1223  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1217:1239  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1209:1276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/Ownable.sol\":1948:1976  _transferOwnership(newOwner) */\n      tag_29\n        /* \"contracts/Ownable.sol\":1967:1975  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":1948:1966  _transferOwnership */\n      tag_30\n        /* \"contracts/Ownable.sol\":1948:1976  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/Ownable.sol\":1880:1981  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":763:862  function _msgSender() internal view returns (address payable) {... */\n    tag_18:\n        /* \"contracts/Context.sol\":808:823  address payable */\n      0x00\n        /* \"contracts/Context.sol\":846:856  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":831:857  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":763:862  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2074:2285  function _transferOwnership(address newOwner) internal {... */\n    tag_30:\n        /* \"contracts/Ownable.sol\":2163:2164  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2143:2165  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2143:2151  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2143:2165  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":2135:2208  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/Ownable.sol\":2248:2256  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2219:2257  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2240:2246  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2219:2257  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2272:2280  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2263:2269  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":2263:2280  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2074:2285  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_37:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_39\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_14:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":228:347   */\n    tag_42:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_45\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_37\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_46:\n        /* \"#utility.yul\":574:598   */\n      tag_48\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:977   */\n    tag_50:\n        /* \"#utility.yul\":753:756   */\n      0x00\n        /* \"#utility.yul\":774:841   */\n      tag_52\n        /* \"#utility.yul\":838:840   */\n      0x26\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":774:841   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":767:841   */\n      swap2\n      pop\n        /* \"#utility.yul\":850:943   */\n      tag_54\n        /* \"#utility.yul\":939:942   */\n      dup3\n        /* \"#utility.yul\":850:943   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":968:970   */\n      0x40\n        /* \"#utility.yul\":963:966   */\n      dup3\n        /* \"#utility.yul\":959:971   */\n      add\n        /* \"#utility.yul\":952:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":611:977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1349   */\n    tag_56:\n        /* \"#utility.yul\":1125:1128   */\n      0x00\n        /* \"#utility.yul\":1146:1213   */\n      tag_58\n        /* \"#utility.yul\":1210:1212   */\n      0x20\n        /* \"#utility.yul\":1205:1208   */\n      dup4\n        /* \"#utility.yul\":1146:1213   */\n      tag_53\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1139:1213   */\n      swap2\n      pop\n        /* \"#utility.yul\":1222:1315   */\n      tag_59\n        /* \"#utility.yul\":1311:1314   */\n      dup3\n        /* \"#utility.yul\":1222:1315   */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1340:1342   */\n      0x20\n        /* \"#utility.yul\":1335:1338   */\n      dup3\n        /* \"#utility.yul\":1331:1343   */\n      add\n        /* \"#utility.yul\":1324:1343   */\n      swap1\n      pop\n        /* \"#utility.yul\":983:1349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1355:1577   */\n    tag_11:\n        /* \"#utility.yul\":1448:1452   */\n      0x00\n        /* \"#utility.yul\":1486:1488   */\n      0x20\n        /* \"#utility.yul\":1475:1484   */\n      dup3\n        /* \"#utility.yul\":1471:1489   */\n      add\n        /* \"#utility.yul\":1463:1489   */\n      swap1\n      pop\n        /* \"#utility.yul\":1499:1570   */\n      tag_62\n        /* \"#utility.yul\":1567:1568   */\n      0x00\n        /* \"#utility.yul\":1556:1565   */\n      dup4\n        /* \"#utility.yul\":1552:1569   */\n      add\n        /* \"#utility.yul\":1543:1549   */\n      dup5\n        /* \"#utility.yul\":1499:1570   */\n      tag_46\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1355:1577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1583:2002   */\n    tag_35:\n        /* \"#utility.yul\":1749:1753   */\n      0x00\n        /* \"#utility.yul\":1787:1789   */\n      0x20\n        /* \"#utility.yul\":1776:1785   */\n      dup3\n        /* \"#utility.yul\":1772:1790   */\n      add\n        /* \"#utility.yul\":1764:1790   */\n      swap1\n      pop\n        /* \"#utility.yul\":1836:1845   */\n      dup2\n        /* \"#utility.yul\":1830:1834   */\n      dup2\n        /* \"#utility.yul\":1826:1846   */\n      sub\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1811:1820   */\n      dup4\n        /* \"#utility.yul\":1807:1824   */\n      add\n        /* \"#utility.yul\":1800:1847   */\n      mstore\n        /* \"#utility.yul\":1864:1995   */\n      tag_64\n        /* \"#utility.yul\":1990:1994   */\n      dup2\n        /* \"#utility.yul\":1864:1995   */\n      tag_50\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1856:1995   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:2002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2008:2427   */\n    tag_21:\n        /* \"#utility.yul\":2174:2178   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2201:2210   */\n      dup3\n        /* \"#utility.yul\":2197:2215   */\n      add\n        /* \"#utility.yul\":2189:2215   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2270   */\n      dup2\n        /* \"#utility.yul\":2255:2259   */\n      dup2\n        /* \"#utility.yul\":2251:2271   */\n      sub\n        /* \"#utility.yul\":2247:2248   */\n      0x00\n        /* \"#utility.yul\":2236:2245   */\n      dup4\n        /* \"#utility.yul\":2232:2249   */\n      add\n        /* \"#utility.yul\":2225:2272   */\n      mstore\n        /* \"#utility.yul\":2289:2420   */\n      tag_66\n        /* \"#utility.yul\":2415:2419   */\n      dup2\n        /* \"#utility.yul\":2289:2420   */\n      tag_56\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2281:2420   */\n      swap1\n      pop\n        /* \"#utility.yul\":2008:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2514:2683   */\n    tag_53:\n        /* \"#utility.yul\":2598:2609   */\n      0x00\n        /* \"#utility.yul\":2632:2638   */\n      dup3\n        /* \"#utility.yul\":2627:2630   */\n      dup3\n        /* \"#utility.yul\":2620:2639   */\n      mstore\n        /* \"#utility.yul\":2672:2676   */\n      0x20\n        /* \"#utility.yul\":2667:2670   */\n      dup3\n        /* \"#utility.yul\":2663:2677   */\n      add\n        /* \"#utility.yul\":2648:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2514:2683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2689:2785   */\n    tag_49:\n        /* \"#utility.yul\":2726:2733   */\n      0x00\n        /* \"#utility.yul\":2755:2779   */\n      tag_71\n        /* \"#utility.yul\":2773:2778   */\n      dup3\n        /* \"#utility.yul\":2755:2779   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2744:2779   */\n      swap1\n      pop\n        /* \"#utility.yul\":2689:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2917   */\n    tag_72:\n        /* \"#utility.yul\":2828:2835   */\n      0x00\n        /* \"#utility.yul\":2868:2910   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2861:2866   */\n      dup3\n        /* \"#utility.yul\":2857:2911   */\n      and\n        /* \"#utility.yul\":2846:2911   */\n      swap1\n      pop\n        /* \"#utility.yul\":2791:2917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3163   */\n    tag_44:\n        /* \"#utility.yul\":3155:3156   */\n      0x00\n        /* \"#utility.yul\":3152:3153   */\n      dup1\n        /* \"#utility.yul\":3145:3157   */\n      revert\n        /* \"#utility.yul\":3169:3394   */\n    tag_55:\n        /* \"#utility.yul\":3309:3343   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3305:3306   */\n      0x00\n        /* \"#utility.yul\":3297:3303   */\n      dup3\n        /* \"#utility.yul\":3293:3307   */\n      add\n        /* \"#utility.yul\":3286:3344   */\n      mstore\n        /* \"#utility.yul\":3378:3386   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3373:3375   */\n      0x20\n        /* \"#utility.yul\":3365:3371   */\n      dup3\n        /* \"#utility.yul\":3361:3376   */\n      add\n        /* \"#utility.yul\":3354:3387   */\n      mstore\n        /* \"#utility.yul\":3169:3394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3400:3582   */\n    tag_60:\n        /* \"#utility.yul\":3540:3574   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3536:3537   */\n      0x00\n        /* \"#utility.yul\":3528:3534   */\n      dup3\n        /* \"#utility.yul\":3524:3538   */\n      add\n        /* \"#utility.yul\":3517:3575   */\n      mstore\n        /* \"#utility.yul\":3400:3582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3588:3710   */\n    tag_40:\n        /* \"#utility.yul\":3661:3685   */\n      tag_80\n        /* \"#utility.yul\":3679:3684   */\n      dup2\n        /* \"#utility.yul\":3661:3685   */\n      tag_49\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3654:3659   */\n      dup2\n        /* \"#utility.yul\":3651:3686   */\n      eq\n        /* \"#utility.yul\":3641:3704   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3697:3698   */\n      dup1\n        /* \"#utility.yul\":3690:3702   */\n      revert\n        /* \"#utility.yul\":3641:3704   */\n    tag_81:\n        /* \"#utility.yul\":3588:3710   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220015763f4546da404b7aa1e78260fddb196fa327ca4b8fed793415905783d1ad264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1024": {
									"entryPoint": null,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_863": {
									"entryPoint": null,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_875": {
									"entryPoint": 196,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6105db806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b6040516100659190610473565b60405180910390f35b610088600480360381019061008391906103f1565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104ae565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104ae565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061048e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103eb8161058e565b92915050565b60006020828403121561040757610406610511565b5b6000610415848285016103dc565b91505092915050565b610427816104df565b82525050565b600061043a6026836104ce565b915061044582610516565b604082019050919050565b600061045d6020836104ce565b915061046882610565565b602082019050919050565b6000602082019050610488600083018461041e565b92915050565b600060208201905081810360008301526104a78161042d565b9050919050565b600060208201905081810360008301526104c781610450565b9050919050565b600082825260208201905092915050565b60006104ea826104f1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610597816104df565b81146105a257600080fd5b5056fea2646970667358221220015763f4546da404b7aa1e78260fddb196fa327ca4b8fed793415905783d1ad264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DB DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EB DUP2 PUSH2 0x58E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x407 JUMPI PUSH2 0x406 PUSH2 0x511 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x415 DUP5 DUP3 DUP6 ADD PUSH2 0x3DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A PUSH1 0x26 DUP4 PUSH2 0x4CE JUMP JUMPDEST SWAP2 POP PUSH2 0x445 DUP3 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D PUSH1 0x20 DUP4 PUSH2 0x4CE JUMP JUMPDEST SWAP2 POP PUSH2 0x468 DUP3 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A7 DUP2 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C7 DUP2 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP2 EQ PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD JUMPI PUSH4 0xF4546DA4 DIV 0xB7 0xAA 0x1E PUSH25 0x260FDDB196FA327CA4B8FED793415905783D1AD264736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "590:1697:4:-:0;;;827:136;;;;;;;;;;848:17;868:12;:10;;;:12;;:::i;:::-;848:32;;895:9;886:6;;:18;;;;;;;;;;;;;;;;;;948:9;915:43;;944:1;915:43;;;;;;;;;;;;842:121;590:1697;;763:99:2;808:15;846:10;831:26;;763:99;:::o;590:1697:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_875": {
									"entryPoint": 679,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1107": {
									"entryPoint": 687,
									"id": 1107,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_1033": {
									"entryPoint": 477,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1068": {
									"entryPoint": 138,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1081": {
									"entryPoint": 518,
									"id": 1081,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3713:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:5"
															},
															"nodeType": "YulIf",
															"src": "228:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:5",
														"type": ""
													}
												],
												"src": "152:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:5",
														"type": ""
													}
												],
												"src": "487:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "767:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "833:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "774:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "939:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "850:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "850:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "963:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "753:3:5",
														"type": ""
													}
												],
												"src": "611:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1129:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1139:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1222:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1222:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1324:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1335:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1340:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1324:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1117:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1125:3:5",
														"type": ""
													}
												],
												"src": "983:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1453:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1463:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1475:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1486:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1471:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1463:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1543:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1556:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1552:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1552:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1499:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1499:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1425:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1437:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1448:4:5",
														"type": ""
													}
												],
												"src": "1355:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1754:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1764:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1776:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1787:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1764:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1811:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1822:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1830:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1800:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1856:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1990:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1864:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1856:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1734:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1749:4:5",
														"type": ""
													}
												],
												"src": "1583:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2179:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2189:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2201:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2197:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2189:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2236:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2247:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2232:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2232:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2255:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2225:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2281:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2415:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2289:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2281:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2159:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2174:4:5",
														"type": ""
													}
												],
												"src": "2008:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2473:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2483:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2493:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2483:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2466:6:5",
														"type": ""
													}
												],
												"src": "2433:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2610:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2627:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2632:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2648:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2667:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2648:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2582:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2587:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2598:11:5",
														"type": ""
													}
												],
												"src": "2514:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2734:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2744:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2773:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2755:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2744:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2716:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2726:7:5",
														"type": ""
													}
												],
												"src": "2689:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2868:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2846:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2818:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2828:7:5",
														"type": ""
													}
												],
												"src": "2791:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3012:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3032:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2923:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3135:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3152:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3155:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3046:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3275:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3305:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3309:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3286:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3365:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3373:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3378:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3354:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3354:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3267:6:5",
														"type": ""
													}
												],
												"src": "3169:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3506:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3528:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3536:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3524:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3524:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3540:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3517:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3517:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3498:6:5",
														"type": ""
													}
												],
												"src": "3400:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3688:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3690:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3690:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3690:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3654:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3679:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3661:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3661:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3651:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3651:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3644:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:43:5"
															},
															"nodeType": "YulIf",
															"src": "3641:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3624:5:5",
														"type": ""
													}
												],
												"src": "3588:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b6040516100659190610473565b60405180910390f35b610088600480360381019061008391906103f1565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104ae565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104ae565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061048e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103eb8161058e565b92915050565b60006020828403121561040757610406610511565b5b6000610415848285016103dc565b91505092915050565b610427816104df565b82525050565b600061043a6026836104ce565b915061044582610516565b604082019050919050565b600061045d6020836104ce565b915061046882610565565b602082019050919050565b6000602082019050610488600083018461041e565b92915050565b600060208201905081810360008301526104a78161042d565b9050919050565b600060208201905081810360008301526104c781610450565b9050919050565b600082825260208201905092915050565b60006104ea826104f1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610597816104df565b81146105a257600080fd5b5056fea2646970667358221220015763f4546da404b7aa1e78260fddb196fa327ca4b8fed793415905783d1ad264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EB DUP2 PUSH2 0x58E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x407 JUMPI PUSH2 0x406 PUSH2 0x511 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x415 DUP5 DUP3 DUP6 ADD PUSH2 0x3DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A PUSH1 0x26 DUP4 PUSH2 0x4CE JUMP JUMPDEST SWAP2 POP PUSH2 0x445 DUP3 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D PUSH1 0x20 DUP4 PUSH2 0x4CE JUMP JUMPDEST SWAP2 POP PUSH2 0x468 DUP3 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A7 DUP2 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C7 DUP2 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP2 EQ PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD JUMPI PUSH4 0xF4546DA4 DIV 0xB7 0xAA 0x1E PUSH25 0x260FDDB196FA327CA4B8FED793415905783D1AD264736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "590:1697:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1614:127;;;:::i;:::-;;1031:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1880:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1614:127;1227:12;:10;:12::i;:::-;1217:22;;:6;;;;;;;;;;:22;;;1209:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1708:1:::1;1671:40;;1692:6;::::0;::::1;;;;;;;;1671:40;;;;;;;;;;;;1734:1;1717:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1614:127::o:0;1031:71::-;1069:7;1091:6;;;;;;;;;;;1084:13;;1031:71;:::o;1880:101::-;1227:12;:10;:12::i;:::-;1217:22;;:6;;;;;;;;;;:22;;;1209:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1948:28:::1;1967:8;1948:18;:28::i;:::-;1880:101:::0;:::o;763:99:2:-;808:15;846:10;831:26;;763:99;:::o;2074:211:4:-;2163:1;2143:22;;:8;:22;;;;2135:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2248:8;2219:38;;2240:6;;;;;;;;;;2219:38;;;;;;;;;;;;2272:8;2263:6;;:17;;;;;;;;;;;;;;;;;;2074:211;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:366::-;753:3;774:67;838:2;833:3;774:67;:::i;:::-;767:74;;850:93;939:3;850:93;:::i;:::-;968:2;963:3;959:12;952:19;;611:366;;;:::o;983:::-;1125:3;1146:67;1210:2;1205:3;1146:67;:::i;:::-;1139:74;;1222:93;1311:3;1222:93;:::i;:::-;1340:2;1335:3;1331:12;1324:19;;983:366;;;:::o;1355:222::-;1448:4;1486:2;1475:9;1471:18;1463:26;;1499:71;1567:1;1556:9;1552:17;1543:6;1499:71;:::i;:::-;1355:222;;;;:::o;1583:419::-;1749:4;1787:2;1776:9;1772:18;1764:26;;1836:9;1830:4;1826:20;1822:1;1811:9;1807:17;1800:47;1864:131;1990:4;1864:131;:::i;:::-;1856:139;;1583:419;;;:::o;2008:::-;2174:4;2212:2;2201:9;2197:18;2189:26;;2261:9;2255:4;2251:20;2247:1;2236:9;2232:17;2225:47;2289:131;2415:4;2289:131;:::i;:::-;2281:139;;2008:419;;;:::o;2514:169::-;2598:11;2632:6;2627:3;2620:19;2672:4;2667:3;2663:14;2648:29;;2514:169;;;;:::o;2689:96::-;2726:7;2755:24;2773:5;2755:24;:::i;:::-;2744:35;;2689:96;;;:::o;2791:126::-;2828:7;2868:42;2861:5;2857:54;2846:65;;2791:126;;;:::o;3046:117::-;3155:1;3152;3145:12;3169:225;3309:34;3305:1;3297:6;3293:14;3286:58;3378:8;3373:2;3365:6;3361:15;3354:33;3169:225;:::o;3400:182::-;3540:34;3536:1;3528:6;3524:14;3517:58;3400:182;:::o;3588:122::-;3661:24;3679:5;3661:24;:::i;:::-;3654:5;3651:35;3641:63;;3700:1;3697;3690:12;3641:63;3588:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "299800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2522",
								"renounceOwnership()": "30269",
								"transferOwnership(address)": "30691"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 590,
									"end": 2287,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 827,
									"end": 963,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 827,
									"end": 963,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 827,
									"end": 963,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 827,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 963,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 827,
									"end": 963,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 963,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 827,
									"end": 963,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 827,
									"end": 963,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 827,
									"end": 963,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 827,
									"end": 963,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 848,
									"end": 865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 868,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 868,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 868,
									"end": 878,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 878,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 868,
									"end": 880,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 880,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 868,
									"end": 880,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 868,
									"end": 880,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 868,
									"end": 880,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 848,
									"end": 880,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 848,
									"end": 880,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 895,
									"end": 904,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 892,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 892,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 886,
									"end": 904,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 948,
									"end": 957,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 944,
									"end": 945,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 915,
									"end": 958,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 915,
									"end": 958,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 842,
									"end": 963,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 763,
									"end": 862,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 763,
									"end": 862,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 808,
									"end": 823,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 846,
									"end": 856,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 831,
									"end": 857,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 831,
									"end": 857,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 763,
									"end": 862,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 763,
									"end": 862,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 2287,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220015763f4546da404b7aa1e78260fddb196fa327ca4b8fed793415905783d1ad264736f6c63430008070033",
									".code": [
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 590,
											"end": 2287,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1227,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1711,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1741,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1069,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1102,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1227,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1209,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1948,
											"end": 1976,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1948,
											"end": 1976,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1948,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1981,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 862,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 763,
											"end": 862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 856,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 831,
											"end": 857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 831,
											"end": 857,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 763,
											"end": 862,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2074,
											"end": 2285,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2135,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2256,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2285,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 838,
											"end": 840,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 767,
											"end": 841,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 939,
											"end": 942,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 959,
											"end": 971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 952,
											"end": 971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 952,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1342,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1569,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1847,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2197,
											"end": 2215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2245,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2846,
											"end": 2911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2846,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3046,
											"end": 3163,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3046,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3157,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3343,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3305,
											"end": 3306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3307,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3386,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3373,
											"end": 3375,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3365,
											"end": 3371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3574,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3686,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xe4a9f83f9bb52f0a8b5a234cac9d04e0f15b1b05456358c05969800bc984af9e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c7ee9980a96990c3c35552050a27adc84bec8578904551dd4ed49fd3636e158b\",\"dweb:/ipfs/QmSys1xGNgrSWSaFc18u8FtsX1tn7hRkvgVAy5ZNKPt7Bk\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x9e90d7223c9f931f18a446535c4560aef9ed7a9039c72274ac2155dcf425cbec\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1c689b0a9494b0bda163916a45e89b72c5a30c8b0710b6eb6188b2784e9342a3\",\"dweb:/ipfs/QmYm3FZnbr2P9eEBwTQqTymAc7ptVVEguhYV5ShCD2DWfW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 996,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"contracts/BEP20Token.sol": {
				"ast": {
					"absolutePath": "contracts/BEP20Token.sol",
					"exportedSymbols": {
						"BEP20Token": [
							857
						],
						"Context": [
							887
						],
						"IBEP20": [
							988
						],
						"Ownable": [
							1108
						],
						"SafeMath": [
							311
						]
					},
					"id": 858,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 858,
							"sourceUnit": 312,
							"src": "70:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 858,
							"sourceUnit": 989,
							"src": "128:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 858,
							"sourceUnit": 888,
							"src": "151:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 858,
							"sourceUnit": 1109,
							"src": "175:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 318,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 887,
										"src": "224:7:1"
									},
									"id": 319,
									"nodeType": "InheritanceSpecifier",
									"src": "224:7:1"
								},
								{
									"baseName": {
										"id": 320,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 988,
										"src": "233:6:1"
									},
									"id": 321,
									"nodeType": "InheritanceSpecifier",
									"src": "233:6:1"
								},
								{
									"baseName": {
										"id": 322,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "241:7:1"
									},
									"id": 323,
									"nodeType": "InheritanceSpecifier",
									"src": "241:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 857,
							"linearizedBaseContracts": [
								857,
								1108,
								988,
								887
							],
							"name": "BEP20Token",
							"nameLocation": "210:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 326,
									"libraryName": {
										"id": 324,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "259:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "253:27:1",
									"typeName": {
										"id": 325,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "272:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 330,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "321:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "284:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 329,
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "293:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "284:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "304:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "393:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "335:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 335,
										"keyType": {
											"id": 331,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "344:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "335:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 334,
											"keyType": {
												"id": 332,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "364:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "355:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 333,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "375:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "425:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "409:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "409:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 340,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "455:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "441:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 339,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "441:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "483:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "468:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 341,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "468:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 344,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "509:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "494:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 343,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "494:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "533:242:1",
										"statements": [
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 347,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "539:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4c6f7474657279",
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "547:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_a15bb9285290769a4459025d6b809c360cba2b48c461675d1b4f1c0f2f1c254f",
															"typeString": "literal_string \"Lottery\""
														},
														"value": "Lottery"
													},
													"src": "539:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "539:17:1"
											},
											{
												"expression": {
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 351,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4c4f5445",
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "572:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_868bec640e3ca55187e5e3af7a6c0bf10dbbb6e5a322b8f4382be8dd18f76598",
															"typeString": "literal_string \"LOTE\""
														},
														"value": "LOTE"
													},
													"src": "562:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "562:16:1"
											},
											{
												"expression": {
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 355,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "584:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "596:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "584:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "584:14:1"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "604:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030303030",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "619:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "632:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 364,
																				"name": "_decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 340,
																				"src": "646:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "638:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 362,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "638:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "638:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "632:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "631:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "619:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "604:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "604:53:1"
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 371,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "676:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 374,
														"indexExpression": {
															"expression": {
																"id": 372,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "686:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "686:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "676:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 375,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "700:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "676:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "676:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "741:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "733:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 379,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "733:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "733:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 383,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "745:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "745:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "757:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "724:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "724:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "EmitStatement",
												"src": "719:51:1"
											}
										]
									},
									"id": 389,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:0:1"
									},
									"scope": 857,
									"src": "519:256:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "891:25:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 396,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "904:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:7:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 395,
												"id": 398,
												"nodeType": "Return",
												"src": "897:14:1"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "779:48:1",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "839:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "850:8:1"
									},
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:2:1"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:9:1"
									},
									"scope": 857,
									"src": "830:86:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										901
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1029:27:1",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "1042:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1035:16:1"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "920:47:1",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "979:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 403,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "990:8:1"
									},
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1022:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 404,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1022:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:7:1"
									},
									"scope": 857,
									"src": "970:86:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										907
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1173:25:1",
										"statements": [
											{
												"expression": {
													"id": 417,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 342,
													"src": "1186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 416,
												"id": 418,
												"nodeType": "Return",
												"src": "1179:14:1"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1060:45:1",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1117:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1126:8:1"
									},
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1158:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1158:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:15:1"
									},
									"scope": 857,
									"src": "1108:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										913
									],
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "1309:23:1",
										"statements": [
											{
												"expression": {
													"id": 427,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "1322:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 426,
												"id": 428,
												"nodeType": "Return",
												"src": "1315:12:1"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1202:41:1",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1255:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 423,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1262:8:1"
									},
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:2:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1294:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1294:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:15:1"
									},
									"scope": 857,
									"src": "1246:86:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										895
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "1447:30:1",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "1460:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "1453:19:1"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "1336:44:1",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1392:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1406:8:1"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:2:1"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1438:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:9:1"
									},
									"scope": 857,
									"src": "1383:94:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										927
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "1603:36:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 449,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "1616:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 451,
													"indexExpression": {
														"id": 450,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "1626:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1616:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 448,
												"id": 452,
												"nodeType": "Return",
												"src": "1609:25:1"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "1481:42:1",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1535:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 445,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1562:8:1"
									},
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1553:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1545:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1544:17:1"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1594:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:9:1"
									},
									"scope": 857,
									"src": "1526:113:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										937
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "1909:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 466,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "1925:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1925:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 468,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "1939:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "1950:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "1915:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1915:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "1915:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1970:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 464,
												"id": 473,
												"nodeType": "Return",
												"src": "1963:11:1"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "1643:177:1",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1832:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 461,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1876:8:1"
									},
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1849:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1841:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:35:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1903:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1903:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:6:1"
									},
									"scope": 857,
									"src": "1823:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										947
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2120:45:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 486,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "2133:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 488,
														"indexExpression": {
															"id": 487,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "2145:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2133:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2152:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2133:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 485,
												"id": 491,
												"nodeType": "Return",
												"src": "2126:34:1"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1983:42:1",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2037:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 482,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2079:8:1"
									},
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2055:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2047:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2070:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2062:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:32:1"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2111:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2110:9:1"
									},
									"scope": 857,
									"src": "2028:137:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										957
									],
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "2369:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 505,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "2384:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2384:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "2398:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "2407:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "2375:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2375:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2427:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 503,
												"id": 512,
												"nodeType": "Return",
												"src": "2420:11:1"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "2169:114:1",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2295:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 500,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2336:8:1"
									},
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2311:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2303:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2328:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2320:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:33:1"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2363:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:6:1"
									},
									"scope": 857,
									"src": "2286:150:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										969
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "2973:191:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "2989:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2997:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "3008:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "2979:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2979:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "2979:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 534,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "3030:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 535,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "3038:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3038:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 544,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "3090:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3098:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 537,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "3052:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 539,
																		"indexExpression": {
																			"id": 538,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "3064:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3052:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 542,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 540,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "3072:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3072:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3052:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 260,
																"src": "3052:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3052:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "3021:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3021:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3021:121:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3155:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 550,
												"nodeType": "Return",
												"src": "3148:11:1"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "2440:424:1",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2876:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 523,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2940:8:1"
									},
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "2889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2913:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "2905:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2932:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "2924:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2888:51:1"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "2967:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2966:6:1"
									},
									"scope": 857,
									"src": "2867:297:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "3618:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "3633:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3633:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 565,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "3647:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 573,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "3695:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 566,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "3656:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 569,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 567,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "3668:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3668:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3656:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 571,
																	"indexExpression": {
																		"id": 570,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "3682:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3656:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 175,
																"src": "3656:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3656:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "3624:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3624:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "3624:83:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 561,
												"id": 578,
												"nodeType": "Return",
												"src": "3713:11:1"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "3168:361:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "3541:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3567:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3559:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "3584:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3576:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:37:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3612:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3612:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:6:1"
									},
									"scope": 857,
									"src": "3532:197:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "4276:157:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 591,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "4291:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4291:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 593,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4305:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 601,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "4353:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4370:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 594,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4314:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 595,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "4326:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4326:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4314:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 599,
																	"indexExpression": {
																		"id": 598,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "4340:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4314:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 260,
																"src": "4314:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4314:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "4282:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "4282:129:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4424:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 589,
												"id": 607,
												"nodeType": "Return",
												"src": "4417:11:1"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "3733:449:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4194:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4220:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4212:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4237:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4229:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4211:42:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4270:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4270:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4269:6:1"
									},
									"scope": 857,
									"src": "4185:248:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "4685:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "4697:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4697:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4711:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "4691:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4691:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "4691:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4731:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 626,
												"nodeType": "Return",
												"src": "4724:11:1"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "4437:183:1",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 614,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "4660:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4660:9:1"
										}
									],
									"name": "mint",
									"nameLocation": "4632:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4645:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4637:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4636:16:1"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4678:6:1"
									},
									"scope": 857,
									"src": "4623:117:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "5263:363:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 639,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "5277:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5295:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5287:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 640,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5287:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5287:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5277:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5299:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5269:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5269:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "5269:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 649,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "5353:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5374:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5366:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 650,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5366:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5366:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5353:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5378:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5345:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5345:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "5345:71:1"
											},
											{
												"expression": {
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 658,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5423:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 660,
														"indexExpression": {
															"id": 659,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5433:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5423:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 665,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "5465:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 661,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "5443:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 663,
																"indexExpression": {
																	"id": 662,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "5453:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5443:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 260,
															"src": "5443:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5423:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "5423:91:1"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 670,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5520:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 672,
														"indexExpression": {
															"id": 671,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "5530:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5520:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 677,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "5568:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 673,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "5543:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 675,
																"indexExpression": {
																	"id": 674,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "5553:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5543:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "5543:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5543:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5520:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "5520:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 682,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "5603:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "5614:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "5586:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5586:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "EmitStatement",
												"src": "5581:40:1"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "4744:437:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5193:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5211:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5203:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5203:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5227:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5219:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5246:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5238:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5202:51:1"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5263:0:1"
									},
									"scope": 857,
									"src": "5184:442:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "5933:227:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 697,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "5947:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5966:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5958:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 698,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5958:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5958:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5947:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5970:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5939:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5939:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "5939:65:1"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "6011:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 709,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "6043:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 707,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "6026:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "6026:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6026:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6011:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "6011:39:1"
											},
											{
												"expression": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 713,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "6056:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 715,
														"indexExpression": {
															"id": 714,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "6066:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6056:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 720,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "6100:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 716,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "6077:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 718,
																"indexExpression": {
																	"id": 717,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "6087:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6077:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "6077:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6077:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6056:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "6056:51:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6135:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6127:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6127:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6127:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "6139:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "6148:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "6118:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6118:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "EmitStatement",
												"src": "6113:42:1"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "5630:243:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5885:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "5891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5916:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "5908:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5890:33:1"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5933:0:1"
									},
									"scope": 857,
									"src": "5876:284:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "6512:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 743,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "6526:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6545:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6537:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 744,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6537:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6537:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6526:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6549:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6518:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "6518:67:1"
											},
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 752,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "6592:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 754,
														"indexExpression": {
															"id": 753,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "6602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6592:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 759,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "6636:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6644:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 755,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "6613:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 757,
																"indexExpression": {
																	"id": 756,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "6623:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6613:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 260,
															"src": "6613:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6613:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6592:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "6592:89:1"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 764,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "6687:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 767,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "6719:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 765,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "6702:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "6702:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6702:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6687:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "6687:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 772,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "6746:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6763:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6755:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 773,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6755:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6755:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6767:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 771,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "6737:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6737:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "EmitStatement",
												"src": "6732:42:1"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "6164:288:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6464:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6478:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "6470:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6495:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "6487:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:33:1"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6512:0:1"
									},
									"scope": 857,
									"src": "6455:324:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7251:239:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 792,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "7265:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7282:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7274:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 793,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7274:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7274:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7265:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7286:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7257:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7257:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "7257:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 802,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "7339:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7358:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7350:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 803,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7350:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7350:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7339:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7362:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7331:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7331:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7331:68:1"
											},
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 811,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "7406:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 814,
															"indexExpression": {
																"id": 812,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "7418:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7406:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 815,
														"indexExpression": {
															"id": 813,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "7425:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7406:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 816,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "7436:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7406:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "7406:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 820,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7462:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "7469:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "7478:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 819,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "7453:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7453:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "EmitStatement",
												"src": "7448:37:1"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "6783:390:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "7185:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7202:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7194:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7194:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7217:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7209:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7193:48:1"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7251:0:1"
									},
									"scope": 857,
									"src": "7176:314:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "7715:158:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 835,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "7727:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "7736:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 834,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "7721:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7721:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "7721:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "7758:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 841,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "7767:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7767:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 850,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "7820:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7828:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 843,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "7781:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 845,
																		"indexExpression": {
																			"id": 844,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "7793:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7781:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 848,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "7802:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7802:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7781:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 260,
																"src": "7781:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7781:86:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 839,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "7749:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7749:119:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "7749:119:1"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7494:157:1",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "7663:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7681:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "7673:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7673:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7698:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "7690:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7690:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7672:33:1"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7715:0:1"
									},
									"scope": 857,
									"src": "7654:219:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 858,
							"src": "201:7674:1",
							"usedErrors": []
						}
					],
					"src": "37:7838:1"
				},
				"id": 1
			},
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							887
						]
					},
					"id": 888,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 859,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 887,
							"linearizedBaseContracts": [
								887
							],
							"name": "Context",
							"nameLocation": "579:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "756:3:2",
										"statements": []
									},
									"id": 863,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:2:2"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:2"
									},
									"scope": 887,
									"src": "741:18:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "825:37:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 870,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "846:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "846:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "838:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 868,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "838:8:2",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 867,
												"id": 873,
												"nodeType": "Return",
												"src": "831:26:2"
											}
										]
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "772:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "782:2:2"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "808:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "808:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:17:2"
									},
									"scope": 887,
									"src": "763:99:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "923:155:2",
										"statements": [
											{
												"expression": {
													"id": 880,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "929:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$887",
														"typeString": "contract Context"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "929:4:2"
											},
											{
												"expression": {
													"expression": {
														"id": 882,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1065:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1065:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 879,
												"id": 884,
												"nodeType": "Return",
												"src": "1058:15:2"
											}
										]
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "875:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:2:2"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "909:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 877,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "909:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:14:2"
									},
									"scope": 887,
									"src": "866:212:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 888,
							"src": "570:510:2",
							"usedErrors": []
						}
					],
					"src": "37:1043:2"
				},
				"id": 2
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							988
						]
					},
					"id": 989,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 889,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 988,
							"linearizedBaseContracts": [
								988
							],
							"name": "IBEP20",
							"nameLocation": "80:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "91:62:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 895,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "165:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:2:3"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "202:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:9:3"
									},
									"scope": 988,
									"src": "156:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "215:47:3",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "274:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:2:3"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "308:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 898,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "308:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:7:3"
									},
									"scope": 988,
									"src": "265:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "319:45:3",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "376:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:2:3"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "408:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 904,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "408:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:15:3"
									},
									"scope": 988,
									"src": "367:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "427:41:3",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "480:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:2:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "510:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 910,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:15:3"
									},
									"scope": 988,
									"src": "471:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "529:48:3",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "589:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:3"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:9:3"
									},
									"scope": 988,
									"src": "580:52:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "636:68:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "716:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "734:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "726:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:17:3"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "766:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:9:3"
									},
									"scope": 988,
									"src": "707:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "779:197:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "988:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1005:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "997:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1024:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1016:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:35:3"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1050:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1050:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:6:3"
									},
									"scope": 988,
									"src": "979:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "1060:252:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1324:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1342:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1334:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1358:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1350:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:33:3"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1390:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:9:3"
									},
									"scope": 988,
									"src": "1315:84:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1403:616:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2031:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2047:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2039:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2064:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2056:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:33:3"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2090:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2090:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:6:3"
									},
									"scope": 988,
									"src": "2022:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "2100:280:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2392:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2413:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2405:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2429:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2421:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2448:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2440:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:51:3"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2474:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2474:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:6:3"
									},
									"scope": 988,
									"src": "2383:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "2484:148:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 978,
									"name": "Transfer",
									"nameLocation": "2641:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2666:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2650:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2688:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2672:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2700:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2692:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:57:3"
									},
									"src": "2635:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "2711:142:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 987,
									"name": "Approval",
									"nameLocation": "2862:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2887:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2871:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2910:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2894:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2894:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2927:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2919:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2919:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:63:3"
									},
									"src": "2856:78:3"
								}
							],
							"scope": 989,
							"src": "70:2866:3",
							"usedErrors": []
						}
					],
					"src": "37:2899:3"
				},
				"id": 3
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							887
						],
						"Ownable": [
							1108
						]
					},
					"id": 1109,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 990,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:4"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 991,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1109,
							"sourceUnit": 888,
							"src": "70:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 993,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 887,
										"src": "610:7:4"
									},
									"id": 994,
									"nodeType": "InheritanceSpecifier",
									"src": "610:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 992,
								"nodeType": "StructuredDocumentation",
								"src": "95:494:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1108,
							"linearizedBaseContracts": [
								1108,
								887
							],
							"name": "Ownable",
							"nameLocation": "599:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 996,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "638:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1108,
									"src": "622:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 995,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "622:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1002,
									"name": "OwnershipTransferred",
									"nameLocation": "655:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "692:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "676:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "723:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "707:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:57:4"
									},
									"src": "649:84:4"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "842:121:4",
										"statements": [
											{
												"assignments": [
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "856:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1023,
														"src": "848:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1006,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "848:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1008,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "868:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "848:32:4"
											},
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1011,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "886:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1012,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "895:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "886:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "886:18:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "944:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "936:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "936:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "936:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "948:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1015,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "915:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "915:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "EmitStatement",
												"src": "910:48:4"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "737:87:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1024,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:4"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:0:4"
									},
									"scope": 1108,
									"src": "827:136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "1078:24:4",
										"statements": [
											{
												"expression": {
													"id": 1030,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 996,
													"src": "1091:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1031,
												"nodeType": "Return",
												"src": "1084:13:4"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "967:61:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1040:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:2:4"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:9:4"
									},
									"scope": 1108,
									"src": "1031:71:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "1203:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1037,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "1217:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1038,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "1227:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1227:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1217:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1209:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1209:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1209:67:4"
											},
											{
												"id": 1044,
												"nodeType": "PlaceholderStatement",
												"src": "1282:1:4"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "1106:73:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1046,
									"name": "onlyOwner",
									"nameLocation": "1191:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:2:4"
									},
									"src": "1182:106:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "1660:81:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1053,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "1692:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1708:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1700:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1054,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1700:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1700:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1052,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "1671:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1671:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "EmitStatement",
												"src": "1666:45:4"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1060,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1717:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1726:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1726:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1726:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1717:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "1717:19:4"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "1292:319:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "1650:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1650:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1623:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:2:4"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1660:0:4"
									},
									"scope": 1108,
									"src": "1614:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "1942:39:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "1967:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1076,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1948:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1948:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "1948:28:4"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "1745:132:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1073,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "1932:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1889:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1915:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "1907:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:18:4"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1942:0:4"
									},
									"scope": 1108,
									"src": "1880:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "2129:156:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1088,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "2143:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2163:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2155:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1089,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2155:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2155:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2143:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2167:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2135:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "2135:73:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1098,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "2240:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "2248:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1097,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "2219:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "EmitStatement",
												"src": "2214:43:4"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "2263:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1103,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "2272:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2263:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "2263:17:4"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "1985:86:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2083:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2101:18:4"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2129:0:4"
									},
									"scope": 1108,
									"src": "2074:211:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1109,
							"src": "590:1697:4",
							"usedErrors": []
						}
					],
					"src": "37:2251:4"
				},
				"id": 4
			}
		}
	}
}